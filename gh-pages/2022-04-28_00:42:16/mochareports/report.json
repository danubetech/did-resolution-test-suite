{
  "stats": {
    "suites": 2,
    "tests": 65,
    "passes": 42,
    "pending": 0,
    "failures": 23,
    "start": "2022-04-28T00:40:48.391Z",
    "end": "2022-04-28T00:42:14.538Z",
    "duration": 83946,
    "testsRegistered": 65,
    "passPercent": 64.61538461538461,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ec3987c1-7dfa-45c7-8f14-0c32ca0877fb",
      "title": "",
      "fullFile": "cypress/integration/resolver_spec.js",
      "file": "cypress/integration/resolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ff3a128e-91bc-495d-a6c6-49539af3bd90",
          "title": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 200",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP code 200",
              "timedOut": null,
              "duration": 640,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "afdd8dd9-0c9a-429d-87d1-da894611a5a8",
              "parentUUID": "ff3a128e-91bc-495d-a6c6-49539af3bd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return a JSON object",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "657f1c5d-d2d6-402c-b328-70d648066cdf",
              "parentUUID": "ff3a128e-91bc-495d-a6c6-49539af3bd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "timedOut": null,
              "duration": 815,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n});",
              "err": {},
              "uuid": "dab71102-c096-4266-94ad-8fc3877af08f",
              "parentUUID": "ff3a128e-91bc-495d-a6c6-49539af3bd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocument",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocument",
              "timedOut": null,
              "duration": 366,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "a40ea95b-a1e3-4ed9-af63-44e7fb467d61",
              "parentUUID": "ff3a128e-91bc-495d-a6c6-49539af3bd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didResolutionMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didResolutionMetadata",
              "timedOut": null,
              "duration": 379,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didResolutionMetadata\");\n});",
              "err": {},
              "uuid": "48511509-ebf3-43ce-852f-63b6f39e2cb9",
              "parentUUID": "ff3a128e-91bc-495d-a6c6-49539af3bd90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocumentMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocumentMetadata",
              "timedOut": null,
              "duration": 293,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocumentMetadata\");\n});",
              "err": {},
              "uuid": "66499160-3222-4817-b7f6-93e133f6a0a5",
              "parentUUID": "ff3a128e-91bc-495d-a6c6-49539af3bd90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afdd8dd9-0c9a-429d-87d1-da894611a5a8",
            "657f1c5d-d2d6-402c-b328-70d648066cdf",
            "dab71102-c096-4266-94ad-8fc3877af08f",
            "a40ea95b-a1e3-4ed9-af63-44e7fb467d61",
            "48511509-ebf3-43ce-852f-63b6f39e2cb9",
            "66499160-3222-4817-b7f6-93e133f6a0a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2672,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "083c2487-6b35-4b81-b581-dc0c7d722eec",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have response status 200",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have response status 200",
              "timedOut": null,
              "duration": 195,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "f280c6d4-76d6-472a-9f98-ebbe6f1effdf",
              "parentUUID": "083c2487-6b35-4b81-b581-dc0c7d722eec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 2: JSON-LD DID document MUST return a JSON object",
              "timedOut": null,
              "duration": 1446,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "ce0a7a1d-e72d-49a0-b2ef-5382f4b3ae6c",
              "parentUUID": "083c2487-6b35-4b81-b581-dc0c7d722eec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with content type",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have header with content type",
              "timedOut": null,
              "duration": 591,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "9c15046e-30db-4710-9603-9c9e69879fba",
              "parentUUID": "083c2487-6b35-4b81-b581-dc0c7d722eec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not have property didDocument",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should not have property didDocument",
              "timedOut": null,
              "duration": 579,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "fa4628fc-7f68-4b2f-a5a8-980fb0a6416f",
              "parentUUID": "083c2487-6b35-4b81-b581-dc0c7d722eec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have property @context",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have property @context",
              "timedOut": null,
              "duration": 304,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "fcb7101f-f32c-4b41-b050-8efbaeb0c4d1",
              "parentUUID": "083c2487-6b35-4b81-b581-dc0c7d722eec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f280c6d4-76d6-472a-9f98-ebbe6f1effdf",
            "ce0a7a1d-e72d-49a0-b2ef-5382f4b3ae6c",
            "9c15046e-30db-4710-9603-9c9e69879fba",
            "fa4628fc-7f68-4b2f-a5a8-980fb0a6416f",
            "fcb7101f-f32c-4b41-b050-8efbaeb0c4d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3115,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "671bbece-d547-4cfc-b314-35f927bdf2d7",
          "title": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 345,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  headers: {\n    Accept: \"application/did+cbor\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "3173f640-c767-4452-9aca-8d98a349a53a",
              "parentUUID": "671bbece-d547-4cfc-b314-35f927bdf2d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3173f640-c767-4452-9aca-8d98a349a53a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 345,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "95a5d5ec-dc6e-4e4a-8c5e-dffb0e2044ca",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 406",
              "fullTitle": "Test Scenario 3: Representation not supported MUST return HTTP code 406",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  failOnStatusCode: false,\n  headers: {\n    Accept: \"image/png\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(406);\n});",
              "err": {},
              "uuid": "485dab51-5b66-471f-98cb-d9de0ac3d593",
              "parentUUID": "95a5d5ec-dc6e-4e4a-8c5e-dffb0e2044ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "485dab51-5b66-471f-98cb-d9de0ac3d593"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 343,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a8ee69e1-be1e-4898-821f-692aa7a73da7",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 410",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP code 410",
              "timedOut": null,
              "duration": 138,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(410);\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:224:36)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "3c96f3fb-17ab-4753-a3bb-a2c0093c081b",
              "parentUUID": "a8ee69e1-be1e-4898-821f-692aa7a73da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 4: Deactivated MUST return a JSON object",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "9db0defb-b0c2-43ee-a212-af069ccbd2b8",
              "parentUUID": "a8ee69e1-be1e-4898-821f-692aa7a73da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP header Content-Type",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "48f72832-42fb-4f6e-a6ee-801ba86de0c8",
              "parentUUID": "a8ee69e1-be1e-4898-821f-692aa7a73da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "fullTitle": "Test Scenario 4: Deactivated JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "timedOut": null,
              "duration": 115,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal true",
                "estack": "AssertionError: expected undefined to equal true\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:251:66)",
                "diff": null
              },
              "uuid": "25d33bac-2a21-4e11-8f74-531080dc3ce3",
              "parentUUID": "a8ee69e1-be1e-4898-821f-692aa7a73da7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9db0defb-b0c2-43ee-a212-af069ccbd2b8",
            "48f72832-42fb-4f6e-a6ee-801ba86de0c8"
          ],
          "failures": [
            "3c96f3fb-17ab-4753-a3bb-a2c0093c081b",
            "25d33bac-2a21-4e11-8f74-531080dc3ce3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 513,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b5e26558-9a04-4ccc-b685-8953df5ca69f",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 404",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP code 404",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "12fd3631-3c27-414a-85a8-9354d48a9d0d",
              "parentUUID": "b5e26558-9a04-4ccc-b685-8953df5ca69f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "cf216462-34e7-4ccd-a311-6001a34dbeab",
              "parentUUID": "b5e26558-9a04-4ccc-b685-8953df5ca69f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 5: Not found MUST return a JSON object",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "b0f53575-2476-482b-b111-6a2abcdae4c5",
              "parentUUID": "b5e26558-9a04-4ccc-b685-8953df5ca69f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "fullTitle": "Test Scenario 5: Not found JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "timedOut": null,
              "duration": 269,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n});",
              "err": {},
              "uuid": "510cf352-5c40-4980-8740-367b12e8e521",
              "parentUUID": "b5e26558-9a04-4ccc-b685-8953df5ca69f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12fd3631-3c27-414a-85a8-9354d48a9d0d",
            "cf216462-34e7-4ccd-a311-6001a34dbeab",
            "b0f53575-2476-482b-b111-6a2abcdae4c5",
            "510cf352-5c40-4980-8740-367b12e8e521"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 634,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "62f5f716-1f34-45b3-b685-c21b983e21ff",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 400",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP code 400",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
              "err": {},
              "uuid": "c1a5a9ad-31c2-436e-be71-1de13d910e1f",
              "parentUUID": "62f5f716-1f34-45b3-b685-c21b983e21ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "1c7acd5f-775f-4d84-904b-edcde849329a",
              "parentUUID": "62f5f716-1f34-45b3-b685-c21b983e21ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return a JSON object",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "cb02164a-a895-4007-83fb-1a07039817c7",
              "parentUUID": "62f5f716-1f34-45b3-b685-c21b983e21ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "fullTitle": "Test Scenario 6: Invalid DID JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.contain(\"invalidDid\");\n});",
              "err": {},
              "uuid": "c0347756-97ac-446d-babf-172031750faa",
              "parentUUID": "62f5f716-1f34-45b3-b685-c21b983e21ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1a5a9ad-31c2-436e-be71-1de13d910e1f",
            "1c7acd5f-775f-4d84-904b-edcde849329a",
            "cb02164a-a895-4007-83fb-1a07039817c7",
            "c0347756-97ac-446d-babf-172031750faa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 491,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8ef98d13-d7be-40f5-b1d7-ba7db17ca729",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Must return HTTP code 200",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Must return HTTP code 200",
              "timedOut": null,
              "duration": 197,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "d24be39f-c4e9-4b39-959f-5280764e1cb3",
              "parentUUID": "8ef98d13-d7be-40f5-b1d7-ba7db17ca729",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return a JSON object",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "7ae5a5fc-f150-4265-90fb-3006b7f9b0a0",
              "parentUUID": "8ef98d13-d7be-40f5-b1d7-ba7db17ca729",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return HTTP header Content-Type with value application/did+ld+json",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "2b4de0ee-1dd0-4804-aec0-49f29cb71cfc",
              "parentUUID": "8ef98d13-d7be-40f5-b1d7-ba7db17ca729",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST NOT contain property didDocument",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST NOT contain property didDocument",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "f4667091-cb49-40f5-8a63-3eee8ddca9d2",
              "parentUUID": "8ef98d13-d7be-40f5-b1d7-ba7db17ca729",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 1194,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "7660014a-a5d8-4d5e-844f-506a5b292e6f",
              "parentUUID": "8ef98d13-d7be-40f5-b1d7-ba7db17ca729",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property type",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property type",
              "timedOut": null,
              "duration": 521,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"type\");\n});",
              "err": {},
              "uuid": "4c9b0ea8-7566-49b1-b74d-cb87380d7c94",
              "parentUUID": "8ef98d13-d7be-40f5-b1d7-ba7db17ca729",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property id with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property id with value application/did+ld+json",
              "timedOut": null,
              "duration": 492,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body[\"id\"]).to.contain(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {},
              "uuid": "0662b159-2d9d-46da-8d58-2e38e0a6e7cb",
              "parentUUID": "8ef98d13-d7be-40f5-b1d7-ba7db17ca729",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d24be39f-c4e9-4b39-959f-5280764e1cb3",
            "7ae5a5fc-f150-4265-90fb-3006b7f9b0a0",
            "2b4de0ee-1dd0-4804-aec0-49f29cb71cfc",
            "f4667091-cb49-40f5-8a63-3eee8ddca9d2",
            "7660014a-a5d8-4d5e-844f-506a5b292e6f",
            "4c9b0ea8-7566-49b1-b74d-cb87380d7c94",
            "0662b159-2d9d-46da-8d58-2e38e0a6e7cb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3000,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d57199d7-1f8f-4b94-ba03-f41fd7d9f47d",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:web:danubetech.com?service=github&relativeRef=did-method-dns\",\n  headers: {\n    Accept: \"text/uri-list\"\n  },\n  failOnStatusCode: false\n}).as(\"response\");\nit(\"MUST return HTTP response status equals 303\", () => {\n  cy.get(\"@response\").then(response => {\n    expect(response.status).to.eq(303);\n  });\n});\nit(\"MUST return a JSON object\", () => {\n  cy.get(\"@request\").then(response => {\n    expect(response).to.be.a(\"object\");\n  });\n});",
              "err": {},
              "uuid": "e348f1dc-d96f-485f-a337-96f9aea4abec",
              "parentUUID": "d57199d7-1f8f-4b94-ba03-f41fd7d9f47d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e348f1dc-d96f-485f-a337-96f9aea4abec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 155,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e7a1307e-d410-4a49-9b13-152de585714a",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 233,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "deb42404-e560-4f05-a2d3-4f4041a4742e",
              "parentUUID": "e7a1307e-d410-4a49-9b13-152de585714a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return a JSON object",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "f1f432be-45d1-4d1e-9888-818e2ef2fc55",
              "parentUUID": "e7a1307e-d410-4a49-9b13-152de585714a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property verificationMethod of type JsonWebKey2020",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property verificationMethod of type JsonWebKey2020",
              "timedOut": null,
              "duration": 287,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  response.body.verificationMethod.forEach(out => {\n    expect(out).has.property(\"type\", \"JsonWebKey2020\");\n  });\n});",
              "err": {},
              "uuid": "cee7d898-7d2a-4c4a-b561-a21e01289680",
              "parentUUID": "e7a1307e-d410-4a49-9b13-152de585714a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 195,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "89d124ed-a654-447a-893d-0b99e4b8ad19",
              "parentUUID": "e7a1307e-d410-4a49-9b13-152de585714a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:WRfXPg8dantKVubE3HX8pw\");\n});",
              "err": {},
              "uuid": "f6b5aa24-1b12-4669-be32-1a881cd68b8c",
              "parentUUID": "e7a1307e-d410-4a49-9b13-152de585714a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "deb42404-e560-4f05-a2d3-4f4041a4742e",
            "f1f432be-45d1-4d1e-9888-818e2ef2fc55",
            "cee7d898-7d2a-4c4a-b561-a21e01289680",
            "89d124ed-a654-447a-893d-0b99e4b8ad19",
            "f6b5aa24-1b12-4669-be32-1a881cd68b8c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1067,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da95b1d4-f4af-48ce-b824-4a50df40736e",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5044,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:486:10)",
                "diff": null
              },
              "uuid": "c8ea3ef6-40e0-4fc6-a4fa-ecc5be2cadfc",
              "parentUUID": "da95b1d4-f4af-48ce-b824-4a50df40736e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 5064,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:498:10)",
                "diff": null
              },
              "uuid": "9cf25a6d-31ad-4da2-9707-afa56df925da",
              "parentUUID": "da95b1d4-f4af-48ce-b824-4a50df40736e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return JSON object",
              "timedOut": null,
              "duration": 5064,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:510:10)",
                "diff": null
              },
              "uuid": "7c055fda-0e17-40e5-8ede-1d43ed127b5f",
              "parentUUID": "da95b1d4-f4af-48ce-b824-4a50df40736e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property @context",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property @context",
              "timedOut": null,
              "duration": 5063,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:522:10)",
                "diff": null
              },
              "uuid": "3217d679-54ae-4915-8072-ecacaf3b89de",
              "parentUUID": "da95b1d4-f4af-48ce-b824-4a50df40736e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id with value ",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property id with value ",
              "timedOut": null,
              "duration": 5062,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:534:10)",
                "diff": null
              },
              "uuid": "f4575b9b-02d4-4dd1-b168-897798fba11e",
              "parentUUID": "da95b1d4-f4af-48ce-b824-4a50df40736e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c8ea3ef6-40e0-4fc6-a4fa-ecc5be2cadfc",
            "9cf25a6d-31ad-4da2-9707-afa56df925da",
            "7c055fda-0e17-40e5-8ede-1d43ed127b5f",
            "3217d679-54ae-4915-8072-ecacaf3b89de",
            "f4575b9b-02d4-4dd1-b168-897798fba11e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25297,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "96c62b80-36d6-42c2-be3e-c62eadaf0614",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5065,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:551:10)",
                "diff": null
              },
              "uuid": "e07803da-9efe-4717-9717-f32207cec8f3",
              "parentUUID": "96c62b80-36d6-42c2-be3e-c62eadaf0614",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return JSON object",
              "timedOut": null,
              "duration": 5065,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:563:10)",
                "diff": null
              },
              "uuid": "9948a303-bc49-4125-8b16-7f52a258c857",
              "parentUUID": "96c62b80-36d6-42c2-be3e-c62eadaf0614",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 5067,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:575:10)",
                "diff": null
              },
              "uuid": "c5d70c76-da4b-4f3b-90cc-b384213ed61c",
              "parentUUID": "96c62b80-36d6-42c2-be3e-c62eadaf0614",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 5067,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:587:10)",
                "diff": null
              },
              "uuid": "de844c80-deb7-41ff-a723-b9911c4518c5",
              "parentUUID": "96c62b80-36d6-42c2-be3e-c62eadaf0614",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST contain property id",
              "timedOut": null,
              "duration": 5070,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:599:10)",
                "diff": null
              },
              "uuid": "ffd5392b-163e-4ccf-b5cf-22ba418f041b",
              "parentUUID": "96c62b80-36d6-42c2-be3e-c62eadaf0614",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e07803da-9efe-4717-9717-f32207cec8f3",
            "9948a303-bc49-4125-8b16-7f52a258c857",
            "c5d70c76-da4b-4f3b-90cc-b384213ed61c",
            "de844c80-deb7-41ff-a723-b9911c4518c5",
            "ffd5392b-163e-4ccf-b5cf-22ba418f041b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25334,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe41c7ba-52aa-401e-b0e7-b4e91e1586da",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 1210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "865c96f4-6524-4af5-a8e5-66528e875198",
              "parentUUID": "fe41c7ba-52aa-401e-b0e7-b4e91e1586da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 378,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "885472e0-f165-4ec4-8059-8928fd70475f",
              "parentUUID": "fe41c7ba-52aa-401e-b0e7-b4e91e1586da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property id",
              "timedOut": null,
              "duration": 410,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "e6b68abd-a653-4664-85ca-b6e0ed828a87",
              "parentUUID": "fe41c7ba-52aa-401e-b0e7-b4e91e1586da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property keyAgreement",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property keyAgreement",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"keyAgreement\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "cf8fbf3b-73cc-4d0e-8eb7-3eceef306ea5",
              "parentUUID": "fe41c7ba-52aa-401e-b0e7-b4e91e1586da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "865c96f4-6524-4af5-a8e5-66528e875198",
            "885472e0-f165-4ec4-8059-8928fd70475f",
            "e6b68abd-a653-4664-85ca-b6e0ed828a87",
            "cf8fbf3b-73cc-4d0e-8eb7-3eceef306ea5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2197,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "633e2aaa-8b5a-49c8-bde0-4496f5b62184",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 230,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:677:36)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "730aec3a-7d00-48c8-a0c2-322aecc1b36d",
              "parentUUID": "633e2aaa-8b5a-49c8-bde0-4496f5b62184",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "timedOut": null,
              "duration": 994,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n});",
              "err": {
                "message": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given",
                "estack": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/resolver_spec.js:689:9)",
                "diff": null
              },
              "uuid": "04161eb4-5336-4b27-bf08-302eef65df93",
              "parentUUID": "633e2aaa-8b5a-49c8-bde0-4496f5b62184",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "730aec3a-7d00-48c8-a0c2-322aecc1b36d",
            "04161eb4-5336-4b27-bf08-302eef65df93"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1224,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a17a0c93-3d9d-4e84-bcd5-590f500461d8",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_fixtures_spec.js",
      "file": "cypress/integration/uniresolver_fixtures_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c40e0b8-67e9-4cc6-833f-48f8afc26b03",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 2493,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 500 to equal 200",
                "estack": "AssertionError: expected 500 to equal 200\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:113:40)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "0c8490fd-25b1-4805-afcd-40c6cd27d775",
              "parentUUID": "5c40e0b8-67e9-4cc6-833f-48f8afc26b03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0c8490fd-25b1-4805-afcd-40c6cd27d775"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2493,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "23406a0b-e3e4-4300-87f7-a9589c4786a1",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 1534,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"@context\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected { Object (id, verificationMethod, ...) } to have property '@context'",
                "estack": "AssertionError: expected { Object (id, verificationMethod, ...) } to have property '@context'\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:151:43)",
                "diff": null
              },
              "uuid": "567c1dd7-0cc0-4c2b-9fd1-2e0bf22003b4",
              "parentUUID": "23406a0b-e3e4-4300-87f7-a9589c4786a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "567c1dd7-0cc0-4c2b-9fd1-2e0bf22003b4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1534,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "be8c0f85-cbea-4eb0-8892-107fae414cf2",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 1419,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n    });\n  });\n});",
              "err": {},
              "uuid": "e1bdc52f-a390-4977-af4a-e22a8e83ab2e",
              "parentUUID": "be8c0f85-cbea-4eb0-8892-107fae414cf2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1bdc52f-a390-4977-af4a-e22a8e83ab2e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e2846e95-a737-4489-a13b-42e942979aeb",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 121,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); //FAILS\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:218:40)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "c7b99f64-f848-49e2-8923-fb6fc1518610",
              "parentUUID": "e2846e95-a737-4489-a13b-42e942979aeb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c7b99f64-f848-49e2-8923-fb6fc1518610"
          ],
          "pending": [],
          "skipped": [],
          "duration": 121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "547a96fc-2f45-4511-a0cc-217359088a5a",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 157,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {},
              "uuid": "247cddc8-8157-4a80-b441-a4823c9c145b",
              "parentUUID": "547a96fc-2f45-4511-a0cc-217359088a5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "247cddc8-8157-4a80-b441-a4823c9c145b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 157,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "605e7fcd-5cd8-49ee-830a-59d95ad03aad",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 121,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 'invalidDidUrl' to equal 'invalidDid'",
                "estack": "AssertionError: expected 'invalidDidUrl' to equal 'invalidDid'\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:263:66)",
                "diff": "- 'invalidDidUrl'\n+ 'invalidDid'\n"
              },
              "uuid": "efb508bc-76c0-488c-8071-b5cd829e9f62",
              "parentUUID": "605e7fcd-5cd8-49ee-830a-59d95ad03aad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "efb508bc-76c0-488c-8071-b5cd829e9f62"
          ],
          "pending": [],
          "skipped": [],
          "duration": 121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "17331e4b-b064-45c5-b268-cf4edc89a675",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 179,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    cy.get(\"@response\").then(response => {\n      expect(response.status).to.eq(303);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 200 to equal 303",
                "estack": "AssertionError: expected 200 to equal 303\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:316:40)",
                "diff": "- 200\n+ 303\n"
              },
              "uuid": "a1337497-9266-4b3c-b67c-443efa39bcd6",
              "parentUUID": "17331e4b-b064-45c5-b268-cf4edc89a675",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a1337497-9266-4b3c-b67c-443efa39bcd6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 179,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c784bb31-a4ee-4a3c-a33f-c2f6be4617a5",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5045,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"versionTimeDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionTimeDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionTimeDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response).to.be.a(\"object\");\n      expect(response.body).to.have.property(\"@context\");\n      expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:39543/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:360:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:358:27)",
                "diff": null
              },
              "uuid": "0b318e20-77df-4e14-89f9-c2c0d878c959",
              "parentUUID": "c784bb31-a4ee-4a3c-a33f-c2f6be4617a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0b318e20-77df-4e14-89f9-c2c0d878c959"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5045,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a84ca0c1-1a49-48c8-ae61-d1f12e0a05d4",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5094,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"versionIdDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionIdDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionIdDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      expect(response.body).to.have.property(\"@context\");\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:39543/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:39543/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:39543/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:39543/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:39543/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:39543/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:39543/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:39543/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:39543/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:39543/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:387:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:385:27)",
                "diff": null
              },
              "uuid": "cc677863-5796-47c1-b632-1e61dfe9e38d",
              "parentUUID": "a84ca0c1-1a49-48c8-ae61-d1f12e0a05d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cc677863-5796-47c1-b632-1e61dfe9e38d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5094,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a0289a86-af05-4eb8-b5de-ec162839c016",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 1175,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 500 to equal 200",
                "estack": "AssertionError: expected 500 to equal 200\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:424:40)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "960e6042-6d12-4b8e-8928-53a23c1e019c",
              "parentUUID": "a0289a86-af05-4eb8-b5de-ec162839c016",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "960e6042-6d12-4b8e-8928-53a23c1e019c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1175,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6ff0beee-cf09-4b13-aaa6-44ec4b90ed35",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 221,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:39543/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:450:40)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "ca64ba72-e793-44b9-b7b5-972589cccab5",
              "parentUUID": "6ff0beee-cf09-4b13-aaa6-44ec4b90ed35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ca64ba72-e793-44b9-b7b5-972589cccab5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 221,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}