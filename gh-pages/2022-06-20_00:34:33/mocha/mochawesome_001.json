{
  "stats": {
    "suites": 11,
    "tests": 11,
    "passes": 0,
    "pending": 0,
    "failures": 11,
    "start": "2022-06-20T00:33:32.847Z",
    "end": "2022-06-20T00:34:28.861Z",
    "duration": 56014,
    "testsRegistered": 11,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "35e397c9-fc5b-4d5d-a80a-27d947094bab",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_fixtures_spec.js",
      "file": "cypress/integration/uniresolver_fixtures_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d7062fdf-66ce-470e-825b-46335b2e0a54",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 5055,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46381/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46381/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46381/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46381/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46381/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46381/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:107:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:105:27)",
                "diff": null
              },
              "uuid": "845972a0-0cda-404f-8495-a8ee3cb1455d",
              "parentUUID": "d7062fdf-66ce-470e-825b-46335b2e0a54",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "845972a0-0cda-404f-8495-a8ee3cb1455d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5055,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "53196401-b37e-411b-a25a-c15a4c15c475",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 5085,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).has.property(\"id\").contains(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46381/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46381/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46381/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46381/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46381/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46381/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:139:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:137:27)",
                "diff": null
              },
              "uuid": "314bd8de-21f4-4694-a8bd-e7921d636581",
              "parentUUID": "53196401-b37e-411b-a25a-c15a4c15c475",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "314bd8de-21f4-4694-a8bd-e7921d636581"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5085,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "838718bf-32ca-4461-a3c2-a0b836447bd9",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 5078,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46381/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46381/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46381/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46381/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46381/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46381/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:192:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:190:27)",
                "diff": null
              },
              "uuid": "8106babf-0cea-40cf-be84-37ee12fab28d",
              "parentUUID": "838718bf-32ca-4461-a3c2-a0b836447bd9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8106babf-0cea-40cf-be84-37ee12fab28d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5078,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "011bc225-435e-4ab1-a34c-330025da6afe",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 5068,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); //FAILS\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46381/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46381/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46381/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46381/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46381/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46381/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:215:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:213:27)",
                "diff": null
              },
              "uuid": "1969c992-5f1d-44cb-aa2e-4395e2c8d96d",
              "parentUUID": "011bc225-435e-4ab1-a34c-330025da6afe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1969c992-5f1d-44cb-aa2e-4395e2c8d96d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5068,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2c888aec-b67a-45a8-aa99-73c765a03fd7",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 5071,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:0000000000000000000000\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46381/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46381/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46381/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46381/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46381/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46381/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:237:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:235:27)",
                "diff": null
              },
              "uuid": "966fcce8-3948-4129-82a7-9e835459966c",
              "parentUUID": "2c888aec-b67a-45a8-aa99-73c765a03fd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "966fcce8-3948-4129-82a7-9e835459966c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5071,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f27e8f4d-02a1-4b0b-9528-292490f67b1a",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 5069,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).contains(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:example_222\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46381/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46381/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46381/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46381/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46381/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46381/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:258:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:256:27)",
                "diff": null
              },
              "uuid": "eb9d1ac3-799c-4da2-8f61-c2192ace0862",
              "parentUUID": "f27e8f4d-02a1-4b0b-9528-292490f67b1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "eb9d1ac3-799c-4da2-8f61-c2192ace0862"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5069,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f85e4f9d-c49b-4681-97e1-896c4abf0b2e",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Can resolve a DID with a fragment",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Can resolve a DID with a fragment",
              "timedOut": null,
              "duration": 5061,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"fragmentDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      failOnStatusCode: false,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      }\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"id\");\n      expect(response.body[\"id\"]).to.contain(decodeURIComponent(fragmentDid.split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did%3Asov%3AWRfXPg8dantKVubE3HX8pw%23key-1\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46381/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46381/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46381/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46381/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46381/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46381/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:279:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:277:27)",
                "diff": null
              },
              "uuid": "0350559e-e919-47fe-93b2-6bdc2979af5c",
              "parentUUID": "f85e4f9d-c49b-4681-97e1-896c4abf0b2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0350559e-e919-47fe-93b2-6bdc2979af5c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5061,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "644f91f8-ec1e-452e-a656-cd8757c67aea",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 5075,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    console.log(\"FRAGMENT DID IS\", fragmentDid);\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    it(\"MUST return HTTP response status equals 303\", () => {\n      cy.get(\"@response\").then(response => {\n        expect(response.status).to.eq(303);\n      });\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:web:danubetech.com?service=github&relativeRef=did-method-dns\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46381/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46381/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46381/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46381/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46381/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46381/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:308:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:305:27)",
                "diff": null
              },
              "uuid": "0bf5e961-09ad-4490-93e6-2b572077ceb3",
              "parentUUID": "644f91f8-ec1e-452e-a656-cd8757c67aea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0bf5e961-09ad-4490-93e6-2b572077ceb3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5075,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9fb2d93f-f536-46c3-9659-c1f0a062c7fa",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5085,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"transformKeyDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const transformKeyDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + transformKeyDid,\n      headers: {\n        Accept: \"application/did+ld+json\",\n        Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      response.body.verificationMethod.forEach(out => {\n        expect(out).has.property(\"type\").to.be.oneOf([\"JsonWebKey2020\", \"Ed25519VerificationKey2018\", \"X25519KeyAgreementKey2019\"]);\n      });\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", decodeURIComponent(transformKeyDid.split(\"?\")[0].split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46381/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46381/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46381/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46381/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46381/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46381/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:333:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:331:27)",
                "diff": null
              },
              "uuid": "5a535e07-9ca3-4901-a727-3f1c27bfb779",
              "parentUUID": "9fb2d93f-f536-46c3-9659-c1f0a062c7fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "5a535e07-9ca3-4901-a727-3f1c27bfb779"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5085,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "04845883-7f6d-4dd8-aaf3-f546fcc7c2d8",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5080,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46381/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46381/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46381/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46381/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46381/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46381/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:363:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:361:27)",
                "diff": null
              },
              "uuid": "594b528a-8192-4735-9149-c272e9949851",
              "parentUUID": "04845883-7f6d-4dd8-aaf3-f546fcc7c2d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "594b528a-8192-4735-9149-c272e9949851"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5080,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0a65c0ec-3152-4b11-9b9a-70fb663e98ed",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5078,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3id.org/did-resolution\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46381/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46381/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46381/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46381/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46381/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46381/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46381/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46381/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46381/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:389:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46381/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:387:27)",
                "diff": null
              },
              "uuid": "ab244eb8-46e8-41c4-baca-7d0e682d9930",
              "parentUUID": "0a65c0ec-3152-4b11-9b9a-70fb663e98ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ab244eb8-46e8-41c4-baca-7d0e682d9930"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5078,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}