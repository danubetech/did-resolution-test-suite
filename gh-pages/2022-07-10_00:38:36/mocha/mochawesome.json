{
  "stats": {
    "suites": 12,
    "tests": 44,
    "passes": 41,
    "pending": 0,
    "failures": 3,
    "start": "2022-07-10T00:37:57.899Z",
    "end": "2022-07-10T00:38:19.045Z",
    "duration": 21146,
    "testsRegistered": 44,
    "passPercent": 93.18181818181817,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b2519b0d-90e7-41ad-afb7-9d148fb1ac48",
      "title": "",
      "fullFile": "cypress/integration/resolver_spec.js",
      "file": "cypress/integration/resolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f8f978a0-4eca-4d87-86ea-caabf4bb219f",
          "title": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 200",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP code 200",
              "timedOut": null,
              "duration": 1380,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "23e7eee2-6b8d-4baf-8dd5-d0ceab1e4f8a",
              "parentUUID": "f8f978a0-4eca-4d87-86ea-caabf4bb219f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return a JSON object",
              "timedOut": null,
              "duration": 392,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "2e4bc053-d002-4efe-b420-78e08d65f753",
              "parentUUID": "f8f978a0-4eca-4d87-86ea-caabf4bb219f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "timedOut": null,
              "duration": 1301,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n});",
              "err": {},
              "uuid": "ec7f3bef-7a52-46f2-b10f-9c79366be3b9",
              "parentUUID": "f8f978a0-4eca-4d87-86ea-caabf4bb219f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocument",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocument",
              "timedOut": null,
              "duration": 501,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "47b2db3e-0e36-4907-b0d2-2d8f6990edf3",
              "parentUUID": "f8f978a0-4eca-4d87-86ea-caabf4bb219f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didResolutionMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didResolutionMetadata",
              "timedOut": null,
              "duration": 507,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didResolutionMetadata\");\n});",
              "err": {},
              "uuid": "adfd6a4e-3974-4b79-81cd-e6dd38d475f3",
              "parentUUID": "f8f978a0-4eca-4d87-86ea-caabf4bb219f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocumentMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocumentMetadata",
              "timedOut": null,
              "duration": 1351,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocumentMetadata\");\n});",
              "err": {},
              "uuid": "59390f78-b952-4bbf-9a6d-439b275936d5",
              "parentUUID": "f8f978a0-4eca-4d87-86ea-caabf4bb219f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23e7eee2-6b8d-4baf-8dd5-d0ceab1e4f8a",
            "2e4bc053-d002-4efe-b420-78e08d65f753",
            "ec7f3bef-7a52-46f2-b10f-9c79366be3b9",
            "47b2db3e-0e36-4907-b0d2-2d8f6990edf3",
            "adfd6a4e-3974-4b79-81cd-e6dd38d475f3",
            "59390f78-b952-4bbf-9a6d-439b275936d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5432,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "100b57f2-d774-430f-8450-8a64117513cb",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have response status 200",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have response status 200",
              "timedOut": null,
              "duration": 510,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "6ac3bcc6-26e5-483f-862b-2ace6f319a88",
              "parentUUID": "100b57f2-d774-430f-8450-8a64117513cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 2: JSON-LD DID document MUST return a JSON object",
              "timedOut": null,
              "duration": 1357,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "8ff873b2-6f91-442b-85e5-1392c3a12410",
              "parentUUID": "100b57f2-d774-430f-8450-8a64117513cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with content type",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have header with content type",
              "timedOut": null,
              "duration": 514,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "20fb5bcd-35c9-41b1-9ecd-6c593934e526",
              "parentUUID": "100b57f2-d774-430f-8450-8a64117513cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not have property didDocument",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should not have property didDocument",
              "timedOut": null,
              "duration": 510,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "5305ffdc-3338-4110-b950-77995bebff88",
              "parentUUID": "100b57f2-d774-430f-8450-8a64117513cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have property @context",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have property @context",
              "timedOut": null,
              "duration": 291,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "f3f17854-ab7c-4de3-bb46-53f33170e2e2",
              "parentUUID": "100b57f2-d774-430f-8450-8a64117513cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ac3bcc6-26e5-483f-862b-2ace6f319a88",
            "8ff873b2-6f91-442b-85e5-1392c3a12410",
            "20fb5bcd-35c9-41b1-9ecd-6c593934e526",
            "5305ffdc-3338-4110-b950-77995bebff88",
            "f3f17854-ab7c-4de3-bb46-53f33170e2e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3182,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "da690838-76e6-4d61-8154-07975bc68ccb",
          "title": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  headers: {\n    Accept: \"application/did+cbor\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "4b290df9-8497-4a82-acee-b7c9f3ffe818",
              "parentUUID": "da690838-76e6-4d61-8154-07975bc68ccb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b290df9-8497-4a82-acee-b7c9f3ffe818"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b21e2ebb-bdb6-46b4-bf06-d5e01e901da1",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 406",
              "fullTitle": "Test Scenario 3: Representation not supported MUST return HTTP code 406",
              "timedOut": null,
              "duration": 387,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  failOnStatusCode: false,\n  headers: {\n    Accept: \"image/png\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(406);\n});",
              "err": {},
              "uuid": "c5cda840-a5de-4a2c-afe1-f96128a41dc8",
              "parentUUID": "b21e2ebb-bdb6-46b4-bf06-d5e01e901da1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5cda840-a5de-4a2c-afe1-f96128a41dc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 387,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "88dda330-16f2-424a-a169-bf16c1ba83c8",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 410",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP code 410",
              "timedOut": null,
              "duration": 190,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(410);\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:46679/__cypress/tests?p=cypress/integration/resolver_spec.js:225:36)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "78702850-7e2f-448f-8e49-249d49549ce2",
              "parentUUID": "88dda330-16f2-424a-a169-bf16c1ba83c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 4: Deactivated MUST return a JSON object",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "e4855a20-78ad-445e-a58e-2f051186b041",
              "parentUUID": "88dda330-16f2-424a-a169-bf16c1ba83c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP header Content-Type",
              "timedOut": null,
              "duration": 134,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "ef67bafe-01ed-462a-9446-82af02a7069c",
              "parentUUID": "88dda330-16f2-424a-a169-bf16c1ba83c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "fullTitle": "Test Scenario 4: Deactivated JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "timedOut": null,
              "duration": 125,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal true",
                "estack": "AssertionError: expected undefined to equal true\n    at Context.eval (http://localhost:46679/__cypress/tests?p=cypress/integration/resolver_spec.js:253:66)",
                "diff": null
              },
              "uuid": "adcc9e95-ef15-4ed1-81c5-0c2a6f7bd373",
              "parentUUID": "88dda330-16f2-424a-a169-bf16c1ba83c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4855a20-78ad-445e-a58e-2f051186b041",
            "ef67bafe-01ed-462a-9446-82af02a7069c"
          ],
          "failures": [
            "78702850-7e2f-448f-8e49-249d49549ce2",
            "adcc9e95-ef15-4ed1-81c5-0c2a6f7bd373"
          ],
          "pending": [],
          "skipped": [],
          "duration": 585,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "82bb9846-142a-4104-a76e-fcb6195ad4ee",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 404",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP code 404",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "29b7d5ff-2073-4868-a376-6e9d268244c9",
              "parentUUID": "82bb9846-142a-4104-a76e-fcb6195ad4ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "ca721f2e-83ab-4d6b-97a0-02e7d62cd2f8",
              "parentUUID": "82bb9846-142a-4104-a76e-fcb6195ad4ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 5: Not found MUST return a JSON object",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "7acdd971-ef68-494f-bcdf-73ec958811c2",
              "parentUUID": "82bb9846-142a-4104-a76e-fcb6195ad4ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "fullTitle": "Test Scenario 5: Not found JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "timedOut": null,
              "duration": 309,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'error')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'error')\n    at Context.eval (http://localhost:46679/__cypress/tests?p=cypress/integration/resolver_spec.js:294:52)",
                "diff": null
              },
              "uuid": "65683249-6611-4e55-9060-5242c5a1c1be",
              "parentUUID": "82bb9846-142a-4104-a76e-fcb6195ad4ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29b7d5ff-2073-4868-a376-6e9d268244c9",
            "ca721f2e-83ab-4d6b-97a0-02e7d62cd2f8",
            "7acdd971-ef68-494f-bcdf-73ec958811c2"
          ],
          "failures": [
            "65683249-6611-4e55-9060-5242c5a1c1be"
          ],
          "pending": [],
          "skipped": [],
          "duration": 688,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "46f3d1ea-c442-4832-baa7-e5b14f998302",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 400",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP code 400",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
              "err": {},
              "uuid": "80f99cbc-d89d-45b1-a998-41c71b975099",
              "parentUUID": "46f3d1ea-c442-4832-baa7-e5b14f998302",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "78af958c-519d-4ac1-9524-8b5d1b5d5ad2",
              "parentUUID": "46f3d1ea-c442-4832-baa7-e5b14f998302",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return a JSON object",
              "timedOut": null,
              "duration": 123,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "8fd3a86b-d409-4ce7-a279-3df385ec5474",
              "parentUUID": "46f3d1ea-c442-4832-baa7-e5b14f998302",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "fullTitle": "Test Scenario 6: Invalid DID JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.contain(\"invalidDid\");\n});",
              "err": {},
              "uuid": "6d31348e-404d-4832-a50b-f5619bca63b2",
              "parentUUID": "46f3d1ea-c442-4832-baa7-e5b14f998302",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80f99cbc-d89d-45b1-a998-41c71b975099",
            "78af958c-519d-4ac1-9524-8b5d1b5d5ad2",
            "8fd3a86b-d409-4ce7-a279-3df385ec5474",
            "6d31348e-404d-4832-a50b-f5619bca63b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 508,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "052100aa-6d03-4276-bc61-a64da8023e74",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Must return HTTP code 200",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Must return HTTP code 200",
              "timedOut": null,
              "duration": 238,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "c144f623-6a01-4e38-b9d5-45a1d27277c2",
              "parentUUID": "052100aa-6d03-4276-bc61-a64da8023e74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return a JSON object",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "1b00e61d-6802-4c98-96e1-c4e30744186d",
              "parentUUID": "052100aa-6d03-4276-bc61-a64da8023e74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return HTTP header Content-Type with value application/did+ld+json",
              "timedOut": null,
              "duration": 898,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "3eb64c19-eb1e-463d-9440-9bb869096bf6",
              "parentUUID": "052100aa-6d03-4276-bc61-a64da8023e74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST NOT contain property didDocument",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST NOT contain property didDocument",
              "timedOut": null,
              "duration": 419,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "6d5499d9-9353-4c65-88ef-0c50d21ec4d9",
              "parentUUID": "052100aa-6d03-4276-bc61-a64da8023e74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 376,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "0c3cdeba-d181-46ab-8d9c-1acad2ce26e0",
              "parentUUID": "052100aa-6d03-4276-bc61-a64da8023e74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property type",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property type",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"type\");\n});",
              "err": {},
              "uuid": "fbbbb9a6-d9b3-4f3b-8d39-0ddb1b5de8c4",
              "parentUUID": "052100aa-6d03-4276-bc61-a64da8023e74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property id with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property id with value application/did+ld+json",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body[\"id\"]).to.contain(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {},
              "uuid": "3696aa4f-8e1b-4deb-987b-dd82328eaef8",
              "parentUUID": "052100aa-6d03-4276-bc61-a64da8023e74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c144f623-6a01-4e38-b9d5-45a1d27277c2",
            "1b00e61d-6802-4c98-96e1-c4e30744186d",
            "3eb64c19-eb1e-463d-9440-9bb869096bf6",
            "6d5499d9-9353-4c65-88ef-0c50d21ec4d9",
            "0c3cdeba-d181-46ab-8d9c-1acad2ce26e0",
            "fbbbb9a6-d9b3-4f3b-8d39-0ddb1b5de8c4",
            "3696aa4f-8e1b-4deb-987b-dd82328eaef8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2520,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "25f029ea-e7fa-4946-98aa-a8d7421ccec2",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:web:danubetech.com?service=github&relativeRef=did-method-dns\",\n  headers: {\n    Accept: \"text/uri-list\"\n  },\n  failOnStatusCode: false\n}).as(\"response\");\nit(\"MUST return HTTP response status equals 303\", () => {\n  cy.get(\"@response\").then(response => {\n    expect(response.status).to.eq(303);\n  });\n});\nit(\"MUST return a JSON object\", () => {\n  cy.get(\"@request\").then(response => {\n    expect(response).to.be.a(\"object\");\n  });\n});",
              "err": {},
              "uuid": "0950a305-f639-46ec-8374-ebb5888f622d",
              "parentUUID": "25f029ea-e7fa-4946-98aa-a8d7421ccec2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0950a305-f639-46ec-8374-ebb5888f622d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2e8f2a3a-e041-47de-9038-34e8f0db7de0",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 1352,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "c224edc2-f577-4e7a-a5f5-680b037cb837",
              "parentUUID": "2e8f2a3a-e041-47de-9038-34e8f0db7de0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return a JSON object",
              "timedOut": null,
              "duration": 493,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "3824d6bd-be22-4b8e-902e-2176593009c0",
              "parentUUID": "2e8f2a3a-e041-47de-9038-34e8f0db7de0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property verificationMethod of type JsonWebKey2020",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property verificationMethod of type JsonWebKey2020",
              "timedOut": null,
              "duration": 1345,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  response.body.verificationMethod.forEach(out => {\n    expect(out).has.property(\"type\", \"JsonWebKey2020\");\n  });\n});",
              "err": {},
              "uuid": "1f5596e9-d2fb-4228-9d9d-a0eda07dc0bb",
              "parentUUID": "2e8f2a3a-e041-47de-9038-34e8f0db7de0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 475,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "3a6b3493-2fcf-4f43-98e6-e698daed0c66",
              "parentUUID": "2e8f2a3a-e041-47de-9038-34e8f0db7de0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "timedOut": null,
              "duration": 481,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\",\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:WRfXPg8dantKVubE3HX8pw\");\n});",
              "err": {},
              "uuid": "672f88e8-eb36-4493-ae2d-0189ef11a9c4",
              "parentUUID": "2e8f2a3a-e041-47de-9038-34e8f0db7de0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c224edc2-f577-4e7a-a5f5-680b037cb837",
            "3824d6bd-be22-4b8e-902e-2176593009c0",
            "1f5596e9-d2fb-4228-9d9d-a0eda07dc0bb",
            "3a6b3493-2fcf-4f43-98e6-e698daed0c66",
            "672f88e8-eb36-4493-ae2d-0189ef11a9c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4146,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "71e76cf9-0d3c-4dd0-8e26-e6fc3e30af96",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 931,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "5510ca0c-399f-482a-ad44-5244c2311791",
              "parentUUID": "71e76cf9-0d3c-4dd0-8e26-e6fc3e30af96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 380,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "a9faafa3-fed7-4dc9-8439-10eddc987a85",
              "parentUUID": "71e76cf9-0d3c-4dd0-8e26-e6fc3e30af96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property id",
              "timedOut": null,
              "duration": 409,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "f6c1cd56-aba4-4a00-aefc-3f26433d093a",
              "parentUUID": "71e76cf9-0d3c-4dd0-8e26-e6fc3e30af96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property keyAgreement",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property keyAgreement",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"keyAgreement\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "52e3814f-a73a-4d23-9081-e93af380f6f6",
              "parentUUID": "71e76cf9-0d3c-4dd0-8e26-e6fc3e30af96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5510ca0c-399f-482a-ad44-5244c2311791",
            "a9faafa3-fed7-4dc9-8439-10eddc987a85",
            "f6c1cd56-aba4-4a00-aefc-3f26433d093a",
            "52e3814f-a73a-4d23-9081-e93af380f6f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1927,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8520dec8-fa8f-4434-91e6-4f89218f1d8a",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3id.org/did-resolution\"',\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "abfee926-1ddd-425a-8c57-47daebd09a21",
              "parentUUID": "8520dec8-fa8f-4434-91e6-4f89218f1d8a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "timedOut": null,
              "duration": 860,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3id.org/did-resolution\"',\n    Authorization: \"Bearer b082c420-df67-4b06-899c-b7c51d75fba0\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "e3282e5d-e98d-47db-9080-522b93724ebd",
              "parentUUID": "8520dec8-fa8f-4434-91e6-4f89218f1d8a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "abfee926-1ddd-425a-8c57-47daebd09a21",
            "e3282e5d-e98d-47db-9080-522b93724ebd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1060,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}