{
  "stats": {
    "suites": 4,
    "tests": 76,
    "passes": 51,
    "pending": 0,
    "failures": 25,
    "start": "2022-04-04T16:38:55.115Z",
    "end": "2022-04-04T16:41:02.306Z",
    "duration": 119449,
    "testsRegistered": 76,
    "passPercent": 67.10526315789474,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2bb9cbbe-91b2-4130-84e5-8e370b300fb0",
      "title": "",
      "fullFile": "cypress/integration/admin/godiddy_spec.js",
      "file": "cypress/integration/admin/godiddy_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aacb2760-c629-4381-a0ee-0b2ca52bc246",
          "title": "Test Scenario 13: Retrieve configuration properties",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 878,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "95fb295d-7979-49f2-9a35-4163fd9f9641",
              "parentUUID": "aacb2760-c629-4381-a0ee-0b2ca52bc246",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties MUST return JSON object",
              "timedOut": null,
              "duration": 240,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "fd253893-85a5-4e9b-84ad-ccf22810c321",
              "parentUUID": "aacb2760-c629-4381-a0ee-0b2ca52bc246",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties HTTP response must contain content-type property with value",
              "timedOut": null,
              "duration": 234,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response.headers).has.property(\"content-type\", \"application/json\");\n});",
              "err": {
                "message": "AssertionError: expected { Object (date, content-type, ...) } to have property 'content-type' of 'application/json', but got 'application/json;charset=utf-8'",
                "estack": "AssertionError: expected { Object (date, content-type, ...) } to have property 'content-type' of 'application/json', but got 'application/json;charset=utf-8'\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/admin/godiddy_spec.js:121:36)",
                "diff": "- 'application/json;charset=utf-8'\n+ 'application/json'\n"
              },
              "uuid": "220ae066-4e20-4275-b572-2548531571c5",
              "parentUUID": "aacb2760-c629-4381-a0ee-0b2ca52bc246",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95fb295d-7979-49f2-9a35-4163fd9f9641",
            "fd253893-85a5-4e9b-84ad-ccf22810c321"
          ],
          "failures": [
            "220ae066-4e20-4275-b572-2548531571c5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1352,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ff19afe-a22c-482e-8664-4da262fe484f",
          "title": "Test Scenario 14: Retrieve supported DID methods",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test HTTP response",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods Test HTTP response",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "5a39b854-da9f-454e-9cbe-bb48a321113a",
              "parentUUID": "0ff19afe-a22c-482e-8664-4da262fe484f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods MUST return a JSON object",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "df2290b9-be58-4ed3-8f32-413c6b5999eb",
              "parentUUID": "0ff19afe-a22c-482e-8664-4da262fe484f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain body of type array",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods MUST contain body of type array",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.be.a(\"array\");\n});",
              "err": {},
              "uuid": "ffc994f3-3cb2-4271-8225-178215a084c8",
              "parentUUID": "0ff19afe-a22c-482e-8664-4da262fe484f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test HTTP response",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods Test HTTP response",
              "timedOut": null,
              "duration": 204,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.deep.equal([\"btcr\", \"sov\", \"v1\", \"web\", \"ethr\", \"jolo\", \"elem\", \"github\", \"key\", \"ion\", \"gatc\", \"ebsi\", \"tz\", \"pkh\"]);\n});",
              "err": {},
              "uuid": "c04f40b4-3934-44b1-97d0-8a4daf7269d1",
              "parentUUID": "0ff19afe-a22c-482e-8664-4da262fe484f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a39b854-da9f-454e-9cbe-bb48a321113a",
            "df2290b9-be58-4ed3-8f32-413c6b5999eb",
            "ffc994f3-3cb2-4271-8225-178215a084c8",
            "c04f40b4-3934-44b1-97d0-8a4daf7269d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 808,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9cb04617-72b7-43bb-a4af-d774a5d070cc",
          "title": "Test Scenario 15: Retrieve object of test identifiers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 190,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "c3a81ed5-b0f8-4a17-84de-ef4bb8971bfa",
              "parentUUID": "9cb04617-72b7-43bb-a4af-d774a5d070cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return a JSON object",
              "timedOut": null,
              "duration": 207,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "ef53c7bc-d87d-47f1-a7ba-cef6c585e4eb",
              "parentUUID": "9cb04617-72b7-43bb-a4af-d774a5d070cc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a body of type object",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return a body of type object",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "f2028d38-3df8-4f98-afe4-e3aab19d871e",
              "parentUUID": "9cb04617-72b7-43bb-a4af-d774a5d070cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3a81ed5-b0f8-4a17-84de-ef4bb8971bfa",
            "ef53c7bc-d87d-47f1-a7ba-cef6c585e4eb",
            "f2028d38-3df8-4f98-afe4-e3aab19d871e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 600,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "226543ec-c2e1-4b05-8d87-69d99f54fdd1",
      "title": "",
      "fullFile": "cypress/integration/admin/test_example_spec.js",
      "file": "cypress/integration/admin/test_example_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "51ae7a5b-2093-4195-a31e-db0a4c5c3109",
          "title": "Test example DIDs on endpoint: api.dev.godiddy.com",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tests if all example DIDs return HTTP status 200",
              "fullTitle": "Test example DIDs on endpoint: api.dev.godiddy.com Tests if all example DIDs return HTTP status 200",
              "timedOut": null,
              "duration": 768,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "function getExamples() {\n  cy.request({\n    method: \"GET\",\n    url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n    failOnStatusCode: false\n  }).then(response => {\n    const methods = response.body;\n    cy.wrap(methods).as(\"examplesGodiddy\");\n  });\n}\ngetExamples();\ncy.get(\"@examplesGodiddy\").then(response => {\n  console.log(response);\n  Object.keys(response).forEach(key => {\n    response[key].forEach(did => {\n      cy.request({\n        method: \"GET\",\n        url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/identifiers/\" + did,\n        failOnStatusCode: false\n      }).then(response => {\n        softExpect(response.status).to.eq(200);\n      });\n    });\n  });\n});",
              "err": {
                "message": "TypeError: softExpect is not a function",
                "estack": "TypeError: softExpect is not a function\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/admin/test_example_spec.js:125:13)",
                "diff": null
              },
              "uuid": "374328e9-1a79-43c7-b2d6-da1a6ae27075",
              "parentUUID": "51ae7a5b-2093-4195-a31e-db0a4c5c3109",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "374328e9-1a79-43c7-b2d6-da1a6ae27075"
          ],
          "pending": [],
          "skipped": [],
          "duration": 768,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "419a9d53-ada6-470c-b993-73c8bd737374",
      "title": "",
      "fullFile": "cypress/integration/user/resolver_spec.js",
      "file": "cypress/integration/user/resolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5696fc78-6761-4adc-a226-273998685a28",
          "title": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 200",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP code 200",
              "timedOut": null,
              "duration": 2398,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "8f6387f4-b5eb-4819-8e96-d3a01902d513",
              "parentUUID": "5696fc78-6761-4adc-a226-273998685a28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return a JSON object",
              "timedOut": null,
              "duration": 804,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "7ab6d438-01b7-4865-81b8-2c9ee06e3020",
              "parentUUID": "5696fc78-6761-4adc-a226-273998685a28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "timedOut": null,
              "duration": 2792,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n});",
              "err": {},
              "uuid": "ff64a273-2f58-4f4e-9374-dd4f08b8a48d",
              "parentUUID": "5696fc78-6761-4adc-a226-273998685a28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocument",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocument",
              "timedOut": null,
              "duration": 1143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "a90bc86e-1f5c-4440-af93-815604feefaf",
              "parentUUID": "5696fc78-6761-4adc-a226-273998685a28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didResolutionMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didResolutionMetadata",
              "timedOut": null,
              "duration": 1112,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didResolutionMetadata\");\n});",
              "err": {},
              "uuid": "aee1cdf9-cb5d-4156-a28d-256060e395f4",
              "parentUUID": "5696fc78-6761-4adc-a226-273998685a28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocumentMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocumentMetadata",
              "timedOut": null,
              "duration": 1928,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocumentMetadata\");\n});",
              "err": {},
              "uuid": "e13b1d6a-aa2b-428f-94da-1d2f96a135ad",
              "parentUUID": "5696fc78-6761-4adc-a226-273998685a28",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8f6387f4-b5eb-4819-8e96-d3a01902d513",
            "7ab6d438-01b7-4865-81b8-2c9ee06e3020",
            "ff64a273-2f58-4f4e-9374-dd4f08b8a48d",
            "a90bc86e-1f5c-4440-af93-815604feefaf",
            "aee1cdf9-cb5d-4156-a28d-256060e395f4",
            "e13b1d6a-aa2b-428f-94da-1d2f96a135ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10177,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "daeb52d5-a550-420e-ae01-de38206dc6ea",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have response status 200",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have response status 200",
              "timedOut": null,
              "duration": 779,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "a5ed205c-ac0c-40fd-b478-e64bf2ad3533",
              "parentUUID": "daeb52d5-a550-420e-ae01-de38206dc6ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 2: JSON-LD DID document MUST return a JSON object",
              "timedOut": null,
              "duration": 1208,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "eaf96ec8-67ae-48ee-9366-40913dc29a0d",
              "parentUUID": "daeb52d5-a550-420e-ae01-de38206dc6ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with content type",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have header with content type",
              "timedOut": null,
              "duration": 510,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "25093e5c-a17c-4db1-94b4-2f2bd49a2f21",
              "parentUUID": "daeb52d5-a550-420e-ae01-de38206dc6ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not have property didDocument",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should not have property didDocument",
              "timedOut": null,
              "duration": 505,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "5cb357ca-b81c-441a-9e54-60541d8a838f",
              "parentUUID": "daeb52d5-a550-420e-ae01-de38206dc6ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have property @context",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have property @context",
              "timedOut": null,
              "duration": 1789,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "cfb0d12c-000f-455d-8b41-e7d2eaa41e9e",
              "parentUUID": "daeb52d5-a550-420e-ae01-de38206dc6ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5ed205c-ac0c-40fd-b478-e64bf2ad3533",
            "eaf96ec8-67ae-48ee-9366-40913dc29a0d",
            "25093e5c-a17c-4db1-94b4-2f2bd49a2f21",
            "5cb357ca-b81c-441a-9e54-60541d8a838f",
            "cfb0d12c-000f-455d-8b41-e7d2eaa41e9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4791,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0f712183-4c51-4d3a-ad3d-14d473c6895e",
          "title": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 721,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  headers: {\n    Accept: \"application/did+cbor\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "5ae81804-2c55-4ced-bf31-dd57ef4e1d8d",
              "parentUUID": "0f712183-4c51-4d3a-ad3d-14d473c6895e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ae81804-2c55-4ced-bf31-dd57ef4e1d8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 721,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8bd09196-2cbb-41ae-b0a6-2899531b412f",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 406",
              "fullTitle": "Test Scenario 3: Representation not supported MUST return HTTP code 406",
              "timedOut": null,
              "duration": 1915,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  failOnStatusCode: false,\n  headers: {\n    Accept: \"image/png\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(406);\n});",
              "err": {},
              "uuid": "a7eecd1a-c03a-46a3-9fb4-511d0746e80c",
              "parentUUID": "8bd09196-2cbb-41ae-b0a6-2899531b412f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7eecd1a-c03a-46a3-9fb4-511d0746e80c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1915,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1896c149-7afe-46b7-b2cc-1d77de10d1b9",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 410",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP code 410",
              "timedOut": null,
              "duration": 256,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(410);\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:224:36)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "b20cddff-b101-408a-bce3-bd9547f2ea5a",
              "parentUUID": "1896c149-7afe-46b7-b2cc-1d77de10d1b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 4: Deactivated MUST return a JSON object",
              "timedOut": null,
              "duration": 243,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "7da851a8-d3a4-4029-9e6a-3a429e15aba9",
              "parentUUID": "1896c149-7afe-46b7-b2cc-1d77de10d1b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP header Content-Type",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "0e58139d-4b12-430d-9fc3-31d4c4582919",
              "parentUUID": "1896c149-7afe-46b7-b2cc-1d77de10d1b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "fullTitle": "Test Scenario 4: Deactivated JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "timedOut": null,
              "duration": 214,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal true",
                "estack": "AssertionError: expected undefined to equal true\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:251:66)",
                "diff": null
              },
              "uuid": "4f0b7413-6484-40ea-8281-b91524aca5a9",
              "parentUUID": "1896c149-7afe-46b7-b2cc-1d77de10d1b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7da851a8-d3a4-4029-9e6a-3a429e15aba9",
            "0e58139d-4b12-430d-9fc3-31d4c4582919"
          ],
          "failures": [
            "b20cddff-b101-408a-bce3-bd9547f2ea5a",
            "4f0b7413-6484-40ea-8281-b91524aca5a9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 899,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c593e623-4a92-4063-a480-d770bb7bdd3f",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 404",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP code 404",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "489fcd0f-01e5-4ef8-b256-65a11c64d4f3",
              "parentUUID": "c593e623-4a92-4063-a480-d770bb7bdd3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 200,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "cf8ff26a-c08c-4623-9ccb-194c08645558",
              "parentUUID": "c593e623-4a92-4063-a480-d770bb7bdd3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 5: Not found MUST return a JSON object",
              "timedOut": null,
              "duration": 189,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "fd0aa827-40a4-44d2-9f0f-f4cee92f57d7",
              "parentUUID": "c593e623-4a92-4063-a480-d770bb7bdd3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "fullTitle": "Test Scenario 5: Not found JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "timedOut": null,
              "duration": 546,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n});",
              "err": {},
              "uuid": "5932eecb-ed1d-4f41-84ac-c33cd61e0a30",
              "parentUUID": "c593e623-4a92-4063-a480-d770bb7bdd3f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "489fcd0f-01e5-4ef8-b256-65a11c64d4f3",
            "cf8ff26a-c08c-4623-9ccb-194c08645558",
            "fd0aa827-40a4-44d2-9f0f-f4cee92f57d7",
            "5932eecb-ed1d-4f41-84ac-c33cd61e0a30"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1152,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "19ab70c3-3e26-4024-af88-2c2bf119a14f",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 400",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP code 400",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
              "err": {},
              "uuid": "958d0656-ec83-4574-9bea-f5586b9745ce",
              "parentUUID": "19ab70c3-3e26-4024-af88-2c2bf119a14f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "4f70d1bd-6b42-4492-a92d-7390516c7f4d",
              "parentUUID": "19ab70c3-3e26-4024-af88-2c2bf119a14f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return a JSON object",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "96761232-9de9-4daf-8732-14de671645a5",
              "parentUUID": "19ab70c3-3e26-4024-af88-2c2bf119a14f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "fullTitle": "Test Scenario 6: Invalid DID JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.contain(\"invalidDid\");\n});",
              "err": {},
              "uuid": "ae0c143e-3b1a-4782-85b2-84ac8c92b740",
              "parentUUID": "19ab70c3-3e26-4024-af88-2c2bf119a14f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "958d0656-ec83-4574-9bea-f5586b9745ce",
            "4f70d1bd-6b42-4492-a92d-7390516c7f4d",
            "96761232-9de9-4daf-8732-14de671645a5",
            "ae0c143e-3b1a-4782-85b2-84ac8c92b740"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 830,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "47c6f126-952a-448f-acd9-12e34b53885a",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Must return HTTP code 200",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Must return HTTP code 200",
              "timedOut": null,
              "duration": 798,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "84d4fbaf-a3eb-4504-bd9d-ef741380955c",
              "parentUUID": "47c6f126-952a-448f-acd9-12e34b53885a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return a JSON object",
              "timedOut": null,
              "duration": 2682,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "a5d0c28c-a4d0-4a93-aa95-bca98bf354df",
              "parentUUID": "47c6f126-952a-448f-acd9-12e34b53885a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return HTTP header Content-Type with value application/did+ld+json",
              "timedOut": null,
              "duration": 994,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "407c1d88-06db-4ba3-9eed-0e9c4b6d4af8",
              "parentUUID": "47c6f126-952a-448f-acd9-12e34b53885a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST NOT contain property didDocument",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST NOT contain property didDocument",
              "timedOut": null,
              "duration": 3001,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "b1dc6945-403f-4db8-bc3c-b5d7566efa49",
              "parentUUID": "47c6f126-952a-448f-acd9-12e34b53885a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 1058,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "13a4fdc8-ad18-4d6c-b322-bc00c04fe21f",
              "parentUUID": "47c6f126-952a-448f-acd9-12e34b53885a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property type",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property type",
              "timedOut": null,
              "duration": 1040,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"type\");\n});",
              "err": {},
              "uuid": "93a00b85-e5c5-405f-9ad3-ce722b7804a2",
              "parentUUID": "47c6f126-952a-448f-acd9-12e34b53885a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property id with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property id with value application/did+ld+json",
              "timedOut": null,
              "duration": 957,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body[\"id\"]).to.contain(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {},
              "uuid": "c5980580-242f-4da4-98b1-0368f622a386",
              "parentUUID": "47c6f126-952a-448f-acd9-12e34b53885a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84d4fbaf-a3eb-4504-bd9d-ef741380955c",
            "a5d0c28c-a4d0-4a93-aa95-bca98bf354df",
            "407c1d88-06db-4ba3-9eed-0e9c4b6d4af8",
            "b1dc6945-403f-4db8-bc3c-b5d7566efa49",
            "13a4fdc8-ad18-4d6c-b322-bc00c04fe21f",
            "93a00b85-e5c5-405f-9ad3-ce722b7804a2",
            "c5980580-242f-4da4-98b1-0368f622a386"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10530,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a4ea72cd-6eeb-4a6c-9755-59903a214764",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:web:danubetech.com?service=github&relativeRef=did-method-dns\",\n  headers: {\n    Accept: \"text/uri-list\"\n  },\n  failOnStatusCode: false\n}).as(\"response\");\nit(\"MUST return HTTP response status equals 303\", () => {\n  cy.get(\"@response\").then(response => {\n    expect(response.status).to.eq(303);\n  });\n});\nit(\"MUST return a JSON object\", () => {\n  cy.get(\"@request\").then(response => {\n    expect(response).to.be.a(\"object\");\n  });\n});",
              "err": {},
              "uuid": "13174d80-d3bf-473b-a562-b5b848f6706a",
              "parentUUID": "a4ea72cd-6eeb-4a6c-9755-59903a214764",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13174d80-d3bf-473b-a562-b5b848f6706a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 241,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7c598adb-8f98-4b01-a1df-3f8a1c2e5bfe",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 513,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "f1838c67-5b99-494a-b7ff-7236f48fc2bb",
              "parentUUID": "7c598adb-8f98-4b01-a1df-3f8a1c2e5bfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return a JSON object",
              "timedOut": null,
              "duration": 2610,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "bdb0ac63-d40a-42e9-8b40-b2238bc5583e",
              "parentUUID": "7c598adb-8f98-4b01-a1df-3f8a1c2e5bfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property verificationMethod of type JsonWebKey2020",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property verificationMethod of type JsonWebKey2020",
              "timedOut": null,
              "duration": 1030,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  response.body.verificationMethod.forEach(out => {\n    expect(out).has.property(\"type\", \"JsonWebKey2020\");\n  });\n});",
              "err": {},
              "uuid": "8a7412df-fbe7-42c0-b29e-ec2b9a40c238",
              "parentUUID": "7c598adb-8f98-4b01-a1df-3f8a1c2e5bfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 1007,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "67fad007-cf33-4f16-ba2e-eb05ff2954ba",
              "parentUUID": "7c598adb-8f98-4b01-a1df-3f8a1c2e5bfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "timedOut": null,
              "duration": 2127,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:WRfXPg8dantKVubE3HX8pw\");\n});",
              "err": {},
              "uuid": "741a603c-505f-4d56-9c09-3f1e3cf1ab5e",
              "parentUUID": "7c598adb-8f98-4b01-a1df-3f8a1c2e5bfe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1838c67-5b99-494a-b7ff-7236f48fc2bb",
            "bdb0ac63-d40a-42e9-8b40-b2238bc5583e",
            "8a7412df-fbe7-42c0-b29e-ec2b9a40c238",
            "67fad007-cf33-4f16-ba2e-eb05ff2954ba",
            "741a603c-505f-4d56-9c09-3f1e3cf1ab5e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7287,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1dda0a88-7305-4720-81dd-4f6e79b12eff",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5075,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:486:10)",
                "diff": null
              },
              "uuid": "eecce36f-cfa7-48d2-8241-67717f85cdd0",
              "parentUUID": "1dda0a88-7305-4720-81dd-4f6e79b12eff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 5077,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:498:10)",
                "diff": null
              },
              "uuid": "2124cdb1-7d46-43ed-bdbd-29b4b8163bb8",
              "parentUUID": "1dda0a88-7305-4720-81dd-4f6e79b12eff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return JSON object",
              "timedOut": null,
              "duration": 5079,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:510:10)",
                "diff": null
              },
              "uuid": "54ec3a1d-7860-497c-9d1d-ba6bbc13c80b",
              "parentUUID": "1dda0a88-7305-4720-81dd-4f6e79b12eff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property @context",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property @context",
              "timedOut": null,
              "duration": 5076,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:522:10)",
                "diff": null
              },
              "uuid": "c602e8aa-6df4-42e3-b739-a84aa156e99d",
              "parentUUID": "1dda0a88-7305-4720-81dd-4f6e79b12eff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id with value ",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property id with value ",
              "timedOut": null,
              "duration": 5089,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:534:10)",
                "diff": null
              },
              "uuid": "36cc484e-e913-4b01-91fa-f65eec6eeb43",
              "parentUUID": "1dda0a88-7305-4720-81dd-4f6e79b12eff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "eecce36f-cfa7-48d2-8241-67717f85cdd0",
            "2124cdb1-7d46-43ed-bdbd-29b4b8163bb8",
            "54ec3a1d-7860-497c-9d1d-ba6bbc13c80b",
            "c602e8aa-6df4-42e3-b739-a84aa156e99d",
            "36cc484e-e913-4b01-91fa-f65eec6eeb43"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25396,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "13161102-b594-4b3a-9e8a-1bf67dbf12d7",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5087,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:551:10)",
                "diff": null
              },
              "uuid": "f1b5ecb4-b69a-47b0-8c04-a0e55ca06765",
              "parentUUID": "13161102-b594-4b3a-9e8a-1bf67dbf12d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return JSON object",
              "timedOut": null,
              "duration": 5081,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:563:10)",
                "diff": null
              },
              "uuid": "097a253a-458e-4ecd-aada-974432c415c8",
              "parentUUID": "13161102-b594-4b3a-9e8a-1bf67dbf12d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 5082,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:575:10)",
                "diff": null
              },
              "uuid": "2bc3049c-b2aa-46c8-a262-371a75d152ac",
              "parentUUID": "13161102-b594-4b3a-9e8a-1bf67dbf12d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 5085,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:587:10)",
                "diff": null
              },
              "uuid": "d5ec0506-9b18-4a12-9e49-a9cfc17a8c09",
              "parentUUID": "13161102-b594-4b3a-9e8a-1bf67dbf12d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST contain property id",
              "timedOut": null,
              "duration": 5083,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:599:10)",
                "diff": null
              },
              "uuid": "8ea7325d-2403-44bc-949e-6ff6b74fa444",
              "parentUUID": "13161102-b594-4b3a-9e8a-1bf67dbf12d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f1b5ecb4-b69a-47b0-8c04-a0e55ca06765",
            "097a253a-458e-4ecd-aada-974432c415c8",
            "2bc3049c-b2aa-46c8-a262-371a75d152ac",
            "d5ec0506-9b18-4a12-9e49-a9cfc17a8c09",
            "8ea7325d-2403-44bc-949e-6ff6b74fa444"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25418,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "65c1ef61-7f42-4874-8a64-447759d600b6",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 804,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "3a2b9a5f-fff4-457c-8e6c-595e8ce7d3c6",
              "parentUUID": "65c1ef61-7f42-4874-8a64-447759d600b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 325,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "6fd8efd4-1543-4dfc-96a2-331f2f167419",
              "parentUUID": "65c1ef61-7f42-4874-8a64-447759d600b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property id",
              "timedOut": null,
              "duration": 391,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "6f1adcc5-01a7-4fd1-8b3b-9c63fde77092",
              "parentUUID": "65c1ef61-7f42-4874-8a64-447759d600b6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property keyAgreement",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property keyAgreement",
              "timedOut": null,
              "duration": 314,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"keyAgreement\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "a1a53856-691e-4fd1-a288-65c74456eb14",
              "parentUUID": "65c1ef61-7f42-4874-8a64-447759d600b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a2b9a5f-fff4-457c-8e6c-595e8ce7d3c6",
            "6fd8efd4-1543-4dfc-96a2-331f2f167419",
            "6f1adcc5-01a7-4fd1-8b3b-9c63fde77092",
            "a1a53856-691e-4fd1-a288-65c74456eb14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1834,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b367416c-355a-4de7-9c7c-45e4a7b7e5db",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 312,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:677:36)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "21ebeeb3-2235-4678-be9c-01eb1434b54a",
              "parentUUID": "b367416c-355a-4de7-9c7c-45e4a7b7e5db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "timedOut": null,
              "duration": 321,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n});",
              "err": {
                "message": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given",
                "estack": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/resolver_spec.js:689:9)",
                "diff": null
              },
              "uuid": "05d0737b-fa2f-431b-b9a4-0eaf04817a4f",
              "parentUUID": "b367416c-355a-4de7-9c7c-45e4a7b7e5db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "21ebeeb3-2235-4678-be9c-01eb1434b54a",
            "05d0737b-fa2f-431b-b9a4-0eaf04817a4f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 633,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "19b31a32-c1be-460a-9451-d616da0ccd0b",
      "title": "",
      "fullFile": "cypress/integration/user/uniresolver_fixtures_spec.js",
      "file": "cypress/integration/user/uniresolver_fixtures_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4a3e730e-c225-4e47-bfd0-d26499e20905",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 4024,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 500 to equal 200",
                "estack": "AssertionError: expected 500 to equal 200\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:113:40)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "969d2359-6eb7-45e5-8d00-0448dee67e5f",
              "parentUUID": "4a3e730e-c225-4e47-bfd0-d26499e20905",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "969d2359-6eb7-45e5-8d00-0448dee67e5f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4024,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "17bcbbce-44f3-4ba2-8bcd-203e4c804f2e",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 1723,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"@context\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected { Object (id, verificationMethod, ...) } to have property '@context'",
                "estack": "AssertionError: expected { Object (id, verificationMethod, ...) } to have property '@context'\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:151:43)",
                "diff": null
              },
              "uuid": "cdcc7a10-3def-4d62-889b-c4f701d6f092",
              "parentUUID": "17bcbbce-44f3-4ba2-8bcd-203e4c804f2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "cdcc7a10-3def-4d62-889b-c4f701d6f092"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1723,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d50ef28c-f3b3-4330-972b-2b8dd21b6eee",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 3477,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n    });\n  });\n});",
              "err": {},
              "uuid": "5f54379e-f0d9-45bf-85da-aed598cc0058",
              "parentUUID": "d50ef28c-f3b3-4330-972b-2b8dd21b6eee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f54379e-f0d9-45bf-85da-aed598cc0058"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3477,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "348e9328-2e02-4a41-ad46-88f54c206568",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 232,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); //FAILS\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:218:40)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "bd50702c-dd7b-45f6-9950-4023805c6b7b",
              "parentUUID": "348e9328-2e02-4a41-ad46-88f54c206568",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "bd50702c-dd7b-45f6-9950-4023805c6b7b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bf9c6820-c405-4352-a76f-157294a6535b",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 195,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {},
              "uuid": "01bfc920-6e40-41ef-b9ec-f104c4d907d2",
              "parentUUID": "bf9c6820-c405-4352-a76f-157294a6535b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01bfc920-6e40-41ef-b9ec-f104c4d907d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 195,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f36d9866-efbf-40b0-90b7-0b4b73e6203c",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 195,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 'invalidDidUrl' to equal 'invalidDid'",
                "estack": "AssertionError: expected 'invalidDidUrl' to equal 'invalidDid'\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:263:66)",
                "diff": "- 'invalidDidUrl'\n+ 'invalidDid'\n"
              },
              "uuid": "a6d6de5b-014b-407a-9246-6c34298cf38e",
              "parentUUID": "f36d9866-efbf-40b0-90b7-0b4b73e6203c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a6d6de5b-014b-407a-9246-6c34298cf38e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 195,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4a58a672-5c16-4e53-a387-11b569bd3286",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 223,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    cy.get(\"@response\").then(response => {\n      expect(response.status).to.eq(303);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 200 to equal 303",
                "estack": "AssertionError: expected 200 to equal 303\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:316:40)",
                "diff": "- 200\n+ 303\n"
              },
              "uuid": "109e5f0a-c665-4ec9-a04d-ac1dc806643f",
              "parentUUID": "4a58a672-5c16-4e53-a387-11b569bd3286",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "109e5f0a-c665-4ec9-a04d-ac1dc806643f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 223,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "400f712e-59f9-4c1b-8343-3cbb1b994a34",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5022,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"versionTimeDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionTimeDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionTimeDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response).to.be.a(\"object\");\n      expect(response.body).to.have.property(\"@context\");\n      expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:360:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:358:27)",
                "diff": null
              },
              "uuid": "4f28ddf0-2d98-41be-9b69-8bbb33dc2893",
              "parentUUID": "400f712e-59f9-4c1b-8343-3cbb1b994a34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4f28ddf0-2d98-41be-9b69-8bbb33dc2893"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5022,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb50025a-0c38-4d16-b3be-e7b60a362dd8",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5127,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"versionIdDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionIdDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionIdDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      expect(response.body).to.have.property(\"@context\");\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42571/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42571/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42571/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42571/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42571/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42571/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42571/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42571/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42571/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:387:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:385:27)",
                "diff": null
              },
              "uuid": "b56e80b9-7eda-4d28-aabc-2e3b122dae4e",
              "parentUUID": "fb50025a-0c38-4d16-b3be-e7b60a362dd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "b56e80b9-7eda-4d28-aabc-2e3b122dae4e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5127,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fdc5eee3-870c-4f21-bded-ecad78e59951",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 3138,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 500 to equal 200",
                "estack": "AssertionError: expected 500 to equal 200\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:424:40)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "46fd97c6-9c41-479b-9190-8af372c11179",
              "parentUUID": "fdc5eee3-870c-4f21-bded-ecad78e59951",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "46fd97c6-9c41-479b-9190-8af372c11179"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3138,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2715c70c-c4d4-427d-9938-44435fa23c5a",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 741,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:42571/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:450:40)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "47ea5f95-6743-481b-9c8a-da5030ecf84a",
              "parentUUID": "2715c70c-c4d4-427d-9938-44435fa23c5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "47ea5f95-6743-481b-9c8a-da5030ecf84a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 741,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}