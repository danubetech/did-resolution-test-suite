{
  "stats": {
    "suites": 4,
    "tests": 76,
    "passes": 51,
    "pending": 0,
    "failures": 25,
    "start": "2022-04-05T10:20:22.627Z",
    "end": "2022-04-05T10:22:22.969Z",
    "duration": 115216,
    "testsRegistered": 76,
    "passPercent": 67.10526315789474,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6901da7e-34f0-43ad-9801-bab7df6a54e8",
      "title": "",
      "fullFile": "cypress/integration/admin/godiddy_spec.js",
      "file": "cypress/integration/admin/godiddy_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4751b609-6d71-44ac-85e4-063dd12fe4a8",
          "title": "Test Scenario 13: Retrieve configuration properties",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 728,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "13dedd74-4ac3-4c94-a434-01c4544a1bd3",
              "parentUUID": "4751b609-6d71-44ac-85e4-063dd12fe4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties MUST return JSON object",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "52ce20a4-6552-4baa-ab1e-c3fd5b790a61",
              "parentUUID": "4751b609-6d71-44ac-85e4-063dd12fe4a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties HTTP response must contain content-type property with value",
              "timedOut": null,
              "duration": 178,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response.headers).has.property(\"content-type\", \"application/json\");\n});",
              "err": {
                "message": "AssertionError: expected { Object (date, content-type, ...) } to have property 'content-type' of 'application/json', but got 'application/json;charset=utf-8'",
                "estack": "AssertionError: expected { Object (date, content-type, ...) } to have property 'content-type' of 'application/json', but got 'application/json;charset=utf-8'\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/admin/godiddy_spec.js:121:36)",
                "diff": "- 'application/json;charset=utf-8'\n+ 'application/json'\n"
              },
              "uuid": "62cb0c30-4cca-49dc-8558-86854a922ac5",
              "parentUUID": "4751b609-6d71-44ac-85e4-063dd12fe4a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13dedd74-4ac3-4c94-a434-01c4544a1bd3",
            "52ce20a4-6552-4baa-ab1e-c3fd5b790a61"
          ],
          "failures": [
            "62cb0c30-4cca-49dc-8558-86854a922ac5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1078,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f2c5b5d1-2a2c-4c7c-920d-0814790c8c3d",
          "title": "Test Scenario 14: Retrieve supported DID methods",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test HTTP response",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods Test HTTP response",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "5ea625e7-9f05-40e7-9bdb-7aae6e75762a",
              "parentUUID": "f2c5b5d1-2a2c-4c7c-920d-0814790c8c3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods MUST return a JSON object",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "f2aafcb8-69e0-4dc7-8364-f2154185552a",
              "parentUUID": "f2c5b5d1-2a2c-4c7c-920d-0814790c8c3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain body of type array",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods MUST contain body of type array",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.be.a(\"array\");\n});",
              "err": {},
              "uuid": "b7edd87b-2e2c-4cd3-a297-61e757a7a680",
              "parentUUID": "f2c5b5d1-2a2c-4c7c-920d-0814790c8c3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test HTTP response",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods Test HTTP response",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.deep.equal([\"btcr\", \"sov\", \"v1\", \"web\", \"ethr\", \"jolo\", \"elem\", \"github\", \"key\", \"ion\", \"gatc\", \"ebsi\", \"tz\", \"pkh\"]);\n});",
              "err": {},
              "uuid": "9e40eda4-d001-4695-a06c-7a1de68b2721",
              "parentUUID": "f2c5b5d1-2a2c-4c7c-920d-0814790c8c3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ea625e7-9f05-40e7-9bdb-7aae6e75762a",
            "f2aafcb8-69e0-4dc7-8364-f2154185552a",
            "b7edd87b-2e2c-4cd3-a297-61e757a7a680",
            "9e40eda4-d001-4695-a06c-7a1de68b2721"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 652,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0ee0e250-b34d-4a63-9545-2c67215b38b7",
          "title": "Test Scenario 15: Retrieve object of test identifiers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "41c4f4be-f5a5-441f-9f57-53150bde6664",
              "parentUUID": "0ee0e250-b34d-4a63-9545-2c67215b38b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return a JSON object",
              "timedOut": null,
              "duration": 175,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "1351c50d-793a-49c4-8a3a-eef29edd28e0",
              "parentUUID": "0ee0e250-b34d-4a63-9545-2c67215b38b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a body of type object",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return a body of type object",
              "timedOut": null,
              "duration": 171,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "956f5797-d421-45a4-8e8a-ad2a648a24f4",
              "parentUUID": "0ee0e250-b34d-4a63-9545-2c67215b38b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41c4f4be-f5a5-441f-9f57-53150bde6664",
            "1351c50d-793a-49c4-8a3a-eef29edd28e0",
            "956f5797-d421-45a4-8e8a-ad2a648a24f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 512,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1beb6c1c-bb97-4a15-8d58-9957e69aaaca",
      "title": "",
      "fullFile": "cypress/integration/admin/test_example_spec.js",
      "file": "cypress/integration/admin/test_example_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5416af88-1bb2-4e3c-acc9-84e0348df0a2",
          "title": "Test example DIDs on endpoint: api.dev.godiddy.com",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tests if all example DIDs return HTTP status 200",
              "fullTitle": "Test example DIDs on endpoint: api.dev.godiddy.com Tests if all example DIDs return HTTP status 200",
              "timedOut": null,
              "duration": 622,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "function getExamples() {\n  cy.request({\n    method: \"GET\",\n    url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n    failOnStatusCode: false\n  }).then(response => {\n    const methods = response.body;\n    cy.wrap(methods).as(\"examplesGodiddy\");\n  });\n}\ngetExamples();\ncy.get(\"@examplesGodiddy\").then(response => {\n  console.log(response);\n  Object.keys(response).forEach(key => {\n    response[key].forEach(did => {\n      cy.request({\n        method: \"GET\",\n        url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/identifiers/\" + did,\n        failOnStatusCode: false\n      }).then(response => {\n        softExpect(response.status).to.eq(200);\n      });\n    });\n  });\n});",
              "err": {
                "message": "TypeError: softExpect is not a function",
                "estack": "TypeError: softExpect is not a function\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/admin/test_example_spec.js:125:13)",
                "diff": null
              },
              "uuid": "8f3de9a6-ede5-42ec-98b7-e591c0af5367",
              "parentUUID": "5416af88-1bb2-4e3c-acc9-84e0348df0a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8f3de9a6-ede5-42ec-98b7-e591c0af5367"
          ],
          "pending": [],
          "skipped": [],
          "duration": 622,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f69d4bc7-9051-407f-9ef5-9d2aedf27d9c",
      "title": "",
      "fullFile": "cypress/integration/user/resolver_spec.js",
      "file": "cypress/integration/user/resolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "52d4b342-cdec-4d9a-9c33-6d9b1f2a4443",
          "title": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 200",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP code 200",
              "timedOut": null,
              "duration": 2301,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "1b94d008-1576-4b4d-b4bf-806f70dc425d",
              "parentUUID": "52d4b342-cdec-4d9a-9c33-6d9b1f2a4443",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return a JSON object",
              "timedOut": null,
              "duration": 582,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "0b763954-541b-4f1e-b7d5-8d88c91c3c6e",
              "parentUUID": "52d4b342-cdec-4d9a-9c33-6d9b1f2a4443",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "timedOut": null,
              "duration": 1848,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n});",
              "err": {},
              "uuid": "e82c907e-f819-4f2f-aca8-c3eb30856450",
              "parentUUID": "52d4b342-cdec-4d9a-9c33-6d9b1f2a4443",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocument",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocument",
              "timedOut": null,
              "duration": 713,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "4c0d8f30-066d-4c3b-9133-83054f13c183",
              "parentUUID": "52d4b342-cdec-4d9a-9c33-6d9b1f2a4443",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didResolutionMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didResolutionMetadata",
              "timedOut": null,
              "duration": 747,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didResolutionMetadata\");\n});",
              "err": {},
              "uuid": "af9f4785-632d-4718-a446-8319de14cf7b",
              "parentUUID": "52d4b342-cdec-4d9a-9c33-6d9b1f2a4443",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocumentMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocumentMetadata",
              "timedOut": null,
              "duration": 2216,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocumentMetadata\");\n});",
              "err": {},
              "uuid": "907bb929-34dc-4ba0-acf8-5658cde52726",
              "parentUUID": "52d4b342-cdec-4d9a-9c33-6d9b1f2a4443",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b94d008-1576-4b4d-b4bf-806f70dc425d",
            "0b763954-541b-4f1e-b7d5-8d88c91c3c6e",
            "e82c907e-f819-4f2f-aca8-c3eb30856450",
            "4c0d8f30-066d-4c3b-9133-83054f13c183",
            "af9f4785-632d-4718-a446-8319de14cf7b",
            "907bb929-34dc-4ba0-acf8-5658cde52726"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8407,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c8a9d95b-eb8f-46ba-b34e-c792e68a79d2",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have response status 200",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have response status 200",
              "timedOut": null,
              "duration": 775,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "7b8a6c3a-9acb-4ec9-94f9-e23b97036894",
              "parentUUID": "c8a9d95b-eb8f-46ba-b34e-c792e68a79d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 2: JSON-LD DID document MUST return a JSON object",
              "timedOut": null,
              "duration": 1696,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "cc89e287-5057-4891-9698-dc086c460b3d",
              "parentUUID": "c8a9d95b-eb8f-46ba-b34e-c792e68a79d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with content type",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have header with content type",
              "timedOut": null,
              "duration": 635,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "bcd6f994-b733-48be-af7c-c4d85090dfec",
              "parentUUID": "c8a9d95b-eb8f-46ba-b34e-c792e68a79d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not have property didDocument",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should not have property didDocument",
              "timedOut": null,
              "duration": 624,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "6dc715ae-ae04-46d6-9198-61c40e4eb083",
              "parentUUID": "c8a9d95b-eb8f-46ba-b34e-c792e68a79d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have property @context",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have property @context",
              "timedOut": null,
              "duration": 1489,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "e1866442-4130-4b7c-8ce1-c8f44f6c8dfa",
              "parentUUID": "c8a9d95b-eb8f-46ba-b34e-c792e68a79d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b8a6c3a-9acb-4ec9-94f9-e23b97036894",
            "cc89e287-5057-4891-9698-dc086c460b3d",
            "bcd6f994-b733-48be-af7c-c4d85090dfec",
            "6dc715ae-ae04-46d6-9198-61c40e4eb083",
            "e1866442-4130-4b7c-8ce1-c8f44f6c8dfa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5219,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5dba89fb-f6c7-43a7-b549-68633439e833",
          "title": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 603,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  headers: {\n    Accept: \"application/did+cbor\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "5175aaab-bd19-4ef7-a67e-1d564c4f9e35",
              "parentUUID": "5dba89fb-f6c7-43a7-b549-68633439e833",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5175aaab-bd19-4ef7-a67e-1d564c4f9e35"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 603,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cd89fea0-09cb-414d-adb0-1de115c25a8d",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 406",
              "fullTitle": "Test Scenario 3: Representation not supported MUST return HTTP code 406",
              "timedOut": null,
              "duration": 2494,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  failOnStatusCode: false,\n  headers: {\n    Accept: \"image/png\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(406);\n});",
              "err": {},
              "uuid": "cd6b02b6-b27e-4429-b996-76d3d72ecc4f",
              "parentUUID": "cd89fea0-09cb-414d-adb0-1de115c25a8d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd6b02b6-b27e-4429-b996-76d3d72ecc4f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2494,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1316413d-26f3-4d5f-8fa3-944595ae2faf",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 410",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP code 410",
              "timedOut": null,
              "duration": 168,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(410);\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:224:36)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "66abf3bb-f45e-46fd-9687-6e7701458036",
              "parentUUID": "1316413d-26f3-4d5f-8fa3-944595ae2faf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 4: Deactivated MUST return a JSON object",
              "timedOut": null,
              "duration": 181,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "adfda7f5-95b8-40e2-a68f-e2da7351d927",
              "parentUUID": "1316413d-26f3-4d5f-8fa3-944595ae2faf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP header Content-Type",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "ab006494-fb41-465b-a466-1e6758138a15",
              "parentUUID": "1316413d-26f3-4d5f-8fa3-944595ae2faf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "fullTitle": "Test Scenario 4: Deactivated JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "timedOut": null,
              "duration": 149,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal true",
                "estack": "AssertionError: expected undefined to equal true\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:251:66)",
                "diff": null
              },
              "uuid": "a887c630-fb03-46f0-8e8c-e00af36e0cc0",
              "parentUUID": "1316413d-26f3-4d5f-8fa3-944595ae2faf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "adfda7f5-95b8-40e2-a68f-e2da7351d927",
            "ab006494-fb41-465b-a466-1e6758138a15"
          ],
          "failures": [
            "66abf3bb-f45e-46fd-9687-6e7701458036",
            "a887c630-fb03-46f0-8e8c-e00af36e0cc0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 659,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebe900d0-cb72-4514-aeb7-7ab92a308133",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 404",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP code 404",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "0c24916d-5457-4c77-805a-9504260fecb7",
              "parentUUID": "ebe900d0-cb72-4514-aeb7-7ab92a308133",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 180,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "8d329ecc-6a18-4f24-8df4-06b68ff7b2c8",
              "parentUUID": "ebe900d0-cb72-4514-aeb7-7ab92a308133",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 5: Not found MUST return a JSON object",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "ef128b6e-67c7-4f00-b5dc-9995fefaf259",
              "parentUUID": "ebe900d0-cb72-4514-aeb7-7ab92a308133",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "fullTitle": "Test Scenario 5: Not found JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "timedOut": null,
              "duration": 439,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n});",
              "err": {},
              "uuid": "b0ae7215-6032-4649-abe8-5f933cd2315c",
              "parentUUID": "ebe900d0-cb72-4514-aeb7-7ab92a308133",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c24916d-5457-4c77-805a-9504260fecb7",
            "8d329ecc-6a18-4f24-8df4-06b68ff7b2c8",
            "ef128b6e-67c7-4f00-b5dc-9995fefaf259",
            "b0ae7215-6032-4649-abe8-5f933cd2315c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 931,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "74b0cf88-4f0a-40ce-bdc7-9bea96784f5f",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 400",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP code 400",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
              "err": {},
              "uuid": "9cc03078-ac71-401b-9336-ead5b8f4b254",
              "parentUUID": "74b0cf88-4f0a-40ce-bdc7-9bea96784f5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "e9375743-96df-4917-a352-f1add14e9893",
              "parentUUID": "74b0cf88-4f0a-40ce-bdc7-9bea96784f5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return a JSON object",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "5b1834fc-6262-4470-b60e-f33e1845da69",
              "parentUUID": "74b0cf88-4f0a-40ce-bdc7-9bea96784f5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "fullTitle": "Test Scenario 6: Invalid DID JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.contain(\"invalidDid\");\n});",
              "err": {},
              "uuid": "2f344ee7-52ab-46c4-a764-0ae188e83df7",
              "parentUUID": "74b0cf88-4f0a-40ce-bdc7-9bea96784f5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9cc03078-ac71-401b-9336-ead5b8f4b254",
            "e9375743-96df-4917-a352-f1add14e9893",
            "5b1834fc-6262-4470-b60e-f33e1845da69",
            "2f344ee7-52ab-46c4-a764-0ae188e83df7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 626,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "95c0f1fb-8acf-4327-b453-86102d45d646",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Must return HTTP code 200",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Must return HTTP code 200",
              "timedOut": null,
              "duration": 914,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "ee0f7363-44aa-4292-94ae-f03e71106ea6",
              "parentUUID": "95c0f1fb-8acf-4327-b453-86102d45d646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return a JSON object",
              "timedOut": null,
              "duration": 1896,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "6e4ac782-c27e-4f3d-bdb5-36f4f6eebda3",
              "parentUUID": "95c0f1fb-8acf-4327-b453-86102d45d646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return HTTP header Content-Type with value application/did+ld+json",
              "timedOut": null,
              "duration": 700,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "de8b7a46-7a0b-4b89-be92-cd103d7809ad",
              "parentUUID": "95c0f1fb-8acf-4327-b453-86102d45d646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST NOT contain property didDocument",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST NOT contain property didDocument",
              "timedOut": null,
              "duration": 2779,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "b1f7ec84-0d4a-4294-8b6e-5ef008055693",
              "parentUUID": "95c0f1fb-8acf-4327-b453-86102d45d646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 996,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "e0931fcd-23c2-4a24-af81-e3f99dd88a44",
              "parentUUID": "95c0f1fb-8acf-4327-b453-86102d45d646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property type",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property type",
              "timedOut": null,
              "duration": 986,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"type\");\n});",
              "err": {},
              "uuid": "7cac257f-4aff-46bd-8126-6c595204a1bb",
              "parentUUID": "95c0f1fb-8acf-4327-b453-86102d45d646",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property id with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property id with value application/did+ld+json",
              "timedOut": null,
              "duration": 1465,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body[\"id\"]).to.contain(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {},
              "uuid": "bfb06573-d3af-48a7-86d2-7680d3d098d0",
              "parentUUID": "95c0f1fb-8acf-4327-b453-86102d45d646",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee0f7363-44aa-4292-94ae-f03e71106ea6",
            "6e4ac782-c27e-4f3d-bdb5-36f4f6eebda3",
            "de8b7a46-7a0b-4b89-be92-cd103d7809ad",
            "b1f7ec84-0d4a-4294-8b6e-5ef008055693",
            "e0931fcd-23c2-4a24-af81-e3f99dd88a44",
            "7cac257f-4aff-46bd-8126-6c595204a1bb",
            "bfb06573-d3af-48a7-86d2-7680d3d098d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9736,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a12e8703-8bf9-4e30-ba8e-9f66c2b7dbdd",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 216,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:web:danubetech.com?service=github&relativeRef=did-method-dns\",\n  headers: {\n    Accept: \"text/uri-list\"\n  },\n  failOnStatusCode: false\n}).as(\"response\");\nit(\"MUST return HTTP response status equals 303\", () => {\n  cy.get(\"@response\").then(response => {\n    expect(response.status).to.eq(303);\n  });\n});\nit(\"MUST return a JSON object\", () => {\n  cy.get(\"@request\").then(response => {\n    expect(response).to.be.a(\"object\");\n  });\n});",
              "err": {},
              "uuid": "2f2f51a1-2c13-42bc-bd40-a9f46049d5f7",
              "parentUUID": "a12e8703-8bf9-4e30-ba8e-9f66c2b7dbdd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f2f51a1-2c13-42bc-bd40-a9f46049d5f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 216,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b25d5e73-f940-4c87-ab2e-7ecf513d8e83",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 557,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "e9e42387-5e0c-4617-b993-bfb905f7b6e3",
              "parentUUID": "b25d5e73-f940-4c87-ab2e-7ecf513d8e83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return a JSON object",
              "timedOut": null,
              "duration": 1962,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "13a724ef-cc28-42f9-b4fd-62438a0c9510",
              "parentUUID": "b25d5e73-f940-4c87-ab2e-7ecf513d8e83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property verificationMethod of type JsonWebKey2020",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property verificationMethod of type JsonWebKey2020",
              "timedOut": null,
              "duration": 771,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  response.body.verificationMethod.forEach(out => {\n    expect(out).has.property(\"type\", \"JsonWebKey2020\");\n  });\n});",
              "err": {},
              "uuid": "e31e5281-31c9-499e-8757-eaaa997a8fad",
              "parentUUID": "b25d5e73-f940-4c87-ab2e-7ecf513d8e83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 749,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "e4130820-a535-49d7-b1f1-ec3f7dab7a0a",
              "parentUUID": "b25d5e73-f940-4c87-ab2e-7ecf513d8e83",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "timedOut": null,
              "duration": 1747,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:WRfXPg8dantKVubE3HX8pw\");\n});",
              "err": {},
              "uuid": "24940fbb-e8ae-495d-8651-9e284a84e436",
              "parentUUID": "b25d5e73-f940-4c87-ab2e-7ecf513d8e83",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9e42387-5e0c-4617-b993-bfb905f7b6e3",
            "13a724ef-cc28-42f9-b4fd-62438a0c9510",
            "e31e5281-31c9-499e-8757-eaaa997a8fad",
            "e4130820-a535-49d7-b1f1-ec3f7dab7a0a",
            "24940fbb-e8ae-495d-8651-9e284a84e436"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5786,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c0d2a9e7-d7eb-4459-bb5d-3ed7dff80291",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5043,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:486:10)",
                "diff": null
              },
              "uuid": "6ff5cb7c-2cc3-4219-9755-cb230c6edd38",
              "parentUUID": "c0d2a9e7-d7eb-4459-bb5d-3ed7dff80291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 5060,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:498:10)",
                "diff": null
              },
              "uuid": "9ed6b9d9-b7ab-4cc8-83a0-49b8017a452f",
              "parentUUID": "c0d2a9e7-d7eb-4459-bb5d-3ed7dff80291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return JSON object",
              "timedOut": null,
              "duration": 5059,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:510:10)",
                "diff": null
              },
              "uuid": "9378ce32-79ca-489c-a9e7-7861b135dab4",
              "parentUUID": "c0d2a9e7-d7eb-4459-bb5d-3ed7dff80291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property @context",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property @context",
              "timedOut": null,
              "duration": 5076,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:522:10)",
                "diff": null
              },
              "uuid": "fd60a780-d3e2-4189-8484-fa8c46be8243",
              "parentUUID": "c0d2a9e7-d7eb-4459-bb5d-3ed7dff80291",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id with value ",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property id with value ",
              "timedOut": null,
              "duration": 5062,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:534:10)",
                "diff": null
              },
              "uuid": "5e5edceb-f68c-4f08-a10c-42cc1db66148",
              "parentUUID": "c0d2a9e7-d7eb-4459-bb5d-3ed7dff80291",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "6ff5cb7c-2cc3-4219-9755-cb230c6edd38",
            "9ed6b9d9-b7ab-4cc8-83a0-49b8017a452f",
            "9378ce32-79ca-489c-a9e7-7861b135dab4",
            "fd60a780-d3e2-4189-8484-fa8c46be8243",
            "5e5edceb-f68c-4f08-a10c-42cc1db66148"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25300,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7e2125ce-0cee-4e5a-bf4a-dedb3b194990",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5062,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:551:10)",
                "diff": null
              },
              "uuid": "23b88ded-d133-4bb7-b980-0563b7d7c266",
              "parentUUID": "7e2125ce-0cee-4e5a-bf4a-dedb3b194990",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return JSON object",
              "timedOut": null,
              "duration": 5065,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:563:10)",
                "diff": null
              },
              "uuid": "6c900ee4-5359-40b0-959a-0c62f4bc5e51",
              "parentUUID": "7e2125ce-0cee-4e5a-bf4a-dedb3b194990",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 5063,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:575:10)",
                "diff": null
              },
              "uuid": "9b3d1f13-81af-45d7-af8b-00d33aca3abf",
              "parentUUID": "7e2125ce-0cee-4e5a-bf4a-dedb3b194990",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 5066,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:587:10)",
                "diff": null
              },
              "uuid": "b18768d0-8db4-4e0d-8b57-83207db77711",
              "parentUUID": "7e2125ce-0cee-4e5a-bf4a-dedb3b194990",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST contain property id",
              "timedOut": null,
              "duration": 5069,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:599:10)",
                "diff": null
              },
              "uuid": "b05daa10-d575-4ac2-9b06-b7167e6c4610",
              "parentUUID": "7e2125ce-0cee-4e5a-bf4a-dedb3b194990",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "23b88ded-d133-4bb7-b980-0563b7d7c266",
            "6c900ee4-5359-40b0-959a-0c62f4bc5e51",
            "9b3d1f13-81af-45d7-af8b-00d33aca3abf",
            "b18768d0-8db4-4e0d-8b57-83207db77711",
            "b05daa10-d575-4ac2-9b06-b7167e6c4610"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25325,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f08ca737-ca2e-444a-ba02-a97db4e2dda2",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 644,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "579cc175-b0da-4137-bb2f-87ff1515ba68",
              "parentUUID": "f08ca737-ca2e-444a-ba02-a97db4e2dda2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "8df7106f-196f-4154-8460-2925af948355",
              "parentUUID": "f08ca737-ca2e-444a-ba02-a97db4e2dda2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property id",
              "timedOut": null,
              "duration": 334,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "1f99f329-0733-4de9-b164-0e25e9e2acfb",
              "parentUUID": "f08ca737-ca2e-444a-ba02-a97db4e2dda2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property keyAgreement",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property keyAgreement",
              "timedOut": null,
              "duration": 247,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"keyAgreement\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "1b470a39-11f3-43ef-8a94-3691df2ffe59",
              "parentUUID": "f08ca737-ca2e-444a-ba02-a97db4e2dda2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "579cc175-b0da-4137-bb2f-87ff1515ba68",
            "8df7106f-196f-4154-8460-2925af948355",
            "1f99f329-0733-4de9-b164-0e25e9e2acfb",
            "1b470a39-11f3-43ef-8a94-3691df2ffe59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1466,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b8ca3a47-4b51-4594-92b6-87118287f918",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 253,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:677:36)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "2f421f76-e96d-45ff-8fad-c97e47b8dabd",
              "parentUUID": "b8ca3a47-4b51-4594-92b6-87118287f918",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "timedOut": null,
              "duration": 982,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n});",
              "err": {
                "message": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given",
                "estack": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/resolver_spec.js:689:9)",
                "diff": null
              },
              "uuid": "feb4661c-587a-4813-ae3b-c902d9b236a5",
              "parentUUID": "b8ca3a47-4b51-4594-92b6-87118287f918",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2f421f76-e96d-45ff-8fad-c97e47b8dabd",
            "feb4661c-587a-4813-ae3b-c902d9b236a5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "decacef0-9ea9-447e-a6ba-6e548b9d4e04",
      "title": "",
      "fullFile": "cypress/integration/user/uniresolver_fixtures_spec.js",
      "file": "cypress/integration/user/uniresolver_fixtures_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6d758dca-a7a2-4549-af23-3be9144b3cfb",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 4967,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 500 to equal 200",
                "estack": "AssertionError: expected 500 to equal 200\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:113:40)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "c8fa566a-62f9-4851-a52f-b002180fc3a8",
              "parentUUID": "6d758dca-a7a2-4549-af23-3be9144b3cfb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c8fa566a-62f9-4851-a52f-b002180fc3a8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4967,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c44cb2fc-f2db-44a2-980f-cd558aec1c4a",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 2452,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"@context\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected { Object (id, verificationMethod, ...) } to have property '@context'",
                "estack": "AssertionError: expected { Object (id, verificationMethod, ...) } to have property '@context'\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:151:43)",
                "diff": null
              },
              "uuid": "830158f0-1f5b-478e-8222-34ef75c19c72",
              "parentUUID": "c44cb2fc-f2db-44a2-980f-cd558aec1c4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "830158f0-1f5b-478e-8222-34ef75c19c72"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2452,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "31950d94-4230-4b72-b6fe-0cc9c49cf182",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 1464,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n    });\n  });\n});",
              "err": {},
              "uuid": "e316bf99-7b0f-4b4c-be93-d77d1b8ab30a",
              "parentUUID": "31950d94-4230-4b72-b6fe-0cc9c49cf182",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e316bf99-7b0f-4b4c-be93-d77d1b8ab30a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1464,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "983d071c-ffa1-4e53-8e0e-5ddf2dce1998",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 149,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); //FAILS\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:218:40)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "52e4d7a2-2389-41e9-b2c4-7c05d5221c1e",
              "parentUUID": "983d071c-ffa1-4e53-8e0e-5ddf2dce1998",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "52e4d7a2-2389-41e9-b2c4-7c05d5221c1e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dd7da7f3-7a4d-4db4-96d3-c2156ed0aad5",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {},
              "uuid": "edcbf57a-dc7c-4925-b351-199ab317988d",
              "parentUUID": "dd7da7f3-7a4d-4db4-96d3-c2156ed0aad5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "edcbf57a-dc7c-4925-b351-199ab317988d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 177,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c99c984b-6dcb-485c-96da-8d1211d4706e",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 177,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 'invalidDidUrl' to equal 'invalidDid'",
                "estack": "AssertionError: expected 'invalidDidUrl' to equal 'invalidDid'\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:263:66)",
                "diff": "- 'invalidDidUrl'\n+ 'invalidDid'\n"
              },
              "uuid": "11aa4dc1-7d58-407e-a44e-1b897958d163",
              "parentUUID": "c99c984b-6dcb-485c-96da-8d1211d4706e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "11aa4dc1-7d58-407e-a44e-1b897958d163"
          ],
          "pending": [],
          "skipped": [],
          "duration": 177,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ebdf21eb-f1b8-4e28-b5cc-c827048f57fd",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 203,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    cy.get(\"@response\").then(response => {\n      expect(response.status).to.eq(303);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 200 to equal 303",
                "estack": "AssertionError: expected 200 to equal 303\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:316:40)",
                "diff": "- 200\n+ 303\n"
              },
              "uuid": "99aa250c-9d12-4a11-a9aa-793f37866946",
              "parentUUID": "ebdf21eb-f1b8-4e28-b5cc-c827048f57fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "99aa250c-9d12-4a11-a9aa-793f37866946"
          ],
          "pending": [],
          "skipped": [],
          "duration": 203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7b3c65b9-a165-4acd-9872-3d2fe5152bcd",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5078,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"versionTimeDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionTimeDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionTimeDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response).to.be.a(\"object\");\n      expect(response.body).to.have.property(\"@context\");\n      expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:360:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:358:27)",
                "diff": null
              },
              "uuid": "402fb9fc-f124-4708-9d12-73d0ce06403d",
              "parentUUID": "7b3c65b9-a165-4acd-9872-3d2fe5152bcd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "402fb9fc-f124-4708-9d12-73d0ce06403d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5078,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c986c482-c6da-481d-a033-042ad79d206a",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5084,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"versionIdDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionIdDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionIdDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      expect(response.body).to.have.property(\"@context\");\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:42047/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:42047/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:42047/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:42047/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:42047/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:42047/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:42047/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:42047/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:42047/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:387:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:385:27)",
                "diff": null
              },
              "uuid": "ac0f0df3-9ac9-407f-8302-83ad78fc35f6",
              "parentUUID": "c986c482-c6da-481d-a033-042ad79d206a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "ac0f0df3-9ac9-407f-8302-83ad78fc35f6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5084,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "68f8a52f-46c6-422d-9abf-964071a5ff3a",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 3958,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 500 to equal 200",
                "estack": "AssertionError: expected 500 to equal 200\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:424:40)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "058cf95d-46f9-4a0b-a9e3-58859abac4a1",
              "parentUUID": "68f8a52f-46c6-422d-9abf-964071a5ff3a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "058cf95d-46f9-4a0b-a9e3-58859abac4a1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 3958,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "58ce7c6a-bf11-496b-af6a-b635db4daa79",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 640,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:42047/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:450:40)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "2c49a3be-fa97-4b64-99bc-9c860dd3d016",
              "parentUUID": "58ce7c6a-bf11-496b-af6a-b635db4daa79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2c49a3be-fa97-4b64-99bc-9c860dd3d016"
          ],
          "pending": [],
          "skipped": [],
          "duration": 640,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}