{
  "stats": {
    "suites": 2,
    "tests": 65,
    "passes": 42,
    "pending": 0,
    "failures": 23,
    "start": "2022-04-12T00:26:03.099Z",
    "end": "2022-04-12T00:28:01.593Z",
    "duration": 116310,
    "testsRegistered": 65,
    "passPercent": 64.61538461538461,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4418c73c-2ed0-455c-8a5e-3cabadf9a268",
      "title": "",
      "fullFile": "cypress/integration/resolver_spec.js",
      "file": "cypress/integration/resolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "038d4c93-5e69-40e9-a599-237dfc64edad",
          "title": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 200",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP code 200",
              "timedOut": null,
              "duration": 3014,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "ff295602-1f1b-4b81-b296-7a54bc6b4d50",
              "parentUUID": "038d4c93-5e69-40e9-a599-237dfc64edad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return a JSON object",
              "timedOut": null,
              "duration": 871,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "9fd9966b-881b-41a6-9901-d9015561f5b1",
              "parentUUID": "038d4c93-5e69-40e9-a599-237dfc64edad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "timedOut": null,
              "duration": 2740,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n});",
              "err": {},
              "uuid": "6aea30d0-a5af-4bfd-a2d0-c6f60f91f4aa",
              "parentUUID": "038d4c93-5e69-40e9-a599-237dfc64edad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocument",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocument",
              "timedOut": null,
              "duration": 887,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "2a3b49ce-56a6-414a-ae9b-8666adc9d13d",
              "parentUUID": "038d4c93-5e69-40e9-a599-237dfc64edad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didResolutionMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didResolutionMetadata",
              "timedOut": null,
              "duration": 880,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didResolutionMetadata\");\n});",
              "err": {},
              "uuid": "1c39bf6b-72a5-4f8e-9ef7-2ed73025a683",
              "parentUUID": "038d4c93-5e69-40e9-a599-237dfc64edad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocumentMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocumentMetadata",
              "timedOut": null,
              "duration": 1638,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocumentMetadata\");\n});",
              "err": {},
              "uuid": "666d4cd8-17b9-4d87-80f3-bc0315e0ced0",
              "parentUUID": "038d4c93-5e69-40e9-a599-237dfc64edad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff295602-1f1b-4b81-b296-7a54bc6b4d50",
            "9fd9966b-881b-41a6-9901-d9015561f5b1",
            "6aea30d0-a5af-4bfd-a2d0-c6f60f91f4aa",
            "2a3b49ce-56a6-414a-ae9b-8666adc9d13d",
            "1c39bf6b-72a5-4f8e-9ef7-2ed73025a683",
            "666d4cd8-17b9-4d87-80f3-bc0315e0ced0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10030,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "04301f4c-e270-4930-b404-5abbdc089cb4",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have response status 200",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have response status 200",
              "timedOut": null,
              "duration": 620,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "e364eb0b-9e19-4d0d-b907-c47b7e0fb21d",
              "parentUUID": "04301f4c-e270-4930-b404-5abbdc089cb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 2: JSON-LD DID document MUST return a JSON object",
              "timedOut": null,
              "duration": 1754,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "b4dfb325-e3f0-4c9c-92c0-169dac43751f",
              "parentUUID": "04301f4c-e270-4930-b404-5abbdc089cb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with content type",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have header with content type",
              "timedOut": null,
              "duration": 673,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "041c6bf2-0d71-43e4-b0f9-d0d3bb299cbb",
              "parentUUID": "04301f4c-e270-4930-b404-5abbdc089cb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not have property didDocument",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should not have property didDocument",
              "timedOut": null,
              "duration": 655,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "58515ebc-4fcc-48df-ac51-9db00df0678a",
              "parentUUID": "04301f4c-e270-4930-b404-5abbdc089cb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have property @context",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have property @context",
              "timedOut": null,
              "duration": 2638,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "52594f2c-69d7-4e65-a1d6-f4b0a076f812",
              "parentUUID": "04301f4c-e270-4930-b404-5abbdc089cb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e364eb0b-9e19-4d0d-b907-c47b7e0fb21d",
            "b4dfb325-e3f0-4c9c-92c0-169dac43751f",
            "041c6bf2-0d71-43e4-b0f9-d0d3bb299cbb",
            "58515ebc-4fcc-48df-ac51-9db00df0678a",
            "52594f2c-69d7-4e65-a1d6-f4b0a076f812"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6340,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a842b674-446e-4553-a988-1d4bce2ed548",
          "title": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 931,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  headers: {\n    Accept: \"application/did+cbor\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "72a83b4b-6b52-4c3f-8d4b-56e052cce661",
              "parentUUID": "a842b674-446e-4553-a988-1d4bce2ed548",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72a83b4b-6b52-4c3f-8d4b-56e052cce661"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 931,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "de896bc6-8179-4af4-ae7e-0b776e7cae8c",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 406",
              "fullTitle": "Test Scenario 3: Representation not supported MUST return HTTP code 406",
              "timedOut": null,
              "duration": 1784,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  failOnStatusCode: false,\n  headers: {\n    Accept: \"image/png\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(406);\n});",
              "err": {},
              "uuid": "15110730-319e-4668-8a98-0e18a69e7c66",
              "parentUUID": "de896bc6-8179-4af4-ae7e-0b776e7cae8c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "15110730-319e-4668-8a98-0e18a69e7c66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1784,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "761bab39-4043-4c0e-aca1-2efc2cb8d65d",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 410",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP code 410",
              "timedOut": null,
              "duration": 153,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(410);\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:224:36)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "ee21c834-7d0e-466b-89cd-511688cc1f46",
              "parentUUID": "761bab39-4043-4c0e-aca1-2efc2cb8d65d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 4: Deactivated MUST return a JSON object",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "035cf8ad-8268-441d-aa24-4fcda64ccbfb",
              "parentUUID": "761bab39-4043-4c0e-aca1-2efc2cb8d65d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP header Content-Type",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "f9a326af-1ba5-4444-ad80-84e2099bc86c",
              "parentUUID": "761bab39-4043-4c0e-aca1-2efc2cb8d65d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "fullTitle": "Test Scenario 4: Deactivated JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "timedOut": null,
              "duration": 164,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal true",
                "estack": "AssertionError: expected undefined to equal true\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:251:66)",
                "diff": null
              },
              "uuid": "26ae9ad3-c605-4a7e-adb0-b622d0ba794c",
              "parentUUID": "761bab39-4043-4c0e-aca1-2efc2cb8d65d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "035cf8ad-8268-441d-aa24-4fcda64ccbfb",
            "f9a326af-1ba5-4444-ad80-84e2099bc86c"
          ],
          "failures": [
            "ee21c834-7d0e-466b-89cd-511688cc1f46",
            "26ae9ad3-c605-4a7e-adb0-b622d0ba794c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 650,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fdfd8d7c-6d8d-4abd-8a60-2eb48556758a",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 404",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP code 404",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "85392ed4-62f0-470c-a258-4491d80d31ae",
              "parentUUID": "fdfd8d7c-6d8d-4abd-8a60-2eb48556758a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "935f1f06-548d-41be-9075-e04eb134ce52",
              "parentUUID": "fdfd8d7c-6d8d-4abd-8a60-2eb48556758a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 5: Not found MUST return a JSON object",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "28d1036f-b1fd-405e-b8e4-fcc5c579aa8e",
              "parentUUID": "fdfd8d7c-6d8d-4abd-8a60-2eb48556758a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "fullTitle": "Test Scenario 5: Not found JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n});",
              "err": {},
              "uuid": "e13f2d56-16d5-4d14-a90a-0de4a6667472",
              "parentUUID": "fdfd8d7c-6d8d-4abd-8a60-2eb48556758a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85392ed4-62f0-470c-a258-4491d80d31ae",
            "935f1f06-548d-41be-9075-e04eb134ce52",
            "28d1036f-b1fd-405e-b8e4-fcc5c579aa8e",
            "e13f2d56-16d5-4d14-a90a-0de4a6667472"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 875,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3658402b-0e9d-4cab-a98d-67139b242a74",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 400",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP code 400",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
              "err": {},
              "uuid": "79ab81be-abd0-4716-9a56-fd14027507a4",
              "parentUUID": "3658402b-0e9d-4cab-a98d-67139b242a74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "2e012ff2-71f6-4a3e-a8be-6ff779936aad",
              "parentUUID": "3658402b-0e9d-4cab-a98d-67139b242a74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return a JSON object",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "055725e7-4e13-4164-8cca-ad3d8aa30661",
              "parentUUID": "3658402b-0e9d-4cab-a98d-67139b242a74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "fullTitle": "Test Scenario 6: Invalid DID JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.contain(\"invalidDid\");\n});",
              "err": {},
              "uuid": "8ae400bc-6a62-4b6a-bac2-a8706f407fa4",
              "parentUUID": "3658402b-0e9d-4cab-a98d-67139b242a74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79ab81be-abd0-4716-9a56-fd14027507a4",
            "2e012ff2-71f6-4a3e-a8be-6ff779936aad",
            "055725e7-4e13-4164-8cca-ad3d8aa30661",
            "8ae400bc-6a62-4b6a-bac2-a8706f407fa4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 590,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a1d69e82-1481-4011-a341-b2b49dee51fd",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Must return HTTP code 200",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Must return HTTP code 200",
              "timedOut": null,
              "duration": 620,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "50ada1af-3acf-4f2d-9a29-e83905d8ad7b",
              "parentUUID": "a1d69e82-1481-4011-a341-b2b49dee51fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return a JSON object",
              "timedOut": null,
              "duration": 628,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "06692280-9970-4426-9042-789232e8c120",
              "parentUUID": "a1d69e82-1481-4011-a341-b2b49dee51fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return HTTP header Content-Type with value application/did+ld+json",
              "timedOut": null,
              "duration": 1384,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "c4d5b18c-1b13-4a86-9a57-8599d2e99e3f",
              "parentUUID": "a1d69e82-1481-4011-a341-b2b49dee51fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST NOT contain property didDocument",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST NOT contain property didDocument",
              "timedOut": null,
              "duration": 534,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "78888d85-40aa-4031-813b-6ac28b4b699e",
              "parentUUID": "a1d69e82-1481-4011-a341-b2b49dee51fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 2590,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "ae454fee-d60a-496b-90bf-78954406e71c",
              "parentUUID": "a1d69e82-1481-4011-a341-b2b49dee51fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property type",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property type",
              "timedOut": null,
              "duration": 992,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"type\");\n});",
              "err": {},
              "uuid": "5a215aef-43f1-42c0-a68e-5b65e3515526",
              "parentUUID": "a1d69e82-1481-4011-a341-b2b49dee51fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property id with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property id with value application/did+ld+json",
              "timedOut": null,
              "duration": 968,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body[\"id\"]).to.contain(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {},
              "uuid": "8c4b72e4-77b0-4f96-b25e-3cbe6388a282",
              "parentUUID": "a1d69e82-1481-4011-a341-b2b49dee51fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50ada1af-3acf-4f2d-9a29-e83905d8ad7b",
            "06692280-9970-4426-9042-789232e8c120",
            "c4d5b18c-1b13-4a86-9a57-8599d2e99e3f",
            "78888d85-40aa-4031-813b-6ac28b4b699e",
            "ae454fee-d60a-496b-90bf-78954406e71c",
            "5a215aef-43f1-42c0-a68e-5b65e3515526",
            "8c4b72e4-77b0-4f96-b25e-3cbe6388a282"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7716,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0f8af1c0-913d-44fb-b141-bf021ffae88d",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 242,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:web:danubetech.com?service=github&relativeRef=did-method-dns\",\n  headers: {\n    Accept: \"text/uri-list\"\n  },\n  failOnStatusCode: false\n}).as(\"response\");\nit(\"MUST return HTTP response status equals 303\", () => {\n  cy.get(\"@response\").then(response => {\n    expect(response.status).to.eq(303);\n  });\n});\nit(\"MUST return a JSON object\", () => {\n  cy.get(\"@request\").then(response => {\n    expect(response).to.be.a(\"object\");\n  });\n});",
              "err": {},
              "uuid": "cda37280-2c30-4e6e-b73e-f3ec1365f087",
              "parentUUID": "0f8af1c0-913d-44fb-b141-bf021ffae88d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cda37280-2c30-4e6e-b73e-f3ec1365f087"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 242,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "332ad282-7bbb-4547-a7f9-6cdfc2750ef6",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 2737,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "22f3848d-5c9b-49d5-aa9b-3704381e89e7",
              "parentUUID": "332ad282-7bbb-4547-a7f9-6cdfc2750ef6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return a JSON object",
              "timedOut": null,
              "duration": 959,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "a5e3f4ba-b12f-418e-838f-0c02730f3b32",
              "parentUUID": "332ad282-7bbb-4547-a7f9-6cdfc2750ef6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property verificationMethod of type JsonWebKey2020",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property verificationMethod of type JsonWebKey2020",
              "timedOut": null,
              "duration": 2797,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  response.body.verificationMethod.forEach(out => {\n    expect(out).has.property(\"type\", \"JsonWebKey2020\");\n  });\n});",
              "err": {},
              "uuid": "e1917a8b-7de4-4e4b-8cd7-3a534ef14ed7",
              "parentUUID": "332ad282-7bbb-4547-a7f9-6cdfc2750ef6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 950,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "17226192-0a74-45dd-81c7-fd30590de160",
              "parentUUID": "332ad282-7bbb-4547-a7f9-6cdfc2750ef6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "timedOut": null,
              "duration": 932,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:WRfXPg8dantKVubE3HX8pw\");\n});",
              "err": {},
              "uuid": "5b3d2f2a-a9e3-4acc-be99-ea2657ac16a0",
              "parentUUID": "332ad282-7bbb-4547-a7f9-6cdfc2750ef6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22f3848d-5c9b-49d5-aa9b-3704381e89e7",
            "a5e3f4ba-b12f-418e-838f-0c02730f3b32",
            "e1917a8b-7de4-4e4b-8cd7-3a534ef14ed7",
            "17226192-0a74-45dd-81c7-fd30590de160",
            "5b3d2f2a-a9e3-4acc-be99-ea2657ac16a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d5f96dcd-61a4-415a-b2c7-261da3138d65",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5016,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:486:10)",
                "diff": null
              },
              "uuid": "d1b73efb-b5c6-4a95-a0ac-052ab6509c36",
              "parentUUID": "d5f96dcd-61a4-415a-b2c7-261da3138d65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 5067,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:498:10)",
                "diff": null
              },
              "uuid": "1970ade7-cab3-4059-bb2c-321deba06564",
              "parentUUID": "d5f96dcd-61a4-415a-b2c7-261da3138d65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return JSON object",
              "timedOut": null,
              "duration": 5064,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:510:10)",
                "diff": null
              },
              "uuid": "0cb6baca-ed0a-4817-87c4-021a8ac6a745",
              "parentUUID": "d5f96dcd-61a4-415a-b2c7-261da3138d65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property @context",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property @context",
              "timedOut": null,
              "duration": 5063,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:522:10)",
                "diff": null
              },
              "uuid": "9ee52173-9014-4549-a631-2265ea5be06e",
              "parentUUID": "d5f96dcd-61a4-415a-b2c7-261da3138d65",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id with value ",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property id with value ",
              "timedOut": null,
              "duration": 5075,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:534:10)",
                "diff": null
              },
              "uuid": "db4a4f9a-4861-4263-a9da-71583924e096",
              "parentUUID": "d5f96dcd-61a4-415a-b2c7-261da3138d65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d1b73efb-b5c6-4a95-a0ac-052ab6509c36",
            "1970ade7-cab3-4059-bb2c-321deba06564",
            "0cb6baca-ed0a-4817-87c4-021a8ac6a745",
            "9ee52173-9014-4549-a631-2265ea5be06e",
            "db4a4f9a-4861-4263-a9da-71583924e096"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25285,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "af98b066-a049-40de-9d9d-96e654a913a2",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5082,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:551:10)",
                "diff": null
              },
              "uuid": "49902a62-2993-41ad-97a8-ee81467836b1",
              "parentUUID": "af98b066-a049-40de-9d9d-96e654a913a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return JSON object",
              "timedOut": null,
              "duration": 5061,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:563:10)",
                "diff": null
              },
              "uuid": "60e368ff-efd7-483d-afb4-eb039f7a336f",
              "parentUUID": "af98b066-a049-40de-9d9d-96e654a913a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 5068,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:575:10)",
                "diff": null
              },
              "uuid": "0341298a-1af9-4a2e-ac87-a01d5bc8152c",
              "parentUUID": "af98b066-a049-40de-9d9d-96e654a913a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 5068,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:587:10)",
                "diff": null
              },
              "uuid": "3f423cb7-b259-4254-a289-d817e5f248bb",
              "parentUUID": "af98b066-a049-40de-9d9d-96e654a913a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST contain property id",
              "timedOut": null,
              "duration": 5066,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:599:10)",
                "diff": null
              },
              "uuid": "7fdf0b0e-3ce5-486c-8ddb-8b2999dd8a9f",
              "parentUUID": "af98b066-a049-40de-9d9d-96e654a913a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "49902a62-2993-41ad-97a8-ee81467836b1",
            "60e368ff-efd7-483d-afb4-eb039f7a336f",
            "0341298a-1af9-4a2e-ac87-a01d5bc8152c",
            "3f423cb7-b259-4254-a289-d817e5f248bb",
            "7fdf0b0e-3ce5-486c-8ddb-8b2999dd8a9f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25345,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a87e13f0-fdae-42b5-bbcd-cf4896d30caa",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 1275,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "f26e6b7f-caa5-474c-99dd-78a7c11a1e31",
              "parentUUID": "a87e13f0-fdae-42b5-bbcd-cf4896d30caa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 409,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "68f9c5b7-e4f7-4c55-bc20-94a9b185335e",
              "parentUUID": "a87e13f0-fdae-42b5-bbcd-cf4896d30caa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property id",
              "timedOut": null,
              "duration": 962,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "142955a2-1624-47c5-899b-abeae0a164ea",
              "parentUUID": "a87e13f0-fdae-42b5-bbcd-cf4896d30caa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property keyAgreement",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property keyAgreement",
              "timedOut": null,
              "duration": 404,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"keyAgreement\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "da27a641-67e2-4c56-8936-e6fdff37a556",
              "parentUUID": "a87e13f0-fdae-42b5-bbcd-cf4896d30caa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f26e6b7f-caa5-474c-99dd-78a7c11a1e31",
            "68f9c5b7-e4f7-4c55-bc20-94a9b185335e",
            "142955a2-1624-47c5-899b-abeae0a164ea",
            "da27a641-67e2-4c56-8936-e6fdff37a556"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3050,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cce887c4-39d6-4505-8902-f54b2cbccd70",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 430,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:677:36)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "3072cdba-ac7a-4edc-90f7-c75b2f21fbf8",
              "parentUUID": "cce887c4-39d6-4505-8902-f54b2cbccd70",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "timedOut": null,
              "duration": 997,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n});",
              "err": {
                "message": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given",
                "estack": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/resolver_spec.js:689:9)",
                "diff": null
              },
              "uuid": "189b55a8-fa8b-4a3c-9b3d-438acd01d739",
              "parentUUID": "cce887c4-39d6-4505-8902-f54b2cbccd70",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3072cdba-ac7a-4edc-90f7-c75b2f21fbf8",
            "189b55a8-fa8b-4a3c-9b3d-438acd01d739"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1427,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "21ae37ca-28b2-46ae-9f02-050d646003bf",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_fixtures_spec.js",
      "file": "cypress/integration/uniresolver_fixtures_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7cb944ff-f657-40a0-a9f3-f556ad96a3cc",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 4020,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 500 to equal 200",
                "estack": "AssertionError: expected 500 to equal 200\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:113:40)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "99c34a19-8796-4df6-a492-81fd5192659c",
              "parentUUID": "7cb944ff-f657-40a0-a9f3-f556ad96a3cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "99c34a19-8796-4df6-a492-81fd5192659c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4020,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "61678300-205d-4208-8d8d-e17bcca05dc2",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 1340,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"@context\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected { Object (id, verificationMethod, ...) } to have property '@context'",
                "estack": "AssertionError: expected { Object (id, verificationMethod, ...) } to have property '@context'\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:151:43)",
                "diff": null
              },
              "uuid": "12de9999-dca1-4dca-8b20-6024ef08e5c4",
              "parentUUID": "61678300-205d-4208-8d8d-e17bcca05dc2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "12de9999-dca1-4dca-8b20-6024ef08e5c4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1340,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ec3998d3-0edc-419c-a5f1-05fce45562b9",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 2419,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n    });\n  });\n});",
              "err": {},
              "uuid": "6ef59cec-da79-4196-8c84-a5ab4285ef82",
              "parentUUID": "ec3998d3-0edc-419c-a5f1-05fce45562b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ef59cec-da79-4196-8c84-a5ab4285ef82"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0d263e46-8cfe-483d-ac13-5d7280a6e012",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 174,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); //FAILS\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:218:40)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "a5d12557-9690-4127-afb2-d116b30971cb",
              "parentUUID": "0d263e46-8cfe-483d-ac13-5d7280a6e012",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a5d12557-9690-4127-afb2-d116b30971cb"
          ],
          "pending": [],
          "skipped": [],
          "duration": 174,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ee0c80e0-9c43-4eeb-b28e-866c584da9e1",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {},
              "uuid": "f8bcb1f0-cfe2-41c5-b2ed-7497a7a2363f",
              "parentUUID": "ee0c80e0-9c43-4eeb-b28e-866c584da9e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8bcb1f0-cfe2-41c5-b2ed-7497a7a2363f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 178,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c900aa8-e3df-4b8c-979b-caef46ee2f3a",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 150,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 'invalidDidUrl' to equal 'invalidDid'",
                "estack": "AssertionError: expected 'invalidDidUrl' to equal 'invalidDid'\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:263:66)",
                "diff": "- 'invalidDidUrl'\n+ 'invalidDid'\n"
              },
              "uuid": "bf45e265-b747-4d3b-b362-2815fe760c74",
              "parentUUID": "4c900aa8-e3df-4b8c-979b-caef46ee2f3a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "bf45e265-b747-4d3b-b362-2815fe760c74"
          ],
          "pending": [],
          "skipped": [],
          "duration": 150,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f90177c9-d6bc-4d3d-bb80-4457687b3ac3",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 235,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    cy.get(\"@response\").then(response => {\n      expect(response.status).to.eq(303);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 200 to equal 303",
                "estack": "AssertionError: expected 200 to equal 303\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:316:40)",
                "diff": "- 200\n+ 303\n"
              },
              "uuid": "aa32dfc5-b08f-49e6-b41a-0ccfa49c4fca",
              "parentUUID": "f90177c9-d6bc-4d3d-bb80-4457687b3ac3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "aa32dfc5-b08f-49e6-b41a-0ccfa49c4fca"
          ],
          "pending": [],
          "skipped": [],
          "duration": 235,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0eb2bb67-2770-427a-9323-410b2b46ecee",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5044,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"versionTimeDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionTimeDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionTimeDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response).to.be.a(\"object\");\n      expect(response.body).to.have.property(\"@context\");\n      expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46159/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:360:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:358:27)",
                "diff": null
              },
              "uuid": "10b9d4d6-0ef8-49a7-b73c-24151e2ad375",
              "parentUUID": "0eb2bb67-2770-427a-9323-410b2b46ecee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "10b9d4d6-0ef8-49a7-b73c-24151e2ad375"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5044,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3448d956-d0d6-4161-ab5f-9a9ebf628690",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5080,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"versionIdDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionIdDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionIdDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      expect(response.body).to.have.property(\"@context\");\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:46159/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:46159/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:46159/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:46159/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:46159/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:46159/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:46159/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:46159/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:46159/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:46159/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:387:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:385:27)",
                "diff": null
              },
              "uuid": "19ca9abd-7574-4d6b-a5ae-41156364efb6",
              "parentUUID": "3448d956-d0d6-4161-ab5f-9a9ebf628690",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "19ca9abd-7574-4d6b-a5ae-41156364efb6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5080,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5e0e1673-e0a3-4a75-baaf-df7dfdf260ad",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 4188,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 500 to equal 200",
                "estack": "AssertionError: expected 500 to equal 200\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:424:40)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "696a7cb7-9341-4e0f-9120-f5214407464a",
              "parentUUID": "5e0e1673-e0a3-4a75-baaf-df7dfdf260ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "696a7cb7-9341-4e0f-9120-f5214407464a"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4188,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e1e3d89f-aac8-4133-8e3a-b1dd16057e4d",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 842,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:46159/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:450:40)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "e3e1ca05-3e3a-4647-9802-6ab875ebadf2",
              "parentUUID": "e1e3d89f-aac8-4133-8e3a-b1dd16057e4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e3e1ca05-3e3a-4647-9802-6ab875ebadf2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 842,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}