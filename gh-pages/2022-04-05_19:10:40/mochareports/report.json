{
  "stats": {
    "suites": 4,
    "tests": 76,
    "passes": 51,
    "pending": 0,
    "failures": 25,
    "start": "2022-04-05T19:08:35.820Z",
    "end": "2022-04-05T19:10:37.758Z",
    "duration": 116902,
    "testsRegistered": 76,
    "passPercent": 67.10526315789474,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "755edb6c-61d2-4435-adb0-348660dc69d9",
      "title": "",
      "fullFile": "cypress/integration/admin/godiddy_spec.js",
      "file": "cypress/integration/admin/godiddy_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cc39a0dd-1098-4321-8099-31bdc17d1f37",
          "title": "Test Scenario 13: Retrieve configuration properties",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 687,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "c947086f-7722-4952-80cc-9df423753f19",
              "parentUUID": "cc39a0dd-1098-4321-8099-31bdc17d1f37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties MUST return JSON object",
              "timedOut": null,
              "duration": 174,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "02bb3b77-40ec-452f-b8f8-68790c2ff2af",
              "parentUUID": "cc39a0dd-1098-4321-8099-31bdc17d1f37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties HTTP response must contain content-type property with value",
              "timedOut": null,
              "duration": 167,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response.headers).has.property(\"content-type\", \"application/json\");\n});",
              "err": {
                "message": "AssertionError: expected { Object (date, content-type, ...) } to have property 'content-type' of 'application/json', but got 'application/json;charset=utf-8'",
                "estack": "AssertionError: expected { Object (date, content-type, ...) } to have property 'content-type' of 'application/json', but got 'application/json;charset=utf-8'\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/admin/godiddy_spec.js:121:36)",
                "diff": "- 'application/json;charset=utf-8'\n+ 'application/json'\n"
              },
              "uuid": "cad2e962-6618-4ea0-8076-3f8dd1d785ad",
              "parentUUID": "cc39a0dd-1098-4321-8099-31bdc17d1f37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c947086f-7722-4952-80cc-9df423753f19",
            "02bb3b77-40ec-452f-b8f8-68790c2ff2af"
          ],
          "failures": [
            "cad2e962-6618-4ea0-8076-3f8dd1d785ad"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1028,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d498c756-aea9-4ed1-9733-cfdfff8a88ee",
          "title": "Test Scenario 14: Retrieve supported DID methods",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test HTTP response",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods Test HTTP response",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "291bcf17-79ae-4f83-adb1-93514d109a69",
              "parentUUID": "d498c756-aea9-4ed1-9733-cfdfff8a88ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods MUST return a JSON object",
              "timedOut": null,
              "duration": 152,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "57e16759-cb87-4f6e-9e35-190a283929c1",
              "parentUUID": "d498c756-aea9-4ed1-9733-cfdfff8a88ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain body of type array",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods MUST contain body of type array",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.be.a(\"array\");\n});",
              "err": {},
              "uuid": "a383521e-0058-4b7a-bce7-1c50c8f8a64e",
              "parentUUID": "d498c756-aea9-4ed1-9733-cfdfff8a88ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test HTTP response",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods Test HTTP response",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.deep.equal([\"btcr\", \"sov\", \"v1\", \"web\", \"ethr\", \"jolo\", \"elem\", \"github\", \"key\", \"ion\", \"gatc\", \"ebsi\", \"tz\", \"pkh\"]);\n});",
              "err": {},
              "uuid": "5ff5e4e6-3482-49e2-8c7d-b09123b3ad51",
              "parentUUID": "d498c756-aea9-4ed1-9733-cfdfff8a88ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "291bcf17-79ae-4f83-adb1-93514d109a69",
            "57e16759-cb87-4f6e-9e35-190a283929c1",
            "a383521e-0058-4b7a-bce7-1c50c8f8a64e",
            "5ff5e4e6-3482-49e2-8c7d-b09123b3ad51"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 632,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9ed6678d-9ad2-456c-b3fb-37bc5bf2078d",
          "title": "Test Scenario 15: Retrieve object of test identifiers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 153,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "000d1744-7e82-4964-abde-fffdd61a5ef6",
              "parentUUID": "9ed6678d-9ad2-456c-b3fb-37bc5bf2078d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return a JSON object",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "8faed5f0-b322-4dee-939e-d9f5dd29f0a6",
              "parentUUID": "9ed6678d-9ad2-456c-b3fb-37bc5bf2078d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a body of type object",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return a body of type object",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "acca7780-bc99-45a4-aa33-42389d89ffa1",
              "parentUUID": "9ed6678d-9ad2-456c-b3fb-37bc5bf2078d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "000d1744-7e82-4964-abde-fffdd61a5ef6",
            "8faed5f0-b322-4dee-939e-d9f5dd29f0a6",
            "acca7780-bc99-45a4-aa33-42389d89ffa1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 483,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ac2e8f84-4228-40d5-9a03-ed4d1a304e3c",
      "title": "",
      "fullFile": "cypress/integration/admin/test_example_spec.js",
      "file": "cypress/integration/admin/test_example_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "111b44d8-13ad-402e-a81d-dad83840c240",
          "title": "Test example DIDs on endpoint: api.dev.godiddy.com",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tests if all example DIDs return HTTP status 200",
              "fullTitle": "Test example DIDs on endpoint: api.dev.godiddy.com Tests if all example DIDs return HTTP status 200",
              "timedOut": null,
              "duration": 582,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "function getExamples() {\n  cy.request({\n    method: \"GET\",\n    url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n    failOnStatusCode: false\n  }).then(response => {\n    const methods = response.body;\n    cy.wrap(methods).as(\"examplesGodiddy\");\n  });\n}\ngetExamples();\ncy.get(\"@examplesGodiddy\").then(response => {\n  console.log(response);\n  Object.keys(response).forEach(key => {\n    response[key].forEach(did => {\n      cy.request({\n        method: \"GET\",\n        url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/identifiers/\" + did,\n        failOnStatusCode: false\n      }).then(response => {\n        softExpect(response.status).to.eq(200);\n      });\n    });\n  });\n});",
              "err": {
                "message": "TypeError: softExpect is not a function",
                "estack": "TypeError: softExpect is not a function\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/admin/test_example_spec.js:125:13)",
                "diff": null
              },
              "uuid": "898c0795-6b85-4e5d-a2ee-66358d0790e6",
              "parentUUID": "111b44d8-13ad-402e-a81d-dad83840c240",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "898c0795-6b85-4e5d-a2ee-66358d0790e6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 582,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "01288ea2-5974-4008-bfa1-0558af2ab18e",
      "title": "",
      "fullFile": "cypress/integration/user/resolver_spec.js",
      "file": "cypress/integration/user/resolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b6e461fb-b791-465b-a3d8-322f1f1d64c6",
          "title": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 200",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP code 200",
              "timedOut": null,
              "duration": 1866,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "ec33a4d4-a99e-46ed-87d5-cd17ae9ed75d",
              "parentUUID": "b6e461fb-b791-465b-a3d8-322f1f1d64c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return a JSON object",
              "timedOut": null,
              "duration": 560,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "f4f5046c-1264-4ea9-a3f1-3d8c425df01f",
              "parentUUID": "b6e461fb-b791-465b-a3d8-322f1f1d64c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "timedOut": null,
              "duration": 1572,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n});",
              "err": {},
              "uuid": "92e7b098-d09c-408a-9816-2f70585913cc",
              "parentUUID": "b6e461fb-b791-465b-a3d8-322f1f1d64c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocument",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocument",
              "timedOut": null,
              "duration": 627,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "7ca48005-a875-4b80-8765-e2b88406cde5",
              "parentUUID": "b6e461fb-b791-465b-a3d8-322f1f1d64c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didResolutionMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didResolutionMetadata",
              "timedOut": null,
              "duration": 636,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didResolutionMetadata\");\n});",
              "err": {},
              "uuid": "a51e9b2c-7d4c-4932-8868-7e1d80c1964b",
              "parentUUID": "b6e461fb-b791-465b-a3d8-322f1f1d64c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocumentMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://resolver.svip.danubetech.com/1.0/identifiers/ Must contain property didDocumentMetadata",
              "timedOut": null,
              "duration": 2545,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocumentMetadata\");\n});",
              "err": {},
              "uuid": "88e02054-141e-482a-bc0e-bfc9b87c6f35",
              "parentUUID": "b6e461fb-b791-465b-a3d8-322f1f1d64c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec33a4d4-a99e-46ed-87d5-cd17ae9ed75d",
            "f4f5046c-1264-4ea9-a3f1-3d8c425df01f",
            "92e7b098-d09c-408a-9816-2f70585913cc",
            "7ca48005-a875-4b80-8765-e2b88406cde5",
            "a51e9b2c-7d4c-4932-8868-7e1d80c1964b",
            "88e02054-141e-482a-bc0e-bfc9b87c6f35"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7806,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "230071e7-e32e-4963-b38f-06c1310b8f60",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have response status 200",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have response status 200",
              "timedOut": null,
              "duration": 918,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "0cd50a9a-64b7-43d2-bf1d-318e42d6a190",
              "parentUUID": "230071e7-e32e-4963-b38f-06c1310b8f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 2: JSON-LD DID document MUST return a JSON object",
              "timedOut": null,
              "duration": 2359,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "8370b25e-f5eb-43fd-bc02-6f4b52d5ddbc",
              "parentUUID": "230071e7-e32e-4963-b38f-06c1310b8f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with content type",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have header with content type",
              "timedOut": null,
              "duration": 829,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "ad7983f3-165e-4f0f-9651-86cc92f0f907",
              "parentUUID": "230071e7-e32e-4963-b38f-06c1310b8f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not have property didDocument",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should not have property didDocument",
              "timedOut": null,
              "duration": 826,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "c86119f4-48b0-46e8-9438-47a90d218002",
              "parentUUID": "230071e7-e32e-4963-b38f-06c1310b8f60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have property @context",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have property @context",
              "timedOut": null,
              "duration": 1757,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "81f3743b-f36e-4634-9e85-4865bca01602",
              "parentUUID": "230071e7-e32e-4963-b38f-06c1310b8f60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cd50a9a-64b7-43d2-bf1d-318e42d6a190",
            "8370b25e-f5eb-43fd-bc02-6f4b52d5ddbc",
            "ad7983f3-165e-4f0f-9651-86cc92f0f907",
            "c86119f4-48b0-46e8-9438-47a90d218002",
            "81f3743b-f36e-4634-9e85-4865bca01602"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6689,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f48a8ede-9dba-4340-95d6-64ab99d5cdcc",
          "title": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 2b: CBOR DID document: https://resolver.svip.danubetech.com/1.0/identifiers/ MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 641,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  headers: {\n    Accept: \"application/did+cbor\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "0984b6ba-632c-4099-8f20-77262cb3b04c",
              "parentUUID": "f48a8ede-9dba-4340-95d6-64ab99d5cdcc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0984b6ba-632c-4099-8f20-77262cb3b04c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 641,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9aea9661-0638-428e-9408-153f95985171",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 406",
              "fullTitle": "Test Scenario 3: Representation not supported MUST return HTTP code 406",
              "timedOut": null,
              "duration": 1700,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  failOnStatusCode: false,\n  headers: {\n    Accept: \"image/png\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(406);\n});",
              "err": {},
              "uuid": "219f6c9d-b123-4f05-8ff5-6049d67c54c6",
              "parentUUID": "9aea9661-0638-428e-9408-153f95985171",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "219f6c9d-b123-4f05-8ff5-6049d67c54c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1700,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "56a99e63-274d-4f43-871a-85141c4f1355",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 410",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP code 410",
              "timedOut": null,
              "duration": 151,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(410);\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:224:36)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "cf8b1283-1050-4eca-9ba4-09ea384a7f2e",
              "parentUUID": "56a99e63-274d-4f43-871a-85141c4f1355",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 4: Deactivated MUST return a JSON object",
              "timedOut": null,
              "duration": 166,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "eab807ec-18a7-431d-9304-5d0d6e3e5e0a",
              "parentUUID": "56a99e63-274d-4f43-871a-85141c4f1355",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP header Content-Type",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "9f476c54-f9c4-4d21-b3f4-fe4b24c947e3",
              "parentUUID": "56a99e63-274d-4f43-871a-85141c4f1355",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "fullTitle": "Test Scenario 4: Deactivated JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "timedOut": null,
              "duration": 157,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal true",
                "estack": "AssertionError: expected undefined to equal true\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:251:66)",
                "diff": null
              },
              "uuid": "7a8a11ec-57b0-482a-8b53-c574613c34c2",
              "parentUUID": "56a99e63-274d-4f43-871a-85141c4f1355",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eab807ec-18a7-431d-9304-5d0d6e3e5e0a",
            "9f476c54-f9c4-4d21-b3f4-fe4b24c947e3"
          ],
          "failures": [
            "cf8b1283-1050-4eca-9ba4-09ea384a7f2e",
            "7a8a11ec-57b0-482a-8b53-c574613c34c2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 615,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4ef532d2-8cab-475e-963e-0cfa1f29b019",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 404",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP code 404",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "0215cb26-0a18-45ec-a2e8-efc410301738",
              "parentUUID": "4ef532d2-8cab-475e-963e-0cfa1f29b019",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "05ff68b8-944b-42d2-8141-924858d37442",
              "parentUUID": "4ef532d2-8cab-475e-963e-0cfa1f29b019",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 5: Not found MUST return a JSON object",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "530c57ac-796b-41e8-bbc8-78780d8f8b83",
              "parentUUID": "4ef532d2-8cab-475e-963e-0cfa1f29b019",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "fullTitle": "Test Scenario 5: Not found JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "timedOut": null,
              "duration": 434,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n});",
              "err": {},
              "uuid": "5d8f6859-7498-41e0-8085-abbaaf79e1d3",
              "parentUUID": "4ef532d2-8cab-475e-963e-0cfa1f29b019",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0215cb26-0a18-45ec-a2e8-efc410301738",
            "05ff68b8-944b-42d2-8141-924858d37442",
            "530c57ac-796b-41e8-bbc8-78780d8f8b83",
            "5d8f6859-7498-41e0-8085-abbaaf79e1d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 879,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fa3e3fac-0399-4fa4-a58b-d07a9c444617",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 400",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP code 400",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
              "err": {},
              "uuid": "e49e35ca-6379-4970-8420-41ae31164a78",
              "parentUUID": "fa3e3fac-0399-4fa4-a58b-d07a9c444617",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 143,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "9a1cb35d-a681-4f3b-bf77-0cbf4339d609",
              "parentUUID": "fa3e3fac-0399-4fa4-a58b-d07a9c444617",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return a JSON object",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "02560693-9688-4749-8692-71869a589fc4",
              "parentUUID": "fa3e3fac-0399-4fa4-a58b-d07a9c444617",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "fullTitle": "Test Scenario 6: Invalid DID JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.contain(\"invalidDid\");\n});",
              "err": {},
              "uuid": "b130d3c2-b9e5-4f99-af3f-1df632f9f720",
              "parentUUID": "fa3e3fac-0399-4fa4-a58b-d07a9c444617",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e49e35ca-6379-4970-8420-41ae31164a78",
            "9a1cb35d-a681-4f3b-bf77-0cbf4339d609",
            "02560693-9688-4749-8692-71869a589fc4",
            "b130d3c2-b9e5-4f99-af3f-1df632f9f720"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 590,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4cb7329d-52f8-4e38-a102-96a78603cd72",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Must return HTTP code 200",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Must return HTTP code 200",
              "timedOut": null,
              "duration": 630,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "6dffcb58-0250-482e-b8fc-733c614e6bb3",
              "parentUUID": "4cb7329d-52f8-4e38-a102-96a78603cd72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return a JSON object",
              "timedOut": null,
              "duration": 654,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "30cd84b8-d69e-4425-affb-b45b4f6d3525",
              "parentUUID": "4cb7329d-52f8-4e38-a102-96a78603cd72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return HTTP header Content-Type with value application/did+ld+json",
              "timedOut": null,
              "duration": 2392,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "7f79ceaf-e4f7-47e0-ad2c-a8836ebdff0b",
              "parentUUID": "4cb7329d-52f8-4e38-a102-96a78603cd72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST NOT contain property didDocument",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST NOT contain property didDocument",
              "timedOut": null,
              "duration": 873,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "98b8950b-9d32-467d-b18d-62b3ed8d93b3",
              "parentUUID": "4cb7329d-52f8-4e38-a102-96a78603cd72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 2522,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "f631637a-e0b8-483f-9e1f-4661c77643a1",
              "parentUUID": "4cb7329d-52f8-4e38-a102-96a78603cd72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property type",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property type",
              "timedOut": null,
              "duration": 919,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"type\");\n});",
              "err": {},
              "uuid": "bab99748-0a80-4e75-98d0-498b908d2a55",
              "parentUUID": "4cb7329d-52f8-4e38-a102-96a78603cd72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property id with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property id with value application/did+ld+json",
              "timedOut": null,
              "duration": 859,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body[\"id\"]).to.contain(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {},
              "uuid": "93693237-ef6d-49ff-a483-6296c13d90aa",
              "parentUUID": "4cb7329d-52f8-4e38-a102-96a78603cd72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6dffcb58-0250-482e-b8fc-733c614e6bb3",
            "30cd84b8-d69e-4425-affb-b45b4f6d3525",
            "7f79ceaf-e4f7-47e0-ad2c-a8836ebdff0b",
            "98b8950b-9d32-467d-b18d-62b3ed8d93b3",
            "f631637a-e0b8-483f-9e1f-4661c77643a1",
            "bab99748-0a80-4e75-98d0-498b908d2a55",
            "93693237-ef6d-49ff-a483-6296c13d90aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8849,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b62b8e62-1754-48ba-8915-400a4d3d5a16",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 219,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:web:danubetech.com?service=github&relativeRef=did-method-dns\",\n  headers: {\n    Accept: \"text/uri-list\"\n  },\n  failOnStatusCode: false\n}).as(\"response\");\nit(\"MUST return HTTP response status equals 303\", () => {\n  cy.get(\"@response\").then(response => {\n    expect(response.status).to.eq(303);\n  });\n});\nit(\"MUST return a JSON object\", () => {\n  cy.get(\"@request\").then(response => {\n    expect(response).to.be.a(\"object\");\n  });\n});",
              "err": {},
              "uuid": "c99ea393-8aec-4af6-9dfd-5905060cf58d",
              "parentUUID": "b62b8e62-1754-48ba-8915-400a4d3d5a16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c99ea393-8aec-4af6-9dfd-5905060cf58d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 219,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "376067db-2868-4585-b322-da1ff504e3dc",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 2200,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "b6f5431d-f93c-4109-bf4f-4ee36d9a30b8",
              "parentUUID": "376067db-2868-4585-b322-da1ff504e3dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return a JSON object",
              "timedOut": null,
              "duration": 777,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "9d0b8ae1-88c1-4b2e-bd89-28aa36e58cb8",
              "parentUUID": "376067db-2868-4585-b322-da1ff504e3dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property verificationMethod of type JsonWebKey2020",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property verificationMethod of type JsonWebKey2020",
              "timedOut": null,
              "duration": 2460,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  response.body.verificationMethod.forEach(out => {\n    expect(out).has.property(\"type\", \"JsonWebKey2020\");\n  });\n});",
              "err": {},
              "uuid": "a7e8f265-3f64-4839-b6a5-d2e4a41ba9f1",
              "parentUUID": "376067db-2868-4585-b322-da1ff504e3dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 854,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "a9257bc9-7294-4ee7-87d9-54e65e0e4399",
              "parentUUID": "376067db-2868-4585-b322-da1ff504e3dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "timedOut": null,
              "duration": 857,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:WRfXPg8dantKVubE3HX8pw\");\n});",
              "err": {},
              "uuid": "4f10d0dc-db20-47da-a40b-e1e7637eca55",
              "parentUUID": "376067db-2868-4585-b322-da1ff504e3dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6f5431d-f93c-4109-bf4f-4ee36d9a30b8",
            "9d0b8ae1-88c1-4b2e-bd89-28aa36e58cb8",
            "a7e8f265-3f64-4839-b6a5-d2e4a41ba9f1",
            "a9257bc9-7294-4ee7-87d9-54e65e0e4399",
            "4f10d0dc-db20-47da-a40b-e1e7637eca55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7148,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "69e8cfab-6d11-48a2-845f-7fe0420353b3",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5044,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:486:10)",
                "diff": null
              },
              "uuid": "3a6c4610-a278-4658-bf4f-80610b4342f8",
              "parentUUID": "69e8cfab-6d11-48a2-845f-7fe0420353b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 5059,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:498:10)",
                "diff": null
              },
              "uuid": "ea7609e2-4080-4f07-9569-10e44f7885d7",
              "parentUUID": "69e8cfab-6d11-48a2-845f-7fe0420353b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return JSON object",
              "timedOut": null,
              "duration": 5060,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:510:10)",
                "diff": null
              },
              "uuid": "727d9f30-6dc7-41a8-8add-ef72d6bbdf05",
              "parentUUID": "69e8cfab-6d11-48a2-845f-7fe0420353b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property @context",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property @context",
              "timedOut": null,
              "duration": 5061,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:522:10)",
                "diff": null
              },
              "uuid": "94965d42-4837-4950-86a0-f115a67d0186",
              "parentUUID": "69e8cfab-6d11-48a2-845f-7fe0420353b3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id with value ",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property id with value ",
              "timedOut": null,
              "duration": 5062,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:534:10)",
                "diff": null
              },
              "uuid": "355ca699-b96e-4e87-a8b8-618893a6bb62",
              "parentUUID": "69e8cfab-6d11-48a2-845f-7fe0420353b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3a6c4610-a278-4658-bf4f-80610b4342f8",
            "ea7609e2-4080-4f07-9569-10e44f7885d7",
            "727d9f30-6dc7-41a8-8add-ef72d6bbdf05",
            "94965d42-4837-4950-86a0-f115a67d0186",
            "355ca699-b96e-4e87-a8b8-618893a6bb62"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25286,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bfb9b82e-870f-42bb-a426-d0c1cbc699c6",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5064,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:551:10)",
                "diff": null
              },
              "uuid": "755eb258-6ce7-4d0e-8f66-8b0a1367dec5",
              "parentUUID": "bfb9b82e-870f-42bb-a426-d0c1cbc699c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return JSON object",
              "timedOut": null,
              "duration": 5067,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:563:10)",
                "diff": null
              },
              "uuid": "e3ff55e0-f6e5-419e-99c5-c34cc4f7424b",
              "parentUUID": "bfb9b82e-870f-42bb-a426-d0c1cbc699c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 5067,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:575:10)",
                "diff": null
              },
              "uuid": "52e54e23-cfb5-4cf1-bb0c-74f48b721a7f",
              "parentUUID": "bfb9b82e-870f-42bb-a426-d0c1cbc699c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 5070,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:587:10)",
                "diff": null
              },
              "uuid": "c68a4a88-e0ca-44f1-909f-1fea29e741d8",
              "parentUUID": "bfb9b82e-870f-42bb-a426-d0c1cbc699c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST contain property id",
              "timedOut": null,
              "duration": 5067,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:599:10)",
                "diff": null
              },
              "uuid": "0aa6e8d3-f5e3-4272-8e81-b036e194f3c2",
              "parentUUID": "bfb9b82e-870f-42bb-a426-d0c1cbc699c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "755eb258-6ce7-4d0e-8f66-8b0a1367dec5",
            "e3ff55e0-f6e5-419e-99c5-c34cc4f7424b",
            "52e54e23-cfb5-4cf1-bb0c-74f48b721a7f",
            "c68a4a88-e0ca-44f1-909f-1fea29e741d8",
            "0aa6e8d3-f5e3-4272-8e81-b036e194f3c2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25335,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "563235c2-a802-482f-a13a-71571cf4d604",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 725,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "19c1f1dd-6c0e-440a-90ea-a9ecaad31daf",
              "parentUUID": "563235c2-a802-482f-a13a-71571cf4d604",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 292,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "c174752b-057a-4176-8c72-0b8bc205be61",
              "parentUUID": "563235c2-a802-482f-a13a-71571cf4d604",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property id",
              "timedOut": null,
              "duration": 377,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "a20d89d1-3d7a-488a-807f-64a61b5743ca",
              "parentUUID": "563235c2-a802-482f-a13a-71571cf4d604",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property keyAgreement",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property keyAgreement",
              "timedOut": null,
              "duration": 250,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"keyAgreement\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "541b2d57-7718-4dc1-af91-35c415940cbf",
              "parentUUID": "563235c2-a802-482f-a13a-71571cf4d604",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19c1f1dd-6c0e-440a-90ea-a9ecaad31daf",
            "c174752b-057a-4176-8c72-0b8bc205be61",
            "a20d89d1-3d7a-488a-807f-64a61b5743ca",
            "541b2d57-7718-4dc1-af91-35c415940cbf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1644,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1716fde2-0e6e-4b20-a425-87d00d467464",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 241,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:677:36)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "feabc7f6-8374-4662-a25e-f39133fab4f9",
              "parentUUID": "1716fde2-0e6e-4b20-a425-87d00d467464",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "timedOut": null,
              "duration": 372,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n});",
              "err": {
                "message": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given",
                "estack": "AssertionError: object tested must be an array, a map, an object, a set, a string, or a weakset, but undefined given\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/resolver_spec.js:689:9)",
                "diff": null
              },
              "uuid": "87a44643-66a1-41e9-beaa-d446e2acc451",
              "parentUUID": "1716fde2-0e6e-4b20-a425-87d00d467464",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "feabc7f6-8374-4662-a25e-f39133fab4f9",
            "87a44643-66a1-41e9-beaa-d446e2acc451"
          ],
          "pending": [],
          "skipped": [],
          "duration": 613,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ff6e892e-bfdc-4b49-b2bd-c6952a315093",
      "title": "",
      "fullFile": "cypress/integration/user/uniresolver_fixtures_spec.js",
      "file": "cypress/integration/user/uniresolver_fixtures_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ac2d0a79-8783-44f9-8739-cc3d9744831f",
          "title": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: https://resolver.svip.danubetech.com/1.0/identifiers/ A correct DID can be resolved",
              "timedOut": null,
              "duration": 5776,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"].replace(/\\s+/g, \"\")).contains('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 500 to equal 200",
                "estack": "AssertionError: expected 500 to equal 200\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:113:40)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "a88277f6-6b13-4770-af79-666dbb708c12",
              "parentUUID": "ac2d0a79-8783-44f9-8739-cc3d9744831f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a88277f6-6b13-4770-af79-666dbb708c12"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5776,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a5672411-9785-4219-bc56-4241567ccd08",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 2786,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"@context\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected { Object (id, verificationMethod, ...) } to have property '@context'",
                "estack": "AssertionError: expected { Object (id, verificationMethod, ...) } to have property '@context'\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:151:43)",
                "diff": null
              },
              "uuid": "4c8501fd-5610-4fc7-9f36-b1bdfd9c99d5",
              "parentUUID": "a5672411-9785-4219-bc56-4241567ccd08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4c8501fd-5610-4fc7-9f36-b1bdfd9c99d5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2786,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1a356984-c362-48d8-b29f-28f76bcdf989",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 1721,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n    });\n  });\n});",
              "err": {},
              "uuid": "97533ea1-f824-425d-a1b0-7410d0cc4711",
              "parentUUID": "1a356984-c362-48d8-b29f-28f76bcdf989",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97533ea1-f824-425d-a1b0-7410d0cc4711"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1721,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4d3d0540-010c-4b27-a55b-7c080ec8cbcf",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 150,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); //FAILS\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:218:40)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "2a36dc2e-83b6-4146-b0a5-8558eab39ddd",
              "parentUUID": "4d3d0540-010c-4b27-a55b-7c080ec8cbcf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "2a36dc2e-83b6-4146-b0a5-8558eab39ddd"
          ],
          "pending": [],
          "skipped": [],
          "duration": 150,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5fc3fc52-1b1c-43a8-b2a4-1a1d64e7b462",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {},
              "uuid": "ab96d08f-dff4-4a1d-bd32-797e395a1d54",
              "parentUUID": "5fc3fc52-1b1c-43a8-b2a4-1a1d64e7b462",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ab96d08f-dff4-4a1d-bd32-797e395a1d54"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "11fdd02a-0ccc-4191-963c-c81b175c5f1c",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 149,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 'invalidDidUrl' to equal 'invalidDid'",
                "estack": "AssertionError: expected 'invalidDidUrl' to equal 'invalidDid'\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:263:66)",
                "diff": "- 'invalidDidUrl'\n+ 'invalidDid'\n"
              },
              "uuid": "62f43af5-bdc5-4903-b634-cf9a666055ca",
              "parentUUID": "11fdd02a-0ccc-4191-963c-c81b175c5f1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "62f43af5-bdc5-4903-b634-cf9a666055ca"
          ],
          "pending": [],
          "skipped": [],
          "duration": 149,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7e0e15f3-5cef-4abb-8311-e9dcaeb5288a",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 212,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"relativeParamDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      headers: {\n        Accept: \"text/uri-list\"\n      },\n      failOnStatusCode: false\n    }).as(\"response\");\n    cy.get(\"@response\").then(response => {\n      expect(response.status).to.eq(303);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 200 to equal 303",
                "estack": "AssertionError: expected 200 to equal 303\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:316:40)",
                "diff": "- 200\n+ 303\n"
              },
              "uuid": "e0339468-60d4-4633-9a47-0df127319d38",
              "parentUUID": "7e0e15f3-5cef-4abb-8311-e9dcaeb5288a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e0339468-60d4-4633-9a47-0df127319d38"
          ],
          "pending": [],
          "skipped": [],
          "duration": 212,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "eff475bf-e748-46e0-95eb-8cc7d7570cdf",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5079,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"versionTimeDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionTimeDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionTimeDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response).to.be.a(\"object\");\n      expect(response.body).to.have.property(\"@context\");\n      expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:360:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:358:27)",
                "diff": null
              },
              "uuid": "24382bb0-0831-4b05-aaf3-7ffd2ca23236",
              "parentUUID": "eff475bf-e748-46e0-95eb-8cc7d7570cdf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "24382bb0-0831-4b05-aaf3-7ffd2ca23236"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5079,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "32844ab9-8d39-48f7-95d3-ee3ceddd33e1",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 5079,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"versionIdDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const versionIdDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + versionIdDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response).to.be.a(\"object\");\n      expect(response.body).to.have.property(\"@context\");\n      expect(response.headers[\"content-type\"]).contains(\"application/did+ld+json\");\n      expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `5000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://resolver.svip.danubetech.com/1.0/identifiers/did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at http://localhost:34959/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (http://localhost:34959/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (http://localhost:34959/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (http://localhost:34959/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (http://localhost:34959/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (http://localhost:34959/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (http://localhost:34959/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (http://localhost:34959/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (http://localhost:34959/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:387:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:385:27)",
                "diff": null
              },
              "uuid": "4a371ecc-475b-4981-9d3c-b45c606ff4e0",
              "parentUUID": "32844ab9-8d39-48f7-95d3-ee3ceddd33e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4a371ecc-475b-4981-9d3c-b45c606ff4e0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5079,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ea785445-ebe4-42a4-b1bc-ac6d68057110",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 4055,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/json\"\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains(\"application/did+json;charset=utf-8\");\n      expect(response.body).has.property(\"id\", normalDid); // expect(response.body[\"keyAgreement\"][0]).to.contain(normalDid);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 500 to equal 200",
                "estack": "AssertionError: expected 500 to equal 200\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:424:40)",
                "diff": "- 500\n+ 200\n"
              },
              "uuid": "1fe004d7-a34d-419d-90b8-8bf2116a77a9",
              "parentUUID": "ea785445-ebe4-42a4-b1bc-ac6d68057110",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1fe004d7-a34d-419d-90b8-8bf2116a77a9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4055,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7ee8bb7e-3d9b-41e9-873c-bbfb0f13b8d1",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 1007,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n      },\n      failOnStatusCode: false\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(\"normal did is:\", normalDid);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).contains('application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:34959/__cypress/tests?p=cypress/integration/user/uniresolver_fixtures_spec.js:450:40)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "083ce243-4312-46f9-9bb0-079fd8b7621f",
              "parentUUID": "7ee8bb7e-3d9b-41e9-873c-bbfb0f13b8d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "083ce243-4312-46f9-9bb0-079fd8b7621f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1007,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}