{
  "stats": {
    "suites": 7,
    "tests": 25,
    "passes": 23,
    "pending": 0,
    "failures": 2,
    "start": "2022-03-29T08:36:47.857Z",
    "end": "2022-03-29T08:36:59.523Z",
    "duration": 11666,
    "testsRegistered": 25,
    "passPercent": 92,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bf03a74a-d2e6-4dd7-ad9a-4503627cbc83",
      "title": "",
      "fullFile": "cypress/integration/user/new_tests_spec.js",
      "file": "cypress/integration/user/new_tests_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "967f8aa9-84e2-48f7-8beb-03fe47136d62",
          "title": "Test Scenario 2b: CBOR DID document: https://api.godiddy.com/0.1.0/universal-resolver/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 2b: CBOR DID document: https://api.godiddy.com/0.1.0/universal-resolver/identifiers/ MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 2817,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  headers: {\n    Accept: \"application/did+cbor\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "8efe76df-1868-4d03-8d53-b3856817348d",
              "parentUUID": "967f8aa9-84e2-48f7-8beb-03fe47136d62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8efe76df-1868-4d03-8d53-b3856817348d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2817,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "aeb35c08-f3d5-44d2-8bf3-4eb048e4ec3e",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Fetches DID",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters Fetches DID",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:web:danubetech.com?service=github&relativeRef=did-method-dns\",\n  headers: {\n    Accept: \"text/uri-list\"\n  },\n  failOnStatusCode: false\n}).as(\"response\");\nit(\"MUST return HTTP response status equals 303\", () => {\n  cy.get(\"@response\").then(response => {\n    expect(response.status).to.eq(303);\n  });\n});",
              "err": {},
              "uuid": "dc70a0cf-f17a-4210-aca1-221f422f23e9",
              "parentUUID": "aeb35c08-f3d5-44d2-8bf3-4eb048e4ec3e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc70a0cf-f17a-4210-aca1-221f422f23e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 82,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "12fc4e60-6568-4891-9714-d8e4fbc4cdbf",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 783,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "adfd2628-c97f-4f9d-8690-c795b1b18569",
              "parentUUID": "12fc4e60-6568-4891-9714-d8e4fbc4cdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return a JSON object",
              "timedOut": null,
              "duration": 2069,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "b606e10a-8fdf-4f45-aa35-9d09ccab42f7",
              "parentUUID": "12fc4e60-6568-4891-9714-d8e4fbc4cdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property verificationMethod of type JsonWebKey2020",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property verificationMethod of type JsonWebKey2020",
              "timedOut": null,
              "duration": 679,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // todo alle verificationMethods testen (nicht nur [0] im loop)\n  expect(response.body.verificationMethod[0]).has.property(\"type\", \"JsonWebKey2020\");\n});",
              "err": {},
              "uuid": "bdb4b4cc-f809-4b1f-95fb-4336a2674a39",
              "parentUUID": "12fc4e60-6568-4891-9714-d8e4fbc4cdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 859,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  // todo nur substring anschauen application/did+ld+json, charset ist nicht so wiechtig kann Ã¤ndern aber profile schon\n  expect(response.headers).has.property(\"content-type\", \"application/did+ld+json\");\n});",
              "err": {
                "message": "AssertionError: expected { Object (date, content-type, ...) } to have property 'content-type' of 'application/did+ld+json', but got 'application/did+ld+json;charset=utf-8'",
                "estack": "AssertionError: expected { Object (date, content-type, ...) } to have property 'content-type' of 'application/did+ld+json', but got 'application/did+ld+json;charset=utf-8'\n    at Context.eval (http://localhost:60274/__cypress/tests?p=cypress/integration/user/new_tests_spec.js:180:36)",
                "diff": "- 'application/did+ld+json;charset=utf-8'\n+ 'application/did+ld+json'\n"
              },
              "uuid": "437f5bad-5142-4f33-b5ad-83d3223dc5d6",
              "parentUUID": "12fc4e60-6568-4891-9714-d8e4fbc4cdbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "timedOut": null,
              "duration": 1544,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:WRfXPg8dantKVubE3HX8pw\");\n});",
              "err": {},
              "uuid": "6ce4cb41-bf51-47b8-8daa-95a855dcdc62",
              "parentUUID": "12fc4e60-6568-4891-9714-d8e4fbc4cdbf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "adfd2628-c97f-4f9d-8690-c795b1b18569",
            "b606e10a-8fdf-4f45-aa35-9d09ccab42f7",
            "bdb4b4cc-f809-4b1f-95fb-4336a2674a39",
            "6ce4cb41-bf51-47b8-8daa-95a855dcdc62"
          ],
          "failures": [
            "437f5bad-5142-4f33-b5ad-83d3223dc5d6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5934,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6076e38a-dd8e-48ac-a3ee-96704ebf784f",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "85d6c366-0d82-4212-a862-c601797685b0",
              "parentUUID": "6076e38a-dd8e-48ac-a3ee-96704ebf784f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "8597acdf-4cea-4f27-a1f6-c54d84214074",
              "parentUUID": "6076e38a-dd8e-48ac-a3ee-96704ebf784f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return JSON object",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "a5035d44-6308-43d3-9068-10cc822d5664",
              "parentUUID": "6076e38a-dd8e-48ac-a3ee-96704ebf784f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property @context",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property @context",
              "timedOut": null,
              "duration": 100,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "cc3e5d2e-ec47-4ba9-9093-ac80f1e09925",
              "parentUUID": "6076e38a-dd8e-48ac-a3ee-96704ebf784f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id with value ",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property id with value ",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {},
              "uuid": "491e6b81-777c-4929-a79b-1a5449125bb2",
              "parentUUID": "6076e38a-dd8e-48ac-a3ee-96704ebf784f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "85d6c366-0d82-4212-a862-c601797685b0",
            "8597acdf-4cea-4f27-a1f6-c54d84214074",
            "a5035d44-6308-43d3-9068-10cc822d5664",
            "cc3e5d2e-ec47-4ba9-9093-ac80f1e09925",
            "491e6b81-777c-4929-a79b-1a5449125bb2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 570,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5970f229-e6a6-426e-a2db-a18a8e3622aa",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "259b984d-a036-49fd-9fe6-63a907cfc6d3",
              "parentUUID": "5970f229-e6a6-426e-a2db-a18a8e3622aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return JSON object",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "37458264-0d9e-43dd-82a8-f27cbb8d3ff9",
              "parentUUID": "5970f229-e6a6-426e-a2db-a18a8e3622aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "1db88a6c-1575-4a92-bf0a-72413ee362f5",
              "parentUUID": "5970f229-e6a6-426e-a2db-a18a8e3622aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "362fbe9f-2a98-48f4-984b-6cf44b445724",
              "parentUUID": "5970f229-e6a6-426e-a2db-a18a8e3622aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST contain property id",
              "timedOut": null,
              "duration": 110,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {},
              "uuid": "9dbb2ab1-653d-47fa-b694-a6d9a7544a26",
              "parentUUID": "5970f229-e6a6-426e-a2db-a18a8e3622aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "259b984d-a036-49fd-9fe6-63a907cfc6d3",
            "37458264-0d9e-43dd-82a8-f27cbb8d3ff9",
            "1db88a6c-1575-4a92-bf0a-72413ee362f5",
            "362fbe9f-2a98-48f4-984b-6cf44b445724",
            "9dbb2ab1-653d-47fa-b694-a6d9a7544a26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 532,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8da4e0bb-b1cd-4961-8201-524009334279",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "a5010092-33a8-4c5b-a63d-67f5d549841f",
              "parentUUID": "8da4e0bb-b1cd-4961-8201-524009334279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers).has.property(\"content-type\", \"application/did+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "b2a0860f-c83a-4cba-b29c-bde56e31a231",
              "parentUUID": "8da4e0bb-b1cd-4961-8201-524009334279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property id",
              "timedOut": null,
              "duration": 381,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "f77ea55c-7554-4b34-a631-774e67efc81c",
              "parentUUID": "8da4e0bb-b1cd-4961-8201-524009334279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property authentication",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property authentication",
              "timedOut": null,
              "duration": 180,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"authentication\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "c86d2a63-89e0-458b-bd16-dd478f07b912",
              "parentUUID": "8da4e0bb-b1cd-4961-8201-524009334279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property assertionMethod",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property assertionMethod",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"assertionMethod\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "35118e5a-840c-4a84-80f1-e5c7a17ad6b5",
              "parentUUID": "8da4e0bb-b1cd-4961-8201-524009334279",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property keyAgreement",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property keyAgreement",
              "timedOut": null,
              "duration": 403,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"keyAgreement\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "b453d818-b907-4ddc-ae76-a02fc3c001dc",
              "parentUUID": "8da4e0bb-b1cd-4961-8201-524009334279",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5010092-33a8-4c5b-a63d-67f5d549841f",
            "b2a0860f-c83a-4cba-b29c-bde56e31a231",
            "f77ea55c-7554-4b34-a631-774e67efc81c",
            "c86d2a63-89e0-458b-bd16-dd478f07b912",
            "35118e5a-840c-4a84-80f1-e5c7a17ad6b5",
            "b453d818-b907-4ddc-ae76-a02fc3c001dc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1263,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "018f4f09-70d2-44e9-b135-d77ec839028d",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 135,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:60274/__cypress/tests?p=cypress/integration/user/new_tests_spec.js:410:34)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "b7550635-89ce-43aa-9f4a-7639284de265",
              "parentUUID": "018f4f09-70d2-44e9-b135-d77ec839028d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers).has.property(\"content-type\", 'application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n});",
              "err": {},
              "uuid": "0295ad55-b377-413b-8ff8-7c2979a6eb16",
              "parentUUID": "018f4f09-70d2-44e9-b135-d77ec839028d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0295ad55-b377-413b-8ff8-7c2979a6eb16"
          ],
          "failures": [
            "b7550635-89ce-43aa-9f4a-7639284de265"
          ],
          "pending": [],
          "skipped": [],
          "duration": 340,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}