{
  "stats": {
    "suites": 4,
    "tests": 70,
    "passes": 54,
    "pending": 0,
    "failures": 16,
    "start": "2022-03-23T11:09:19.218Z",
    "end": "2022-03-23T11:09:56.661Z",
    "duration": 33221,
    "testsRegistered": 70,
    "passPercent": 77.14285714285714,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "014739a5-f96f-4389-915f-5ee9ee2703f9",
      "title": "",
      "fullFile": "cypress/integration/new_tests_spec.js",
      "file": "cypress/integration/new_tests_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e7ab67d2-7d10-431d-b7e5-680b3efffc9d",
          "title": "Test Scenario 2b: CBOR DID document: https://api.godiddy.com/0.1.0/universal-resolver/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 2b: CBOR DID document: https://api.godiddy.com/0.1.0/universal-resolver/identifiers/ MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 1799,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  headers: {\n    Accept: \"application/did+cbor\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "1bf46391-b551-4fd0-b0df-dbef20faaf8a",
              "parentUUID": "e7ab67d2-7d10-431d-b7e5-680b3efffc9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1bf46391-b551-4fd0-b0df-dbef20faaf8a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1799,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d5983ce4-6d46-46cb-9b55-635d27fb4791",
          "title": "Test Scenario 8: Service and relativeRef parameters",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 303",
              "fullTitle": "Test Scenario 8: Service and relativeRef parameters MUST return HTTP response status 303",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:web:danubetech.com?service=github&relativeRef=did-method-dns\",\n  headers: {\n    Accept: \"text/uri-list\"\n  },\n  failOnStatusCode: false\n}).as(\"response\");\nit(\"MUST return HTTP response status equals 300\", () => {\n  cy.get(\"@response\").then(response => {\n    expect(response.status).to.eq(303);\n  });\n});",
              "err": {},
              "uuid": "4c272324-b5c7-4471-8081-9a51a277dc9e",
              "parentUUID": "d5983ce4-6d46-46cb-9b55-635d27fb4791",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4c272324-b5c7-4471-8081-9a51a277dc9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 80,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2f2f170a-f1a1-49e8-851c-ead3829d600e",
          "title": "Test Scenario 9: DID URLs with transformKeys",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 586,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "c3bc6d32-8a6b-4846-b224-a33275159f01",
              "parentUUID": "2f2f170a-f1a1-49e8-851c-ead3829d600e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return a JSON object",
              "timedOut": null,
              "duration": 1035,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "da130e6a-f246-4abc-922b-38be68a0e928",
              "parentUUID": "2f2f170a-f1a1-49e8-851c-ead3829d600e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property verificationMethod of type JsonWebKey2020",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property verificationMethod of type JsonWebKey2020",
              "timedOut": null,
              "duration": 320,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.verificationMethod[0]).has.property(\"type\", \"JsonWebKey2020\");\n});",
              "err": {},
              "uuid": "2291d178-28fd-466d-80de-ee9b9bc305c3",
              "parentUUID": "2f2f170a-f1a1-49e8-851c-ead3829d600e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 365,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers).has.property(\"content-type\", \"application/did+ld+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "097de8d6-89e3-4fc9-a331-5f9b02b44d74",
              "parentUUID": "2f2f170a-f1a1-49e8-851c-ead3829d600e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property id with value did:sov:WRfXPg8dantKVubE3HX8pw",
              "timedOut": null,
              "duration": 1480,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:WRfXPg8dantKVubE3HX8pw\");\n});",
              "err": {},
              "uuid": "d1b40db1-eb84-4449-b47b-3ae04b798af0",
              "parentUUID": "2f2f170a-f1a1-49e8-851c-ead3829d600e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property assertionMethod with value did:sov:WRfXPg8dantKVubE3HX8pw#key-1",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property assertionMethod with value did:sov:WRfXPg8dantKVubE3HX8pw#key-1",
              "timedOut": null,
              "duration": 540,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.assertionMethod[0]).to.eq(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {},
              "uuid": "90056b24-4f1e-4e86-b25b-97f1ba4cc734",
              "parentUUID": "2f2f170a-f1a1-49e8-851c-ead3829d600e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return property authentication with value did:sov:WRfXPg8dantKVubE3HX8pw#key-1",
              "fullTitle": "Test Scenario 9: DID URLs with transformKeys MUST return property authentication with value did:sov:WRfXPg8dantKVubE3HX8pw#key-1",
              "timedOut": null,
              "duration": 1687,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw?transformKeys=JsonWebKey2020\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.authentication[0]).to.eq(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {},
              "uuid": "c5f8ef1b-808f-465f-bac5-256681a2460c",
              "parentUUID": "2f2f170a-f1a1-49e8-851c-ead3829d600e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3bc6d32-8a6b-4846-b224-a33275159f01",
            "da130e6a-f246-4abc-922b-38be68a0e928",
            "2291d178-28fd-466d-80de-ee9b9bc305c3",
            "097de8d6-89e3-4fc9-a331-5f9b02b44d74",
            "d1b40db1-eb84-4449-b47b-3ae04b798af0",
            "90056b24-4f1e-4e86-b25b-97f1ba4cc734",
            "c5f8ef1b-808f-465f-bac5-256681a2460c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6013,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "56d44ad2-0938-48ba-bfe0-61a60135ad39",
          "title": "Test Scenario 10: DID URLs with versionTime parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 160,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "bb15157d-f17c-4b46-9113-032b893ba24c",
              "parentUUID": "56d44ad2-0938-48ba-bfe0-61a60135ad39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "f4e02df1-bd5b-4148-bb6c-71a90443a36f",
              "parentUUID": "56d44ad2-0938-48ba-bfe0-61a60135ad39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST return JSON object",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "b4c8e738-3229-4c7b-a93e-878a0d7214b6",
              "parentUUID": "56d44ad2-0938-48ba-bfe0-61a60135ad39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property @context",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property @context",
              "timedOut": null,
              "duration": 120,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "33fe5c27-5703-4487-b1ef-23e9e1a943a8",
              "parentUUID": "56d44ad2-0938-48ba-bfe0-61a60135ad39",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id with value ",
              "fullTitle": "Test Scenario 10: DID URLs with versionTime parameter MUST contain property id with value ",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionTime=2018-12-10T02:22:49Z\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {},
              "uuid": "28b17086-78ae-40a0-b7e0-10b17aa70a2d",
              "parentUUID": "56d44ad2-0938-48ba-bfe0-61a60135ad39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb15157d-f17c-4b46-9113-032b893ba24c",
            "f4e02df1-bd5b-4148-bb6c-71a90443a36f",
            "b4c8e738-3229-4c7b-a93e-878a0d7214b6",
            "33fe5c27-5703-4487-b1ef-23e9e1a943a8",
            "28b17086-78ae-40a0-b7e0-10b17aa70a2d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 605,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ac454403-bb79-4ab4-bc1c-a3ff049812f2",
          "title": "Test Scenario 11: DID URLs with versionId parameter",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "7051dede-0bd8-4c86-80f2-5cf2f7f22068",
              "parentUUID": "ac454403-bb79-4ab4-bc1c-a3ff049812f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return JSON object",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "e148e858-1482-4243-a8bb-9cfb6b8d9e87",
              "parentUUID": "ac454403-bb79-4ab4-bc1c-a3ff049812f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "d2484440-faba-487c-a7cb-e6b2781ae7f5",
              "parentUUID": "ac454403-bb79-4ab4-bc1c-a3ff049812f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "c658fab1-cefb-4e3a-a63a-70bd1da55c81",
              "parentUUID": "ac454403-bb79-4ab4-bc1c-a3ff049812f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 11: DID URLs with versionId parameter MUST contain property id",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:DjxRxnL4gXsncbH8jM8ySM?versionId=105\",\n  headers: {\n    Accept: \"application/did+ld+json;charset=utf-8\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:DjxRxnL4gXsncbH8jM8ySM\");\n});",
              "err": {},
              "uuid": "3061d3b1-ae69-4ec5-b33d-6104e17b9140",
              "parentUUID": "ac454403-bb79-4ab4-bc1c-a3ff049812f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7051dede-0bd8-4c86-80f2-5cf2f7f22068",
            "e148e858-1482-4243-a8bb-9cfb6b8d9e87",
            "d2484440-faba-487c-a7cb-e6b2781ae7f5",
            "c658fab1-cefb-4e3a-a63a-70bd1da55c81",
            "3061d3b1-ae69-4ec5-b33d-6104e17b9140"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 553,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "abf2a695-94f8-4d38-a3c7-cb1a1fcae3fc",
          "title": "Test Scenario 12: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 388,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "910b71b6-d611-4412-b942-361796b8443f",
              "parentUUID": "abf2a695-94f8-4d38-a3c7-cb1a1fcae3fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header with Content-Type",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST return HTTP header with Content-Type",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers).has.property(\"content-type\", \"application/did+json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "2af0fa51-24e3-4a4c-a246-9391e2f21c97",
              "parentUUID": "abf2a695-94f8-4d38-a3c7-cb1a1fcae3fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property id",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property id",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).has.property(\"id\", \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "7590a503-2db5-428f-9c88-2ad60d024f35",
              "parentUUID": "abf2a695-94f8-4d38-a3c7-cb1a1fcae3fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property authentication",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property authentication",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"authentication\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "0d7f8d8c-94e0-46ac-a0f3-040cec3ffef6",
              "parentUUID": "abf2a695-94f8-4d38-a3c7-cb1a1fcae3fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property assertionMethod",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property assertionMethod",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"assertionMethod\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "627608d0-2b2c-4250-9c17-8b1a1325bf3d",
              "parentUUID": "abf2a695-94f8-4d38-a3c7-cb1a1fcae3fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain property keyAgreement",
              "fullTitle": "Test Scenario 12: Resolve a DID / dereference a DID URL MUST contain property keyAgreement",
              "timedOut": null,
              "duration": 498,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: \"application/json\"\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body[\"keyAgreement\"][0]).to.contain(\"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\");\n});",
              "err": {},
              "uuid": "2967bd06-54af-4ead-ad10-9a004e8b4abe",
              "parentUUID": "abf2a695-94f8-4d38-a3c7-cb1a1fcae3fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "910b71b6-d611-4412-b942-361796b8443f",
            "2af0fa51-24e3-4a4c-a246-9391e2f21c97",
            "7590a503-2db5-428f-9c88-2ad60d024f35",
            "0d7f8d8c-94e0-46ac-a0f3-040cec3ffef6",
            "627608d0-2b2c-4250-9c17-8b1a1325bf3d",
            "2967bd06-54af-4ead-ad10-9a004e8b4abe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1453,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b848b800-db4d-41bf-ba6b-dce77a2e6d74",
          "title": "Test Scenario 12B: Resolve a DID / dereference a DID URL",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 136,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 406 to equal 200",
                "estack": "AssertionError: expected 406 to equal 200\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/new_tests_spec.js:428:34)",
                "diff": "- 406\n+ 200\n"
              },
              "uuid": "05f7adb5-f68c-477e-96bc-f743784bc66b",
              "parentUUID": "b848b800-db4d-41bf-ba6b-dce77a2e6d74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "fullTitle": "Test Scenario 12B: Resolve a DID / dereference a DID URL HTTP response must contain content-type property with value application/did+json;charset=utf-8",
              "timedOut": null,
              "duration": 333,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:builder:VbPQNHsvoLZdaNU7fTBeFx\",\n  headers: {\n    Accept: 'application/ld+json;profile=\"https://w3c-ccg.github.io/did-resolution/\"'\n  },\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers).has.property(\"content-type\", 'application/ld+json; profile=\"https://w3c-ccg.github.io/did-resolution/\"');\n});",
              "err": {},
              "uuid": "0e495aa3-8577-4c35-a95c-2a2844b3f789",
              "parentUUID": "b848b800-db4d-41bf-ba6b-dce77a2e6d74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e495aa3-8577-4c35-a95c-2a2844b3f789"
          ],
          "failures": [
            "05f7adb5-f68c-477e-96bc-f743784bc66b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 469,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4eae0661-29a3-4eaa-9c7c-a682e6af40c7",
          "title": "Test Scenario 13: Retrieve configuration properties",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "0bfab6d4-50c2-457a-9988-6aad530b4f8d",
              "parentUUID": "4eae0661-29a3-4eaa-9c7c-a682e6af40c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return JSON object",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties MUST return JSON object",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "2798293f-2543-4381-835e-bd4dcfa2465d",
              "parentUUID": "4eae0661-29a3-4eaa-9c7c-a682e6af40c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "HTTP response must contain content-type property with value",
              "fullTitle": "Test Scenario 13: Retrieve configuration properties HTTP response must contain content-type property with value",
              "timedOut": null,
              "duration": 52,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/properties\"\n}).then(response => {\n  expect(response.headers).has.property(\"content-type\", \"application/json;charset=utf-8\");\n});",
              "err": {},
              "uuid": "b34b56eb-2f57-49fc-b365-cb92ba3e4b26",
              "parentUUID": "4eae0661-29a3-4eaa-9c7c-a682e6af40c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bfab6d4-50c2-457a-9988-6aad530b4f8d",
            "2798293f-2543-4381-835e-bd4dcfa2465d",
            "b34b56eb-2f57-49fc-b365-cb92ba3e4b26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 267,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b0fa5dfb-ea1f-42f2-8808-5b3663efdf16",
          "title": "Test Scenario 14: Retrieve supported DID methods",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test HTTP response",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods Test HTTP response",
              "timedOut": null,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "8b59a559-2058-4292-b574-d94b73e9a551",
              "parentUUID": "b0fa5dfb-ea1f-42f2-8808-5b3663efdf16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods MUST return a JSON object",
              "timedOut": null,
              "duration": 40,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "c91c0a05-fc44-4951-9a2b-91335a766445",
              "parentUUID": "b0fa5dfb-ea1f-42f2-8808-5b3663efdf16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST contain body of type array",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods MUST contain body of type array",
              "timedOut": null,
              "duration": 57,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.be.a(\"array\");\n});",
              "err": {},
              "uuid": "cc718339-e919-45ce-b6fa-6e1081f74971",
              "parentUUID": "b0fa5dfb-ea1f-42f2-8808-5b3663efdf16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test HTTP response",
              "fullTitle": "Test Scenario 14: Retrieve supported DID methods Test HTTP response",
              "timedOut": null,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/methods\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.deep.equal([\"btcr\", \"sov\", \"v1\", \"web\", \"ethr\", \"jolo\", \"elem\", \"github\", \"key\", \"ion\", \"gatc\", \"ebsi\", \"tz\", \"pkh\"]);\n});",
              "err": {},
              "uuid": "0a46b4d6-d288-4367-8f77-3284a6313284",
              "parentUUID": "b0fa5dfb-ea1f-42f2-8808-5b3663efdf16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b59a559-2058-4292-b574-d94b73e9a551",
            "c91c0a05-fc44-4951-9a2b-91335a766445",
            "cc718339-e919-45ce-b6fa-6e1081f74971",
            "0a46b4d6-d288-4367-8f77-3284a6313284"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 158,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8c126b50-9d93-491c-bed6-ad2beab56044",
          "title": "Test Scenario 15: Retrieve object of test identifiers",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP response status 200",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return HTTP response status 200",
              "timedOut": null,
              "duration": 54,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "8ef10d5e-4007-4648-b5ed-d2b100f6f9e1",
              "parentUUID": "8c126b50-9d93-491c-bed6-ad2beab56044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a JSON object",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return a JSON object",
              "timedOut": null,
              "duration": 59,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "5fa3ccba-3b94-4638-9c6d-8b640a2ee860",
              "parentUUID": "8c126b50-9d93-491c-bed6-ad2beab56044",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return a body of type object",
              "fullTitle": "Test Scenario 15: Retrieve object of test identifiers MUST return a body of type object",
              "timedOut": null,
              "duration": 57,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body).to.be.a(\"object\");\n});",
              "err": {},
              "uuid": "1bc595c3-657a-4c27-8ccc-3c2e95b42150",
              "parentUUID": "8c126b50-9d93-491c-bed6-ad2beab56044",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ef10d5e-4007-4648-b5ed-d2b100f6f9e1",
            "5fa3ccba-3b94-4638-9c6d-8b640a2ee860",
            "1bc595c3-657a-4c27-8ccc-3c2e95b42150"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 170,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "8d97fece-8748-4dee-8055-12bdd4b150e0",
      "title": "",
      "fullFile": "cypress/integration/resolver_spec.js",
      "file": "cypress/integration/resolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c647afb4-0f64-4b0e-ba8a-346f8bb58f2e",
          "title": "Test Scenario 1: DID Resolution Result overview: https://api.godiddy.com/0.1.0/universal-resolver/identifiers/",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 200",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://api.godiddy.com/0.1.0/universal-resolver/identifiers/ MUST return HTTP code 200",
              "timedOut": null,
              "duration": 2152,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "84585f83-563b-40f2-8cea-5bba8dd73193",
              "parentUUID": "c647afb4-0f64-4b0e-ba8a-346f8bb58f2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://api.godiddy.com/0.1.0/universal-resolver/identifiers/ Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "timedOut": null,
              "duration": 691,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json; profile=\"https://w3id.org/did-resolution');\n});",
              "err": {},
              "uuid": "cb8f9a3a-2d63-4f9b-8a08-26cf3a04fa53",
              "parentUUID": "c647afb4-0f64-4b0e-ba8a-346f8bb58f2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocument",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://api.godiddy.com/0.1.0/universal-resolver/identifiers/ Must contain property didDocument",
              "timedOut": null,
              "duration": 1673,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "37bbe2cc-f9ff-462a-a3f6-007d80617c69",
              "parentUUID": "c647afb4-0f64-4b0e-ba8a-346f8bb58f2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didResolutionMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://api.godiddy.com/0.1.0/universal-resolver/identifiers/ Must contain property didResolutionMetadata",
              "timedOut": null,
              "duration": 517,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didResolutionMetadata\");\n});",
              "err": {},
              "uuid": "43d19abd-5edc-4649-910f-84ebb81e9a4b",
              "parentUUID": "c647afb4-0f64-4b0e-ba8a-346f8bb58f2e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocumentMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview: https://api.godiddy.com/0.1.0/universal-resolver/identifiers/ Must contain property didDocumentMetadata",
              "timedOut": null,
              "duration": 555,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocumentMetadata\");\n});",
              "err": {},
              "uuid": "80486a1c-e6a7-41be-9da6-b00d3db681a6",
              "parentUUID": "c647afb4-0f64-4b0e-ba8a-346f8bb58f2e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84585f83-563b-40f2-8cea-5bba8dd73193",
            "cb8f9a3a-2d63-4f9b-8a08-26cf3a04fa53",
            "37bbe2cc-f9ff-462a-a3f6-007d80617c69",
            "43d19abd-5edc-4649-910f-84ebb81e9a4b",
            "80486a1c-e6a7-41be-9da6-b00d3db681a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5588,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "50630635-4184-40ed-89e2-3bbed30672d8",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have response status 200",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have response status 200",
              "timedOut": null,
              "duration": 1433,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "d362831d-4a4e-4ab8-8470-e26e7184a8b6",
              "parentUUID": "50630635-4184-40ed-89e2-3bbed30672d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with content type",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have header with content type",
              "timedOut": null,
              "duration": 734,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "8ea4413c-8833-42e3-bc5d-fa31f87f667c",
              "parentUUID": "50630635-4184-40ed-89e2-3bbed30672d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not have property didDocument",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should not have property didDocument",
              "timedOut": null,
              "duration": 1742,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "99efc797-16ef-4e26-a3ab-f2a594923d9e",
              "parentUUID": "50630635-4184-40ed-89e2-3bbed30672d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have property @context",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have property @context",
              "timedOut": null,
              "duration": 630,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "500904bf-06ff-43cd-a4cb-3022de4d200b",
              "parentUUID": "50630635-4184-40ed-89e2-3bbed30672d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d362831d-4a4e-4ab8-8470-e26e7184a8b6",
            "8ea4413c-8833-42e3-bc5d-fa31f87f667c",
            "99efc797-16ef-4e26-a3ab-f2a594923d9e",
            "500904bf-06ff-43cd-a4cb-3022de4d200b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4539,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "61d903d8-db7b-4b29-b9c7-8217613956ae",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 406",
              "fullTitle": "Test Scenario 3: Representation not supported MUST return HTTP code 406",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:WRfXPg8dantKVubE3HX8pw\",\n  failOnStatusCode: false,\n  headers: {\n    Accept: \"image/png\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(406);\n});",
              "err": {},
              "uuid": "0574cf17-441d-4fa1-a0db-c9750e8d5dc4",
              "parentUUID": "61d903d8-db7b-4b29-b9c7-8217613956ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0574cf17-441d-4fa1-a0db-c9750e8d5dc4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 66,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3a21e03d-4624-46c1-adee-f81871e98e56",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 410",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP code 410",
              "timedOut": null,
              "duration": 67,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(410);\n});",
              "err": {
                "message": "AssertionError: expected 404 to equal 410",
                "estack": "AssertionError: expected 404 to equal 410\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/resolver_spec.js:197:36)",
                "diff": "- 404\n+ 410\n"
              },
              "uuid": "f3529b3a-c95b-445b-8fe8-a68a2f568b59",
              "parentUUID": "3a21e03d-4624-46c1-adee-f81871e98e56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP header Content-Type",
              "timedOut": null,
              "duration": 472,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {
                "message": "AssertionError: expected 'text/plain;charset=UTF-8' to include 'application/ld+json;profile=\"https://w3id.org/did-resolution\"'",
                "estack": "AssertionError: expected 'text/plain;charset=UTF-8' to include 'application/ld+json;profile=\"https://w3id.org/did-resolution\"'\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/resolver_spec.js:206:53)",
                "diff": null
              },
              "uuid": "9a3ebc15-a6fc-4796-9d27-17ebb689a86f",
              "parentUUID": "3a21e03d-4624-46c1-adee-f81871e98e56",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "fullTitle": "Test Scenario 4: Deactivated JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "timedOut": null,
              "duration": 57,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'deactivated')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'deactivated')\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/resolver_spec.js:215:50)",
                "diff": null
              },
              "uuid": "e5c6fe34-e7a1-4414-935c-0d52e2c66a03",
              "parentUUID": "3a21e03d-4624-46c1-adee-f81871e98e56",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f3529b3a-c95b-445b-8fe8-a68a2f568b59",
            "9a3ebc15-a6fc-4796-9d27-17ebb689a86f",
            "e5c6fe34-e7a1-4414-935c-0d52e2c66a03"
          ],
          "pending": [],
          "skipped": [],
          "duration": 596,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "39b7fe7a-0eab-4d62-99b7-b5d9d7e3839f",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 404",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP code 404",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "08642a63-7789-448b-bb24-f75009806cb1",
              "parentUUID": "39b7fe7a-0eab-4d62-99b7-b5d9d7e3839f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 312,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {
                "message": "AssertionError: expected 'text/plain;charset=UTF-8' to include 'application/ld+json;profile=\"https://w3id.org/did-resolution\"'",
                "estack": "AssertionError: expected 'text/plain;charset=UTF-8' to include 'application/ld+json;profile=\"https://w3id.org/did-resolution\"'\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/resolver_spec.js:238:53)",
                "diff": null
              },
              "uuid": "6a7b6c4b-5900-4e6d-9e1c-57262966a1c8",
              "parentUUID": "39b7fe7a-0eab-4d62-99b7-b5d9d7e3839f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "fullTitle": "Test Scenario 5: Not found JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "timedOut": null,
              "duration": 1681,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n});",
              "err": {},
              "uuid": "671d5aa8-42b4-4f65-8db2-d7709cd3c83b",
              "parentUUID": "39b7fe7a-0eab-4d62-99b7-b5d9d7e3839f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08642a63-7789-448b-bb24-f75009806cb1",
            "671d5aa8-42b4-4f65-8db2-d7709cd3c83b"
          ],
          "failures": [
            "6a7b6c4b-5900-4e6d-9e1c-57262966a1c8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2119,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f8d3fded-adc5-48fe-9cc5-f46ef5fbb731",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 400",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP code 400",
              "timedOut": null,
              "duration": 391,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
              "err": {
                "message": "AssertionError: expected 500 to equal 400",
                "estack": "AssertionError: expected 500 to equal 400\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/resolver_spec.js:261:36)",
                "diff": "- 500\n+ 400\n"
              },
              "uuid": "4e676aa3-53fc-46ea-b69b-f2171076270f",
              "parentUUID": "f8d3fded-adc5-48fe-9cc5-f46ef5fbb731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 88,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {
                "message": "AssertionError: expected 'text/plain;charset=UTF-8' to include 'application/ld+json;profile=\"https://w3id.org/did-resolution\"'",
                "estack": "AssertionError: expected 'text/plain;charset=UTF-8' to include 'application/ld+json;profile=\"https://w3id.org/did-resolution\"'\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/resolver_spec.js:270:53)",
                "diff": null
              },
              "uuid": "10d3c669-b7b3-413a-9941-7e9f29c8dec8",
              "parentUUID": "f8d3fded-adc5-48fe-9cc5-f46ef5fbb731",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "fullTitle": "Test Scenario 6: Invalid DID JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "timedOut": null,
              "duration": 52,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: endpoint + \"did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"invalidDid\");\n});",
              "err": {
                "message": "TypeError: Cannot read properties of undefined (reading 'error')",
                "estack": "TypeError: Cannot read properties of undefined (reading 'error')\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/resolver_spec.js:279:52)",
                "diff": null
              },
              "uuid": "2bfd4249-242a-44a9-979e-fba70c29be61",
              "parentUUID": "f8d3fded-adc5-48fe-9cc5-f46ef5fbb731",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4e676aa3-53fc-46ea-b69b-f2171076270f",
            "10d3c669-b7b3-413a-9941-7e9f29c8dec8",
            "2bfd4249-242a-44a9-979e-fba70c29be61"
          ],
          "pending": [],
          "skipped": [],
          "duration": 531,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e0309e1f-1096-44d8-ba3c-a2e839b85728",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Must return HTTP code 200",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Must return HTTP code 200",
              "timedOut": null,
              "duration": 1834,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "26a44138-2539-4d54-a833-1b15f34401d5",
              "parentUUID": "e0309e1f-1096-44d8-ba3c-a2e839b85728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return HTTP header Content-Type with value application/did+ld+json",
              "timedOut": null,
              "duration": 534,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "4a7190cf-787a-45f3-91a8-a835bac3aa9a",
              "parentUUID": "e0309e1f-1096-44d8-ba3c-a2e839b85728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST NOT contain property didDocument",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST NOT contain property didDocument",
              "timedOut": null,
              "duration": 1562,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "ee0773ab-2f55-43a5-8190-ef5395e36551",
              "parentUUID": "e0309e1f-1096-44d8-ba3c-a2e839b85728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 549,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "9566bbcc-9a4a-472c-ac19-3b598a44bab0",
              "parentUUID": "e0309e1f-1096-44d8-ba3c-a2e839b85728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property type",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property type",
              "timedOut": null,
              "duration": 512,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).to.have.property(\"type\");\n});",
              "err": {},
              "uuid": "4a1dadc4-c578-4005-bdf2-b09584e0a301",
              "parentUUID": "e0309e1f-1096-44d8-ba3c-a2e839b85728",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property id with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property id with value application/did+ld+json",
              "timedOut": null,
              "duration": 2314,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body[\"id\"]).to.contain(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {},
              "uuid": "b4d09010-6c5e-485c-8fc4-0bd5a784342b",
              "parentUUID": "e0309e1f-1096-44d8-ba3c-a2e839b85728",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26a44138-2539-4d54-a833-1b15f34401d5",
            "4a7190cf-787a-45f3-91a8-a835bac3aa9a",
            "ee0773ab-2f55-43a5-8190-ef5395e36551",
            "9566bbcc-9a4a-472c-ac19-3b598a44bab0",
            "4a1dadc4-c578-4005-bdf2-b09584e0a301",
            "b4d09010-6c5e-485c-8fc4-0bd5a784342b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7305,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "de5a7639-d6d9-40d3-88e4-e53e3558033d",
      "title": "",
      "fullFile": "cypress/integration/test_example_spec.js",
      "file": "cypress/integration/test_example_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d73477e8-e70e-401c-be7a-b645a4566de2",
          "title": "Test example DIDs on endpoint: api.dev.godiddy.com",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Tests if all example DIDs return HTTP status 200",
              "fullTitle": "Test example DIDs on endpoint: api.dev.godiddy.com Tests if all example DIDs return HTTP status 200",
              "timedOut": null,
              "duration": 680,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "function getExamples() {\n  cy.request({\n    method: \"GET\",\n    url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/testIdentifiers\",\n    failOnStatusCode: false\n  }).then(response => {\n    const methods = response.body;\n    cy.wrap(methods).as(\"examplesGodiddy\");\n  });\n}\ngetExamples();\ncy.get(\"@examplesGodiddy\").then(response => {\n  console.log(response);\n  Object.keys(response).forEach(key => {\n    response[key].forEach(did => {\n      cy.request({\n        method: \"GET\",\n        url: \"https://api.dev.godiddy.com/0.1.0/universal-resolver/identifiers/\" + did,\n        failOnStatusCode: false\n      }).then(response => {\n        softExpect(response.status).to.eq(200);\n      });\n    });\n  });\n});",
              "err": {
                "message": "TypeError: softExpect is not a function",
                "estack": "TypeError: softExpect is not a function\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/test_example_spec.js:125:13)",
                "diff": null
              },
              "uuid": "76e02c86-7adb-4ce5-909c-ded511967ea4",
              "parentUUID": "d73477e8-e70e-401c-be7a-b645a4566de2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "76e02c86-7adb-4ce5-909c-ded511967ea4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 680,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e94b1740-4a5b-4dda-af16-33d5f17cfbd5",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_fixtures_spec.js",
      "file": "cypress/integration/uniresolver_fixtures_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c86c34ce-4d10-40e4-9e20-b904df8d9b59",
          "title": "Test Scenario 1: DID Resolution Result fixtures: undefined",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures: undefined A correct DID can be resolved",
              "timedOut": null,
              "duration": 55,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request\n    at Context.request (http://localhost:57095/__cypress/runner/cypress_runner.js:160445:78)\nFrom Your Spec Code:\n    at eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:107:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:105:27)",
                "diff": null
              },
              "uuid": "f8bb225f-5465-4fc9-bb18-2f3a044feeb5",
              "parentUUID": "c86c34ce-4d10-40e4-9e20-b904df8d9b59",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f8bb225f-5465-4fc9-bb18-2f3a044feeb5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 55,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1d597e20-cfc5-4209-bf96-244a07121b66",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 29,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      }\n    }).as(\"headers\");\n    cy.get(\"@headers\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"@context\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request\n    at Context.request (http://localhost:57095/__cypress/runner/cypress_runner.js:160445:78)\nFrom Your Spec Code:\n    at eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:138:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:136:27)",
                "diff": null
              },
              "uuid": "436282fa-3928-4b22-a213-23912a4b315e",
              "parentUUID": "1d597e20-cfc5-4209-bf96-244a07121b66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "436282fa-3928-4b22-a213-23912a4b315e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d21fa8ed-b710-4f15-91fe-5eab3292bdb5",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 23,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request\n    at Context.request (http://localhost:57095/__cypress/runner/cypress_runner.js:160445:78)\nFrom Your Spec Code:\n    at eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:163:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:161:27)",
                "diff": null
              },
              "uuid": "7adbaf96-9d44-4984-9a9c-9ff08d115cee",
              "parentUUID": "d21fa8ed-b710-4f15-91fe-5eab3292bdb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "7adbaf96-9d44-4984-9a9c-9ff08d115cee"
          ],
          "pending": [],
          "skipped": [],
          "duration": 23,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4b6f73bc-dca6-4408-88f9-a1832485963c",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 25,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); //FAILS\n      expect(response.body.didDocumentMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request\n    at Context.request (http://localhost:57095/__cypress/runner/cypress_runner.js:160445:78)\nFrom Your Spec Code:\n    at eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:185:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:183:27)",
                "diff": null
              },
              "uuid": "c514184a-a608-467a-970a-bd8daa47429c",
              "parentUUID": "4b6f73bc-dca6-4408-88f9-a1832485963c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c514184a-a608-467a-970a-bd8daa47429c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "65f1ef5b-69b6-4021-9359-a9becd9b3afc",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 25,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request\n    at Context.request (http://localhost:57095/__cypress/runner/cypress_runner.js:160445:78)\nFrom Your Spec Code:\n    at eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:207:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:205:27)",
                "diff": null
              },
              "uuid": "dba2f367-7b8b-41b3-b5c7-937ddcd426cc",
              "parentUUID": "65f1ef5b-69b6-4021-9359-a9becd9b3afc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "dba2f367-7b8b-41b3-b5c7-937ddcd426cc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a9589e7b-4fc8-479d-9e23-ac52e0311502",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 28,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"invalidDid\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request\n    at Context.request (http://localhost:57095/__cypress/runner/cypress_runner.js:160445:78)\nFrom Your Spec Code:\n    at eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:228:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:226:27)",
                "diff": null
              },
              "uuid": "0395c48b-70fb-4c79-900d-c61875014c50",
              "parentUUID": "a9589e7b-4fc8-479d-9e23-ac52e0311502",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "0395c48b-70fb-4c79-900d-c61875014c50"
          ],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "01048607-5067-45db-bd23-0111b9113b9c",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Can resolve a DID with a fragment",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Can resolve a DID with a fragment",
              "timedOut": null,
              "duration": 45,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"fragmentDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: endpoint + fragmentDid,\n      failOnStatusCode: false,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      }\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(response);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"@context\");\n      expect(response.body).to.have.property(\"type\");\n      expect(response.body).to.have.property(\"id\");\n      expect(response.body[\"id\"]).to.contain(decodeURIComponent(fragmentDid.split(\"#\")[0]));\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` must be provided a fully qualified `url` - one that begins with `http`. By default `cy.request()` will use either the current window's origin or the `baseUrl` in `cypress.json`. Neither of those values were present.\n\nhttps://on.cypress.io/request\n    at Context.request (http://localhost:57095/__cypress/runner/cypress_runner.js:160434:78)\nFrom Your Spec Code:\n    at eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:249:14)\nat Array.forEach (<anonymous>)\n    at Context.eval (http://localhost:57095/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:247:27)",
                "diff": null
              },
              "uuid": "e3903840-e02a-435a-8837-fd745fc8d28e",
              "parentUUID": "01048607-5067-45db-bd23-0111b9113b9c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e3903840-e02a-435a-8837-fd745fc8d28e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 45,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}