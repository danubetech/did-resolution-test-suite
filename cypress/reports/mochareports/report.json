{
  "stats": {
    "suites": 2,
    "tests": 32,
    "passes": 24,
    "pending": 0,
    "failures": 8,
    "start": "2022-03-11T13:15:27.240Z",
    "end": "2022-03-11T13:15:43.653Z",
    "duration": 14808,
    "testsRegistered": 32,
    "passPercent": 75,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "eead3a55-51f8-4beb-8b32-6073c7b96489",
      "title": "",
      "fullFile": "cypress/integration/resolver_spec.js",
      "file": "cypress/integration/resolver_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f8ca45e-b616-4758-9247-56c34bd31681",
          "title": "Test Scenario 1: DID Resolution Result overview",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 200",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview MUST return HTTP code 200",
              "timedOut": null,
              "duration": 1344,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "7977473f-47f1-4764-bea9-3a832afc0c4a",
              "parentUUID": "0f8ca45e-b616-4758-9247-56c34bd31681",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview Should have header with Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\" ",
              "timedOut": null,
              "duration": 504,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution');\n});",
              "err": {},
              "uuid": "94b00e0f-6857-46bd-8cac-27fcbc22e374",
              "parentUUID": "0f8ca45e-b616-4758-9247-56c34bd31681",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocument",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview Must contain property didDocument",
              "timedOut": null,
              "duration": 343,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "498a52ed-4c3a-46d7-9338-bb9b1392b221",
              "parentUUID": "0f8ca45e-b616-4758-9247-56c34bd31681",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didResolutionMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview Must contain property didResolutionMetadata",
              "timedOut": null,
              "duration": 215,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didResolutionMetadata\");\n});",
              "err": {},
              "uuid": "489c2a78-aa18-47e3-82c7-f2d19a664b30",
              "parentUUID": "0f8ca45e-b616-4758-9247-56c34bd31681",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Must contain property didDocumentMetadata",
              "fullTitle": "Test Scenario 1: DID Resolution Result overview Must contain property didDocumentMetadata",
              "timedOut": null,
              "duration": 332,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@request\").then(response => {\n  expect(response.body).to.have.property(\"didDocumentMetadata\");\n});",
              "err": {},
              "uuid": "fbefcb86-a6fe-4795-a73c-8236af51132b",
              "parentUUID": "0f8ca45e-b616-4758-9247-56c34bd31681",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7977473f-47f1-4764-bea9-3a832afc0c4a",
            "94b00e0f-6857-46bd-8cac-27fcbc22e374",
            "498a52ed-4c3a-46d7-9338-bb9b1392b221",
            "489c2a78-aa18-47e3-82c7-f2d19a664b30",
            "fbefcb86-a6fe-4795-a73c-8236af51132b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2738,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d7c035d5-2132-4c0d-95df-9ccd377936c4",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should have response status 200",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have response status 200",
              "timedOut": null,
              "duration": 944,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {},
              "uuid": "2268032b-0cdd-4383-be29-ff89a034c6d6",
              "parentUUID": "d7c035d5-2132-4c0d-95df-9ccd377936c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have header with content type",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have header with content type",
              "timedOut": null,
              "duration": 403,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {},
              "uuid": "1b756b50-3110-4a8d-985b-af6168c86dd6",
              "parentUUID": "d7c035d5-2132-4c0d-95df-9ccd377936c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not have property didDocument",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should not have property didDocument",
              "timedOut": null,
              "duration": 665,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "84b3ce6b-3594-46f8-876c-ba6d63c33278",
              "parentUUID": "d7c035d5-2132-4c0d-95df-9ccd377936c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have property @context",
              "fullTitle": "Test Scenario 2: JSON-LD DID document Should have property @context",
              "timedOut": null,
              "duration": 303,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {},
              "uuid": "15e0ebc1-bbd6-4982-814f-a1559ac75509",
              "parentUUID": "d7c035d5-2132-4c0d-95df-9ccd377936c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2268032b-0cdd-4383-be29-ff89a034c6d6",
            "1b756b50-3110-4a8d-985b-af6168c86dd6",
            "84b3ce6b-3594-46f8-876c-ba6d63c33278",
            "15e0ebc1-bbd6-4982-814f-a1559ac75509"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2315,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b1ba8cba-ecb6-4c73-b3a5-b5a29078c505",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 406",
              "fullTitle": "Test Scenario 3: Representation not supported MUST return HTTP code 406",
              "timedOut": null,
              "duration": 305,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\",\n  failOnStatusCode: false,\n  headers: {\n    Accept: \"image/png\"\n  }\n}).then(response => {\n  expect(response.status).to.eq(406);\n});",
              "err": {},
              "uuid": "fe2e3e55-d08c-4528-8389-aed2aebdc946",
              "parentUUID": "b1ba8cba-ecb6-4c73-b3a5-b5a29078c505",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe2e3e55-d08c-4528-8389-aed2aebdc946"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 305,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ef6fb6eb-2f16-4a53-a240-ab182beb4626",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 410",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP code 410",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(410);\n});",
              "err": {},
              "uuid": "0fd4dac2-1be6-4a98-819c-0de749d0cdfd",
              "parentUUID": "ef6fb6eb-2f16-4a53-a240-ab182beb4626",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type",
              "fullTitle": "Test Scenario 4: Deactivated MUST return HTTP header Content-Type",
              "timedOut": null,
              "duration": 496,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "11dcf917-11ea-4411-bd92-767cc7cff540",
              "parentUUID": "ef6fb6eb-2f16-4a53-a240-ab182beb4626",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "fullTitle": "Test Scenario 4: Deactivated JSON object MUST contain property didDocumentMetadata.deactivated = true",
              "timedOut": null,
              "duration": 654,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:kilt:4r6RdVMNes2eEobxyxH7aVsesUqR2X175sUAXJfo7dEWxHUS\",\n  failOnStatusCode: false\n}).then(response => {\n  console.log(response.body.didResolutionMetadata);\n  expect(response.body.didResolutionMetadata.deactivated).to.eq(true);\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal true",
                "estack": "AssertionError: expected undefined to equal true\n    at Context.eval (http://localhost:61072/__cypress/tests?p=cypress/integration/resolver_spec.js:203:66)",
                "diff": null
              },
              "uuid": "c9f41ecd-43cd-453d-832c-8f6e990038ae",
              "parentUUID": "ef6fb6eb-2f16-4a53-a240-ab182beb4626",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0fd4dac2-1be6-4a98-819c-0de749d0cdfd",
            "11dcf917-11ea-4411-bd92-767cc7cff540"
          ],
          "failures": [
            "c9f41ecd-43cd-453d-832c-8f6e990038ae"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1507,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e5af2608-7694-4f51-a616-28737428e25e",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 404",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP code 404",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(404);\n});",
              "err": {},
              "uuid": "d54c6dfd-2c54-42e5-afa1-640611681cf9",
              "parentUUID": "e5af2608-7694-4f51-a616-28737428e25e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 5: Not found MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "8044f80d-a15c-48ab-ad6d-42ca63c1a9fb",
              "parentUUID": "e5af2608-7694-4f51-a616-28737428e25e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "fullTitle": "Test Scenario 5: Not found JSON object MUST contain property didResolutionMetadata.error = \"notFound\"",
              "timedOut": null,
              "duration": 155,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:sov:0000000000000000000000\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n});",
              "err": {},
              "uuid": "4606892f-a42a-44f2-a81e-be7f5b4899e8",
              "parentUUID": "e5af2608-7694-4f51-a616-28737428e25e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d54c6dfd-2c54-42e5-afa1-640611681cf9",
            "8044f80d-a15c-48ab-ad6d-42ca63c1a9fb",
            "4606892f-a42a-44f2-a81e-be7f5b4899e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 487,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8e78fc50-4191-4f70-b050-5156bfd8d02a",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "MUST return HTTP code 400",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP code 400",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.status).to.eq(400);\n});",
              "err": {},
              "uuid": "5ad826a0-915a-4e45-9210-f2962c407dab",
              "parentUUID": "8e78fc50-4191-4f70-b050-5156bfd8d02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "fullTitle": "Test Scenario 6: Invalid DID MUST return HTTP header Content-Type with value application/ld+json;profile=\"https://w3id.org/did-resolution\"",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n});",
              "err": {},
              "uuid": "4e230184-9e29-4963-93f6-f3ed9caa95ea",
              "parentUUID": "8e78fc50-4191-4f70-b050-5156bfd8d02a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "fullTitle": "Test Scenario 6: Invalid DID JSON object MUST contain property didResolutionMetadata.error = \"invalidDid\"",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: \"GET\",\n  url: \"https://dev.uniresolver.io/1.0/identifiers/did:example_222\",\n  failOnStatusCode: false\n}).then(response => {\n  expect(response.body.didResolutionMetadata.error).to.eq(\"invalidDid\");\n});",
              "err": {},
              "uuid": "3f011014-8a05-4eb7-8973-83427184c0f7",
              "parentUUID": "8e78fc50-4191-4f70-b050-5156bfd8d02a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ad826a0-915a-4e45-9210-f2962c407dab",
            "4e230184-9e29-4963-93f6-f3ed9caa95ea",
            "3f011014-8a05-4eb7-8973-83427184c0f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 443,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a0441bf6-cd8d-4860-bb23-5a092eaa35eb",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Must return HTTP code 200",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Must return HTTP code 200",
              "timedOut": null,
              "duration": 310,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.status).to.eq(200);\n});",
              "err": {
                "message": "AssertionError: expected 400 to equal 200",
                "estack": "AssertionError: expected 400 to equal 200\n    at Context.eval (http://localhost:61072/__cypress/tests?p=cypress/integration/resolver_spec.js:279:34)",
                "diff": "- 400\n+ 200\n"
              },
              "uuid": "b26abab3-8822-4c53-a8fe-0e8b3acd3924",
              "parentUUID": "a0441bf6-cd8d-4860-bb23-5a092eaa35eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "MUST return HTTP header Content-Type with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments MUST return HTTP header Content-Type with value application/did+ld+json",
              "timedOut": null,
              "duration": 304,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.headers[\"content-type\"]).to.contain(\"did:sov:WRfXPg8dantKVubE3HX8pw#key-1\");\n});",
              "err": {
                "message": "AssertionError: expected 'application/did+ld+json;charset=utf-8' to include 'did:sov:WRfXPg8dantKVubE3HX8pw#key-1'",
                "estack": "AssertionError: expected 'application/did+ld+json;charset=utf-8' to include 'did:sov:WRfXPg8dantKVubE3HX8pw#key-1'\n    at Context.eval (http://localhost:61072/__cypress/tests?p=cypress/integration/resolver_spec.js:284:51)",
                "diff": null
              },
              "uuid": "0f0ccd8e-e7c9-437e-bbdf-7772a7196be8",
              "parentUUID": "a0441bf6-cd8d-4860-bb23-5a092eaa35eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST NOT contain property didDocument",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST NOT contain property didDocument",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).not.to.have.property(\"didDocument\");\n});",
              "err": {},
              "uuid": "70dba03e-843a-46fb-a294-b3f0e3b7d3e8",
              "parentUUID": "a0441bf6-cd8d-4860-bb23-5a092eaa35eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property @context",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property @context",
              "timedOut": null,
              "duration": 305,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).to.have.property(\"@context\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property '@context'",
                "estack": "AssertionError: expected '' to have property '@context'\n    at Context.eval (http://localhost:61072/__cypress/tests?p=cypress/integration/resolver_spec.js:294:37)",
                "diff": null
              },
              "uuid": "0b8586e9-1076-4bb5-bbf9-5a6ec38832b3",
              "parentUUID": "a0441bf6-cd8d-4860-bb23-5a092eaa35eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property type",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property type",
              "timedOut": null,
              "duration": 295,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).to.have.property(\"type\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property 'type'",
                "estack": "AssertionError: expected '' to have property 'type'\n    at Context.eval (http://localhost:61072/__cypress/tests?p=cypress/integration/resolver_spec.js:299:37)",
                "diff": null
              },
              "uuid": "3a2ba6d8-07c9-4c9d-ad80-7362a61212bf",
              "parentUUID": "a0441bf6-cd8d-4860-bb23-5a092eaa35eb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "JSON object MUST contain property id with value application/did+ld+json",
              "fullTitle": "Test Scenario 7: DID URLs with fragments JSON object MUST contain property id with value application/did+ld+json",
              "timedOut": null,
              "duration": 293,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get(\"@headers\").then(response => {\n  expect(response.body).to.have.property(\"id\");\n  expect(response.body[\"id\"]).to.contain(\"application/did+ld+json\");\n});",
              "err": {
                "message": "AssertionError: expected '' to have property 'id'",
                "estack": "AssertionError: expected '' to have property 'id'\n    at Context.eval (http://localhost:61072/__cypress/tests?p=cypress/integration/resolver_spec.js:304:37)",
                "diff": null
              },
              "uuid": "54eb9bd6-4a96-44ec-baf7-815daf806528",
              "parentUUID": "a0441bf6-cd8d-4860-bb23-5a092eaa35eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70dba03e-843a-46fb-a294-b3f0e3b7d3e8"
          ],
          "failures": [
            "b26abab3-8822-4c53-a8fe-0e8b3acd3924",
            "0f0ccd8e-e7c9-437e-bbdf-7772a7196be8",
            "0b8586e9-1076-4bb5-bbf9-5a6ec38832b3",
            "3a2ba6d8-07c9-4c9d-ad80-7362a61212bf",
            "54eb9bd6-4a96-44ec-baf7-815daf806528"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1669,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3bf50923-2b09-459b-a2b3-263c9a00cd2c",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_fixtures_spec.js",
      "file": "cypress/integration/uniresolver_fixtures_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c69ab21-1855-4982-93af-80a3cfaa73f8",
          "title": "Test Scenario 1: DID Resolution Result fixtures",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result fixtures A correct DID can be resolved",
              "timedOut": null,
              "duration": 1491,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: \"https://dev.uniresolver.io/1.0/identifiers/\" + normalDid\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n  });\n});",
              "err": {},
              "uuid": "7c05841d-0470-4a39-8f7b-6b9be1c3bad8",
              "parentUUID": "9c69ab21-1855-4982-93af-80a3cfaa73f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c05841d-0470-4a39-8f7b-6b9be1c3bad8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1491,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b240ea15-cf0f-4dfb-8018-3de193a600d6",
          "title": "Test Scenario 2: JSON-LD DID document",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved with header input",
              "fullTitle": "Test Scenario 2: JSON-LD DID document A correct DID can be resolved with header input",
              "timedOut": null,
              "duration": 1020,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: \"https://dev.uniresolver.io/1.0/identifiers/\" + normalDid,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      }\n    }).as(\"headers\");\n    cy.get(\"@headers\").then(response => {\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"@context\");\n    });\n  });\n});",
              "err": {},
              "uuid": "f089e1fb-acab-4f67-a155-1d51a1935ae1",
              "parentUUID": "b240ea15-cf0f-4dfb-8018-3de193a600d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f089e1fb-acab-4f67-a155-1d51a1935ae1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1020,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d2a6ed7f-0a2b-4069-a2d1-d14888ffe772",
          "title": "Test Scenario 3: Representation not supported",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Shows an error when a representation is prompted",
              "fullTitle": "Test Scenario 3: Representation not supported Shows an error when a representation is prompted",
              "timedOut": null,
              "duration": 1090,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: \"https://dev.uniresolver.io/1.0/identifiers/\" + normalDid,\n      headers: {\n        Accept: \"image/png\"\n      },\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(406);\n    });\n  });\n});",
              "err": {},
              "uuid": "83aef6de-098d-41e6-b088-c824b96e3385",
              "parentUUID": "d2a6ed7f-0a2b-4069-a2d1-d14888ffe772",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83aef6de-098d-41e6-b088-c824b96e3385"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1090,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f26a707b-61b6-4251-91bc-f5d3f24603e7",
          "title": "Test Scenario 4: Deactivated",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 410 for deactivated DIDs",
              "fullTitle": "Test Scenario 4: Deactivated Returns an HTTP code of 410 for deactivated DIDs",
              "timedOut": null,
              "duration": 787,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"deacDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const deacDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: \"https://dev.uniresolver.io/1.0/identifiers/\" + deacDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(410);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"'); //FAILS\n      expect(response.body.didResolutionMetadata.deactivated).to.eq(true);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected undefined to equal true",
                "estack": "AssertionError: expected undefined to equal true\n    at Context.eval (http://localhost:61072/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:181:70)",
                "diff": null
              },
              "uuid": "aa4ca2c6-f228-45f9-b640-c2d1c6043f78",
              "parentUUID": "f26a707b-61b6-4251-91bc-f5d3f24603e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "aa4ca2c6-f228-45f9-b640-c2d1c6043f78"
          ],
          "pending": [],
          "skipped": [],
          "duration": 787,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3a968e80-6978-46e3-a27b-0eba505b9be8",
          "title": "Test Scenario 5: Not found",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns an HTTP code of 404 for non-existent DIDs",
              "fullTitle": "Test Scenario 5: Not found Returns an HTTP code of 404 for non-existent DIDs",
              "timedOut": null,
              "duration": 342,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"nonExisDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const nonExDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: \"https://dev.uniresolver.io/1.0/identifiers/\" + nonExDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(404);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"notFound\");\n    });\n  });\n});",
              "err": {},
              "uuid": "2be5ba4d-b7f1-474f-a802-31a44260ec6d",
              "parentUUID": "3a968e80-6978-46e3-a27b-0eba505b9be8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2be5ba4d-b7f1-474f-a802-31a44260ec6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 342,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "83139d44-2613-4011-a97b-238cb4ddb332",
          "title": "Test Scenario 6: Invalid DID",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns a HTTP code of 400 for an invalid DID",
              "fullTitle": "Test Scenario 6: Invalid DID Returns a HTTP code of 400 for an invalid DID",
              "timedOut": null,
              "duration": 301,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"invalidDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const invalidDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: \"https://dev.uniresolver.io/1.0/identifiers/\" + invalidDid,\n      failOnStatusCode: false\n    }).then(response => {\n      expect(response.status).to.eq(400);\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution\"');\n      expect(response.body.didResolutionMetadata.error).to.eq(\"invalidDid\");\n    });\n  });\n});",
              "err": {},
              "uuid": "f7415afa-f35c-4768-8834-fe29a7a0ecab",
              "parentUUID": "83139d44-2613-4011-a97b-238cb4ddb332",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7415afa-f35c-4768-8834-fe29a7a0ecab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 301,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "41a0f50e-55d9-4ccd-b395-a7bbbfcba6ef",
          "title": "Test Scenario 7: DID URLs with fragments",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Can resolve a DID with a fragment",
              "fullTitle": "Test Scenario 7: DID URLs with fragments Can resolve a DID with a fragment",
              "timedOut": null,
              "duration": 313,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"fragmentDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const fragmentDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: \"https://dev.uniresolver.io/1.0/identifiers/\" + fragmentDid,\n      failOnStatusCode: false,\n      headers: {\n        Accept: \"application/did+ld+json\"\n      }\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      console.log(response);\n      expect(response.status).to.eq(200);\n      expect(response.headers[\"content-type\"]).to.contain(\"application/did+ld+json\");\n      expect(response.body).not.to.have.property(\"didDocument\");\n      expect(response.body).to.have.property(\"@context\"); //FAILS\n      expect(response.body).to.have.property(\"type\");\n      expect(response.body).to.have.property(\"id\"); // FAILS\n      expect(response.body[\"id\"]).to.contain(fragmentDid.split(\"#\")[0]);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: expected 400 to equal 200",
                "estack": "AssertionError: expected 400 to equal 200\n    at Context.eval (http://localhost:61072/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:238:38)",
                "diff": "- 400\n+ 200\n"
              },
              "uuid": "be58aa22-123d-41ec-b675-a6e6621af9cc",
              "parentUUID": "41a0f50e-55d9-4ccd-b395-a7bbbfcba6ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "be58aa22-123d-41ec-b675-a6e6621af9cc"
          ],
          "pending": [],
          "skipped": [],
          "duration": 313,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mocha",
        "configFile": "reporterOpts.json",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}