{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2022-03-09T13:23:34.469Z",
    "end": "2022-03-09T13:24:04.741Z",
    "duration": 30272,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0ecec5b7-b99b-4341-9176-1bb9c5626cea",
      "title": "",
      "fullFile": "cypress/integration/uniresolver_fixtures_spec.js",
      "file": "cypress/integration/uniresolver_fixtures_spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "26ce1bc0-c0ce-4691-bc61-b44a273fcfc8",
          "title": "Test Scenario 1: DID Resolution Result",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A correct DID can be resolved",
              "fullTitle": "Test Scenario 1: DID Resolution Result A correct DID can be resolved",
              "timedOut": null,
              "duration": 30236,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.fixture(\"../fixtures/example_dids.json\").its(\"normalDids\").then(list => {\n  Object.keys(list).forEach(key => {\n    const normalDid = list[key];\n    cy.request({\n      method: \"GET\",\n      url: \"https://dev.uniresolver.io/1.0/identifiers/\" + normalDid\n    }).as(\"request\");\n    cy.get(\"@request\").then(response => {\n      expect(response.status).to.eq(200);\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.headers[\"content-type\"]).to.contain('application/ld+json;profile=\"https://w3id.org/did-resolution');\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocument\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didResolutionMetadata\");\n    });\n    cy.get(\"@request\").then(response => {\n      expect(response.body).to.have.property(\"didDocumentMetadata\");\n    });\n  });\n});",
              "err": {
                "message": "CypressError: `cy.request()` timed out waiting `30000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request",
                "estack": "CypressError: `cy.request()` timed out waiting `30000ms` for a response from your server.\n\nThe request we sent was:\n\nMethod: GET\nURL: https://dev.uniresolver.io/1.0/identifiers/did:sov:WRfXPg8dantKVubE3HX8pw\n\nNo response was received within the timeout.\n\nhttps://on.cypress.io/request\n    at https://dev.godiddy.com/__cypress/runner/cypress_runner.js:160652:78\n    at tryCatcher (https://dev.godiddy.com/__cypress/runner/cypress_runner.js:13022:23)\n    at https://dev.godiddy.com/__cypress/runner/cypress_runner.js:8144:41\n    at tryCatcher (https://dev.godiddy.com/__cypress/runner/cypress_runner.js:13022:23)\n    at Promise._settlePromiseFromHandler (https://dev.godiddy.com/__cypress/runner/cypress_runner.js:10957:31)\n    at Promise._settlePromise (https://dev.godiddy.com/__cypress/runner/cypress_runner.js:11014:18)\n    at Promise._settlePromise0 (https://dev.godiddy.com/__cypress/runner/cypress_runner.js:11059:10)\n    at Promise._settlePromises (https://dev.godiddy.com/__cypress/runner/cypress_runner.js:11135:18)\n    at _drainQueueStep (https://dev.godiddy.com/__cypress/runner/cypress_runner.js:7729:12)\n    at _drainQueue (https://dev.godiddy.com/__cypress/runner/cypress_runner.js:7722:9)\n    at Async.../../node_modules/bluebird/js/release/async.js.Async._drainQueues (https://dev.godiddy.com/__cypress/runner/cypress_runner.js:7738:5)\n    at Async.drainQueues (https://dev.godiddy.com/__cypress/runner/cypress_runner.js:7608:14)\nFrom Your Spec Code:\n    at eval (https://dev.godiddy.com/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:104:12)\nat Array.forEach (<anonymous>)\n    at Context.eval (https://dev.godiddy.com/__cypress/tests?p=cypress/integration/uniresolver_fixtures_spec.js:102:25)",
                "diff": null
              },
              "uuid": "a8945de0-bc62-4d3f-8cc8-8b8fe12819b5",
              "parentUUID": "26ce1bc0-c0ce-4691-bc61-b44a273fcfc8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a8945de0-bc62-4d3f-8cc8-8b8fe12819b5"
          ],
          "pending": [],
          "skipped": [],
          "duration": 30236,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.1"
    }
  }
}